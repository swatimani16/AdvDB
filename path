{"app":{"id":"4097475f-ea5c-426e-b19f-8cd2e3a09736","ver":"21.5.21.1028","status":"Active","application":"lst_quality_inspection","title":"","createdOn":1606822019544,"createdBy":"JGundlap","package":"2e01738e-788d-4bc5-968e-61c8ac911fe4","description":"Application for the Quality Inspection and sending the ERP Confirmation","disabled":false,"ui5_theme":"sap_belize","cus_theme":"","ui5_version":"1.71CDN","enableStylesheet":true,"manifest":"","enableObfuscate":true,"onlyRunLaunchpad":false,"appType":"","ui5_language":null,"enableMultiDevelopment":false,"publicAccess":false,"enableManifest":false,"css":"/*.bulet_point::before{*/\n/*    content:\"\";*/\n/*}*/\n.inProgress {\n    /*font-size: 0.9rem;*/\n    /*font-weight: bold;*/\n    /*color: #009933 !important;*/\n    background-color: #FF9800 !important;\n    color: #fff !important;\n    width: 100% !important;\n    height: 31px !important;\n    /* height: 100% !important; */\n    padding-top: 20px !important;\n    padding: 8px !important;\n    text-shadow: none !important;\n    text-align: center !important;\n}\n\n.labelWO {\n    color: #fff !important;\n    font-size: 1rem;\n    text-shadow: none;\n}\n\n.hold {\n    background-color: #b51602 !important;\n    color: #fff !important;\n    width: 100% !important;\n    height: 31px !important;\n    /* height: 100% !important; */\n    padding-top: 20px !important;\n    padding: 8px !important;\n    text-shadow: none !important;\n    text-align: center !important;\n}\n\n/*Complete*/\n\n.complete {\n    /*font-size: 0.9rem;*/\n    /*font-weight: bold;*/\n    /*color: #009933 !important;*/\n    background-color: #009933 !important;\n    color: #fff !important;\n    width: 100% !important;\n    height: 31px !important;\n    /* height: 100% !important; */\n    padding-top: 20px !important;\n    padding: 8px !important;\n    text-shadow: none !important;\n    text-align: center !important;\n}\n.__jsview2--oLabelIApprove{\n    \n}\n\n.blocked {\n    background-color: #b51602 !important;\n    color: #fff !important;\n    width: 100% !important;\n    height: 31px !important;\n    /* height: 100% !important; */\n    padding-top: 20px !important;\n    padding: 8px !important;\n    text-shadow: none !important;\n    text-align: center !important;\n}\n\n.loginGrid {\n    width: 100%;\n    max-width: 450px;\n    min-width: 350px;\n    text-align: left;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -52%);\n}\n","header":"// <script type=\"text/javascript\">\r\nnew QRCode(document.getElementById(\"qrcode\"), \"http://jindo.dev.naver.com/collie\");\r\n</script>\r\n<script src=\"/media/root/LST/jspdf.min.js\"></script>\r\n<script src=\"/media/root/LST/jspdf.plugin.autotable.js\"></script>\r\n\r\n<script src=\"https://dev.jnjux.com/media/root/QRCODE/qrcode.js\"></script>\r\n<script src=\"https://eudev2.jnjux.com/media/root/LST/qrcode.js\"></script>\r\n\r\n\r\n<script src=\"https://eudev2.jnjux.com/media/root/LST/VanillaQR.js\"></script>\r\n\r\n\r\n<script src=\"https://eudev2.jnjux.com/media/root/RSC/Johnson_and_Johnson_logo_red.png\"></script>\r\n<script src=\"/media/root/LST/qrcode.min.js\"></script>","globalScript":"","objects":[{"fieldNo":"97f5ea17-cf34-43ed-d26a-d3f1c47a47e8","fieldName":"oApp","fieldParent":0,"fieldPos":1,"fieldType":"sap.m.App","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"5210e368-768a-4f2a-bf7f-1624c7004f2f","fieldName":"pageQualityInspection","fieldParent":"97f5ea17-cf34-43ed-d26a-d3f1c47a47e8","fieldPos":2,"fieldType":"sap.m.Page","script":"","request":[],"response":[],"attributes":[{"attribute":"showHeader","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"11dc1afa-1547-4fa5-9fc3-5823ffc0f8b0","fieldName":"barQualityinspection","fieldParent":"5210e368-768a-4f2a-bf7f-1624c7004f2f","fieldPos":3,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"custom_red_bar_header","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"addContent","script":"","translation":[]}]},{"fieldNo":"8b6c31d9-2278-407b-93e1-573e1541dfa5","fieldName":"Right","fieldParent":"11dc1afa-1547-4fa5-9fc3-5823ffc0f8b0","fieldPos":4,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"bda351ff-ed3a-43a6-b09d-3a777c95f9f9","fieldName":"oLabelUserInfo","fieldParent":"8b6c31d9-2278-407b-93e1-573e1541dfa5","fieldPos":5,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"d16e97ee-3d3c-419a-c2a4-e996a010358a","fieldName":"oIconSettingsApp","fieldParent":"8b6c31d9-2278-407b-93e1-573e1541dfa5","fieldPos":6,"fieldType":"sap.ui.core.Icon","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/bell","script":"","translation":[]},{"attribute":"color","grouping":"Properties","value":"white","script":"","translation":[]}]},{"fieldNo":"bbad75a2-6787-47d8-d3d5-38a8541d1802","fieldName":"oIconQuestion","fieldParent":"8b6c31d9-2278-407b-93e1-573e1541dfa5","fieldPos":7,"fieldType":"sap.ui.core.Icon","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-regular/question-circle","script":"","translation":[]},{"attribute":"color","grouping":"Properties","value":"white","script":"","translation":[]}]},{"fieldNo":"69488d17-c792-47a0-9709-4183ebae0c52","fieldName":"oButtonLogout","fieldParent":"8b6c31d9-2278-407b-93e1-573e1541dfa5","fieldPos":8,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"tooltip","grouping":"Properties","value":"Log Off","script":"","translation":[{"language":"FR","value":" se déconnecter"},{"language":"DE","value":"Abmelden "}]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"userButton","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://log","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"// AppCache.Logout();\noDialogLogoutMessage.open();","translation":[]}]},{"fieldNo":"49193eb4-64d5-4bf5-f9fd-ed1a1ec4f293","fieldName":"Middle","fieldParent":"11dc1afa-1547-4fa5-9fc3-5823ffc0f8b0","fieldPos":9,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"02ea38a9-082a-4882-a2f0-cebeff31e7a2","fieldName":"lblQualityInspection","fieldParent":"49193eb4-64d5-4bf5-f9fd-ed1a1ec4f293","fieldPos":10,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"tooltip","grouping":"Properties","value":"Quality Inspection","script":"","translation":[{"language":"FR","value":"Exécution de la commande"},{"language":"DE","value":"Ausführung von Arbeitsaufträgen"}]},{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"61beaf13-66c3-452d-99cd-063e135dd880","fieldName":"Left","fieldParent":"11dc1afa-1547-4fa5-9fc3-5823ffc0f8b0","fieldPos":11,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"9079ba6d-5dcc-4271-828a-adcf01342fe3","fieldName":"btnNav","fieldParent":"61beaf13-66c3-452d-99cd-063e135dd880","fieldPos":12,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"sidenav1","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/bars","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"// AppCache.Back();\n\nif (toolSideNav.getVisible() === true) {\n    toolSideNav.setVisible(false);\n} else if (toolSideNav.getVisible() === false) {\n    toolSideNav.setVisible(true);\n}\n","translation":[]}]},{"fieldNo":"1a588a9e-8bc9-4f3a-fd4f-4d541d6c4f09","fieldName":"logoDetailsPhone","fieldParent":"61beaf13-66c3-452d-99cd-063e135dd880","fieldPos":13,"fieldType":"sap.m.Image","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassVisibility","grouping":"Properties","value":"sapUiVisibleOnlyOnPhone","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"/media/root/jjiot/images/logo-short.png","script":"","translation":[]}]},{"fieldNo":"10524df9-65f6-49de-80b1-fda2450cb240","fieldName":"logoDetailsTablet","fieldParent":"61beaf13-66c3-452d-99cd-063e135dd880","fieldPos":14,"fieldType":"sap.m.Image","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassVisibility","grouping":"Properties","value":"sapUiVisibleOnlyOnTablet","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"/media/root/jjiot/images/logo-short.png","script":"","translation":[]}]},{"fieldNo":"c0f769f2-9564-456b-80f9-f30e22500847","fieldName":"logoDetailsDesktop","fieldParent":"61beaf13-66c3-452d-99cd-063e135dd880","fieldPos":15,"fieldType":"sap.m.Image","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassVisibility","grouping":"Properties","value":"sapUiVisibleOnlyOnDesktop","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"/media/root/jjiot/images/logo-full.png","script":"","translation":[]}]},{"fieldNo":"f37b6d64-0236-4909-bb92-db341af78274","fieldName":"toolSideNav","fieldParent":"5210e368-768a-4f2a-bf7f-1624c7004f2f","fieldPos":16,"fieldType":"sap.tnt.ToolPage","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"sidenav","script":"","translation":[]}]},{"fieldNo":"b0790142-7412-4bd9-a2d6-0d7aab69cef8","fieldName":"oToolHeader","fieldParent":"f37b6d64-0236-4909-bb92-db341af78274","fieldPos":17,"fieldType":"sap.tnt.ToolHeader","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiForceWidthAuto","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"sidenav custom_red_bar_header","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Transparent","script":"","translation":[]}]},{"fieldNo":"3aa54b44-6133-49c6-d2f7-0871e3c4d19a","fieldName":"btnNavShowHide","fieldParent":"b0790142-7412-4bd9-a2d6-0d7aab69cef8","fieldPos":18,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"sidenav","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/bars","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"if(toolSideNav.getVisible() === true){\ntoolSideNav.setVisible(false);\n}else if(toolSideNav.getVisible() === false){\n  toolSideNav.setVisible(true);  \n}\n\n","translation":[]}]},{"fieldNo":"c1d74449-a293-454b-a5ee-7284bdd0743b","fieldName":"jnjLogo","fieldParent":"b0790142-7412-4bd9-a2d6-0d7aab69cef8","fieldPos":19,"fieldType":"sap.m.Image","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"/media/root/RSC/Johnson_and_Johnson_logo.png","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"AppCache.Back();","translation":[]}]},{"fieldNo":"3065a4b2-9046-45a6-877a-69e278e76c36","fieldName":"sideNavigation","fieldParent":"f37b6d64-0236-4909-bb92-db341af78274","fieldPos":20,"fieldType":"sap.tnt.SideNavigation","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"sidenav","script":"","translation":[]}]},{"fieldNo":"134ced50-8688-48ac-a62c-0859248fa0b7","fieldName":"navigationItems","fieldParent":"3065a4b2-9046-45a6-877a-69e278e76c36","fieldPos":21,"fieldType":"sap.tnt.NavigationList","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setItem","script":"","translation":[]}]},{"fieldNo":"3ed12f32-1b41-4dbe-9c0a-295b15fb76d9","fieldName":"home","fieldParent":"134ced50-8688-48ac-a62c-0859248fa0b7","fieldPos":22,"fieldType":"sap.tnt.NavigationListItem","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Home","script":"","translation":[{"language":"FR","value":"Home"},{"language":"DE","value":"Home"}]},{"attribute":"key","grouping":"Properties","value":"Home","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/home","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"AppCache.Back();\nbtnNav.firePress();\nclearFields();","translation":[]}]},{"fieldNo":"066e070a-bbd9-4bea-a74a-175916a894fb","fieldName":"hBoxScanRow","fieldParent":"5210e368-768a-4f2a-bf7f-1624c7004f2f","fieldPos":23,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"fd62ae50-0258-4202-8b52-f87ecf8d7dea","fieldName":"gridScanRow","fieldParent":"066e070a-bbd9-4bea-a74a-175916a894fb","fieldPos":24,"fieldType":"sap.ui.layout.Grid","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"defaultSpan","grouping":"Properties","value":"l5","script":"","translation":[]}]},{"fieldNo":"d67d69fc-e663-4c06-9f78-615fe408768b","fieldName":"gridScan","fieldParent":"fd62ae50-0258-4202-8b52-f87ecf8d7dea","fieldPos":25,"fieldType":"sap.ui.layout.GridData","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"379df13f-7ce0-46ff-d90b-29f6b80d215a","fieldName":"hboxScan","fieldParent":"d67d69fc-e663-4c06-9f78-615fe408768b","fieldPos":26,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"86f2edeb-8ad1-4e8f-981a-480338af9533","fieldName":"scanTOLabel","fieldParent":"379df13f-7ce0-46ff-d90b-29f6b80d215a","fieldPos":27,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"tooltip","grouping":"Properties","value":"Enter TO Number","script":"","translation":[{"language":"FR","value":"unité de traitement / numéro commande pick"},{"language":"DE","value":"Eingabe Pickauftragsnummer/Handling Unit Nummer"}]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"https://eudev2.jnjux.com/media/root/LST/qrImage.png","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"99f89d5c-e453-41f7-d789-6dc8cf432071","fieldName":"inputTO","fieldParent":"379df13f-7ce0-46ff-d90b-29f6b80d215a","fieldPos":28,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"255","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"submit","grouping":"Events","value":"Anonymous Function","script":"// if TO is empty throw error else allow to scan TO and get the Header and WOdetails\nif (inputTO.getValue() === \"\") {\n    getDialog(lblPleaseEnterTON.getText()); \n\n} else {\n  \n    var barcodeIdentifier = \"transformOrdNo\";\n   \n    getQiOverDetails(barcodeIdentifier, \"GET\");\n    g_OEName = \"\"\n    g_QIOperator;\n    getLDAPInfo(g_user)\n    inputPickScan.setEnabled(false);\n\n}","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"if(inputTO.getValue()===\"\"){\n    inputPickScan.setEnabled(true);\n}else\n{\n       inputPickScan.setEnabled(false);\n \n}\n// Clearing the WO scan \nwrkOrdScan.setValue()\nLineClearance.setSelected(false);","translation":[]}]},{"fieldNo":"01d72b77-755b-459c-b43d-4525a990d839","fieldName":"scanPICKHU","fieldParent":"379df13f-7ce0-46ff-d90b-29f6b80d215a","fieldPos":29,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"tooltip","grouping":"Properties","value":"Enter HU/PICK Number","script":"","translation":[{"language":"FR","value":"unité de traitement / numéro commande pick"},{"language":"DE","value":"Eingabe Pickauftragsnummer/Handling Unit Nummer"}]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"https://eudev2.jnjux.com/media/root/LST/qrImage.png","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e0f90c97-cd0e-4d08-92d2-eb50f7e39680","fieldName":"inputPickScan","fieldParent":"379df13f-7ce0-46ff-d90b-29f6b80d215a","fieldPos":30,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"255","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"submit","grouping":"Events","value":"Anonymous Function","script":"// Check if empty input throw error message else allow scanning to get Header and WO Details\nif (inputPickScan.getValue() === \"\") {\n    getDialog(lblEnterHUPick.getText()); \n\n} else {\n    if (g_barcodeIdentifier !== \"\") {\n        g_OEName = \"\"\n        getQiOverDetails(g_barcodeIdentifier, \"GET\");\n        getLDAPInfo(g_user)\n        g_QIOperator;\n        inputTO.setEnabled(false);\n    }\n}\n\n\n","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"//scan hu/pick input is empty, enabling the TO input field as editable true \n\nif(inputPickScan.getValue()===\"\"){\n    inputTO.setEnabled(true);\n    \n}else\n{\n      inputTO.setEnabled(false);\n  \n}\nwrkOrdScan.setValue()\nLineClearance.setSelected();","translation":[]}]},{"fieldNo":"7e06e7b0-c725-48d6-fb4b-a0e620e9ed89","fieldName":"ScrollHeader","fieldParent":"5210e368-768a-4f2a-bf7f-1624c7004f2f","fieldPos":31,"fieldType":"sap.m.ScrollContainer","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"28e4b380-46fd-472b-a9af-717d7559b4f4","fieldName":"hBoxHeader","fieldParent":"7e06e7b0-c725-48d6-fb4b-a0e620e9ed89","fieldPos":32,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"5e84dded-0001-4eaa-b3f4-8cad05e74622","fieldName":"vBoxTransSite","fieldParent":"28e4b380-46fd-472b-a9af-717d7559b4f4","fieldPos":33,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]}]},{"fieldNo":"6a2110c5-dc1e-43ca-c4de-abba150dff4d","fieldName":"oLabelTransSite","fieldParent":"5e84dded-0001-4eaa-b3f4-8cad05e74622","fieldPos":34,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"d8a450c0-5f50-419d-baa5-8a8a58f88582","fieldName":"oInputTransSite","fieldParent":"5e84dded-0001-4eaa-b3f4-8cad05e74622","fieldPos":35,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new1","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"4ac7ab53-dd4e-4217-ea5d-979f31ba0d38","fieldName":"oVBoxShipToCountry","fieldParent":"28e4b380-46fd-472b-a9af-717d7559b4f4","fieldPos":36,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]}]},{"fieldNo":"4a633680-9738-4ccb-cf40-10661896cffd","fieldName":"oLabelShipTOCountry","fieldParent":"4ac7ab53-dd4e-4217-ea5d-979f31ba0d38","fieldPos":37,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"2b4d261e-d9fa-4fa3-d96f-5ef8054511cb","fieldName":"oInputShipToCountry","fieldParent":"4ac7ab53-dd4e-4217-ea5d-979f31ba0d38","fieldPos":38,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new1","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"594c6ae4-1ae5-4be7-ca7a-12e9eaede190","fieldName":"vBoxToDate","fieldParent":"28e4b380-46fd-472b-a9af-717d7559b4f4","fieldPos":39,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]}]},{"fieldNo":"b6e241e6-d42c-4551-bea6-aad72d83bc2d","fieldName":"oLabelTODate","fieldParent":"594c6ae4-1ae5-4be7-ca7a-12e9eaede190","fieldPos":40,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"4e47d726-94bf-4ed5-d40b-511706803394","fieldName":"oInputTODate","fieldParent":"594c6ae4-1ae5-4be7-ca7a-12e9eaede190","fieldPos":41,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"250px","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new1","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"7d8797e1-5998-478d-dae1-aa3d18f3dc57","fieldName":"vBoxQualityInsp","fieldParent":"28e4b380-46fd-472b-a9af-717d7559b4f4","fieldPos":42,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]}]},{"fieldNo":"b4322340-c814-4dff-97a3-37b9fcd7e4d5","fieldName":"lblQualInsp","fieldParent":"7d8797e1-5998-478d-dae1-aa3d18f3dc57","fieldPos":43,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"a03c0fd0-8d46-4797-aeae-b34207df52bc","fieldName":"inpQualInspect","fieldParent":"7d8797e1-5998-478d-dae1-aa3d18f3dc57","fieldPos":44,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"250px","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new1","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"74b0829f-6c89-4279-eb38-e31eef04c35e","fieldName":"vboxTo","fieldParent":"28e4b380-46fd-472b-a9af-717d7559b4f4","fieldPos":45,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]}]},{"fieldNo":"7f0b1fcb-8793-4a87-d0ae-062c51869c5b","fieldName":"oLabelTOStat","fieldParent":"74b0829f-6c89-4279-eb38-e31eef04c35e","fieldPos":46,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"76c65e31-efd2-48bc-bc14-89db11f50292","fieldName":"oInputTOStat","fieldParent":"74b0829f-6c89-4279-eb38-e31eef04c35e","fieldPos":47,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new1","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"93e34ef1-c017-41e6-d1bf-82a75fc437b4","fieldName":"oBoxLineClearance","fieldParent":"28e4b380-46fd-472b-a9af-717d7559b4f4","fieldPos":48,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"305933b4-a64a-49d3-ebfd-4c1c4cf1406e","fieldName":"oLabelLineClearancet","fieldParent":"93e34ef1-c017-41e6-d1bf-82a75fc437b4","fieldPos":49,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"aca1f405-344a-4725-ce91-a67740e8fa2b","fieldName":"LineClearance","fieldParent":"93e34ef1-c017-41e6-d1bf-82a75fc437b4","fieldPos":50,"fieldType":"sap.m.CheckBox","script":"","request":[],"response":[],"attributes":[{"attribute":"textAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"checkBox","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"// If line is selected, make the work order Number input field editable.\nif(LineClearance.getSelected()){\n    wrkOrdScan.setEditable(true);\n}else{\n    wrkOrdScan.setEditable(false);\n}","translation":[]}]},{"fieldNo":"a100b2b9-1a3b-44c3-c470-3ed4a1345055","fieldName":"vBoxWo","fieldParent":"28e4b380-46fd-472b-a9af-717d7559b4f4","fieldPos":51,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"c97123f5-24f5-413f-cd8b-503c46c835b2","fieldName":"lblWo","fieldParent":"a100b2b9-1a3b-44c3-c470-3ed4a1345055","fieldPos":52,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"fb074bf1-0c48-41ac-8881-ce6a83d98143","fieldName":"wrkOrdScan","fieldParent":"a100b2b9-1a3b-44c3-c470-3ed4a1345055","fieldPos":53,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new1","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"submit","grouping":"Events","value":"Anonymous Function","script":"// If no value entered and scanned, throw error message else scan the num, update status and make fields editable\n\nif (wrkOrdScan.getValue() === \"\") {\n    getDialog(lblEnterWO.getText())\n} else {\n    var woNum = wrkOrdScan.getValue();\n    g_OEName = \"final\"\n    scanWO(woNum)\n}\nformLoginButton.setEnabled(false);","translation":[]}]},{"fieldNo":"21146743-8000-4a8e-b358-f5913581d734","fieldName":"panelQualityInspection","fieldParent":"5210e368-768a-4f2a-bf7f-1624c7004f2f","fieldPos":54,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"e99560e4-c805-49ef-8ced-c7aa0a51e543","fieldName":"btnClearSaveWrkDetailsLbl","fieldParent":"21146743-8000-4a8e-b358-f5913581d734","fieldPos":55,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"addContent","script":"","translation":[]}]},{"fieldNo":"0a5b8699-5bdd-434a-8947-42129d2a5675","fieldName":"Left","fieldParent":"e99560e4-c805-49ef-8ced-c7aa0a51e543","fieldPos":56,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"3ce372c8-1f10-415e-aebe-23723604bc2b","fieldName":"lblWrkOrderDetails","fieldParent":"0a5b8699-5bdd-434a-8947-42129d2a5675","fieldPos":57,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"barContentTextColor","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"b283a208-9709-4dad-f679-4d1d2fcb13f5","fieldName":"Right","fieldParent":"e99560e4-c805-49ef-8ced-c7aa0a51e543","fieldPos":58,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"370a8c69-cb3a-4ece-c109-02e6e8d69bd3","fieldName":"btnClear","fieldParent":"b283a208-9709-4dad-f679-4d1d2fcb13f5","fieldPos":59,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"80px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"tooltip","grouping":"Properties","value":"Clear","script":"","translation":[{"language":"FR","value":"Initialiser"},{"language":"DE","value":"Löschen"}]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"clearFields()","script":"clearFields()","translation":[]}]},{"fieldNo":"a817be16-eb20-409d-c7e9-c5ee1e71bc42","fieldName":"btnSave","fieldParent":"b283a208-9709-4dad-f679-4d1d2fcb13f5","fieldPos":60,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"80px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"greenbtn","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"var tbData = tblQuality.getModel().getData();\nvar statusData = tbData.filter(function(item, i) {\n    return item.workOrderStatus === g_COMPLETED_STATUS || item.workOrderStatus === g_BLOCKED\n\n\n});\n// Checking if the status of the of the WO is COMPLETED/BLOCKED, if last WO then display another message\nif ((tbData.length - 1) === statusData.length) {\n    //change message for the last WO else keep same message\n    txtExec.setText(lblInspectionOf.getText() + \" \" + inputTO.getValue() + \" \" + lblis.getText())\n} else {\n    txtExec.setText(lblLineExec.getText());\n}\n//  check the required fields (reject quantity, reject reason)\nvar flag = checkmandatoryFields()\n// if valid then open line clearance\nif (flag) {\n    dilogExecutive.open();\n} else {\n    // do nothing- error message already on the screen\n}\n\n\n\n/**\n * Name: checkmandatoryFields\n * Description: To check if the reject reason, reject quantity fields values are entered before executing line clearance\n * Created By :Swati Mani  \n * Created At: 03/17/2021\n */\n\nfunction checkmandatoryFields() {\n    // Flag: true if mandatory fields are entered else false show error\n    var flag = true\n    var tblQualityData = tblQuality.getModel().getData();\n    var scannedWO = wrkOrdScan.getValue();\n\n    let woFoundData = tblQualityData.find(line => {\n        return line.workOrder === scannedWO;\n    })\n    let woFoundIndex = tblQualityData.findIndex(line => {\n        return line.workOrder === scannedWO;\n    })\n    if (woFoundData) {\n        // check if the disposition is selected or undefined, if not selected-> show message else check other required fields\n        if (woFoundData.qaDisposition === \"\" || woFoundData.qaDisposition === undefined) {\n            getDialog(lblenterDisposition.getText());\n            tblQuality.getRows()[woFoundIndex].getCells()[5].setValueState(\"Error\");\n            flag = false\n        } else {\n            // if the WO which is scanned is in rejected state then print bcr and change status\n            if (woFoundData.qaDisposition === g_REJECT) {\n\n                // validation that the reject qty value should not be 0\n                if (parseInt(woFoundData.qty_cancel) === 0 || woFoundData.qty_cancel === null || woFoundData.qty_cancel === \"\") {\n                    getDialog(lblRejectQty0.getText());\n\n                    tblQuality.getRows()[woFoundIndex].getCells()[7].setValueState(\"Error\");\n                    flag = false\n                }\n                // if reject reason is not selected, validation for the same\n                else if (!woFoundData.reasonCode) {\n                    getDialog(lblEnterReasonCode.getText());\n\n                    tblQuality.getRows()[woFoundIndex].getCells()[8].mAggregations.items[0].setValueState(\"Error\");\n                    flag = false\n                }\n            }\n        }\n\n    }\n\n    return flag\n\n}","translation":[]}]},{"fieldNo":"053247e1-bad7-48ca-ce3b-96c6bc20838e","fieldName":"oIconpdf","fieldParent":"b283a208-9709-4dad-f679-4d1d2fcb13f5","fieldPos":61,"fieldType":"sap.ui.core.Icon","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"tooltip","grouping":"Properties","value":"Download as PDF","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"icons pdf","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-regular/file-pdf","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"let tableData = tblQuality.getModel().getData();\nvar columnsArr = [];\nfor (let x = 0; x < tblQuality.getColumns().length; x++) {\n    if (tblQuality.getColumns()[x].getLabel()) {\n        columnsArr.push(tblQuality.getColumns()[x].getLabel().getText());\n    }\n}\ngeneratePdf(tableData, columnsArr, \"Quality Inspection Details\");","translation":[]}]},{"fieldNo":"d35686a4-cf3f-4818-be37-cc5927674749","fieldName":"oIconexcel","fieldParent":"b283a208-9709-4dad-f679-4d1d2fcb13f5","fieldPos":62,"fieldType":"sap.ui.core.Icon","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"tooltip","grouping":"Properties","value":"Download as Excel","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"icons excel","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-regular/file-excel","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"genarateExcel(tblQuality,\"Quality Inspection Details\");","script":"genarateExcel(tblQuality,\"Quality Inspection Details\");","translation":[]}]},{"fieldNo":"ccee95c4-0449-434e-e455-5e6643e3f47c","fieldName":"tblQuality","fieldParent":"21146743-8000-4a8e-b358-f5913581d734","fieldPos":63,"fieldType":"sap.ui.table.Table","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"5","script":"","translation":[]},{"attribute":"enableSelectAll","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"0415ff28-e367-4d39-db16-b6a4abb7bf12","fieldName":"oBarContentToPagination","fieldParent":"21146743-8000-4a8e-b358-f5913581d734","fieldPos":64,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"addContent","script":"","translation":[]}]},{"fieldNo":"a77e9649-8a03-4abd-84bc-74d019ab835c","fieldName":"RightToPaginationCreate","fieldParent":"0415ff28-e367-4d39-db16-b6a4abb7bf12","fieldPos":65,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"deddd43a-f4b9-421f-ad69-49ef920f00c5","fieldName":"oLabelToRight","fieldParent":"a77e9649-8a03-4abd-84bc-74d019ab835c","fieldPos":66,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"db7946ff-ae75-475f-d30a-e4b23327f918","fieldName":"MiddleToPagination","fieldParent":"0415ff28-e367-4d39-db16-b6a4abb7bf12","fieldPos":67,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"256b906a-38f9-468e-8c06-172d86572022","fieldName":"oHTMLObjectTo","fieldParent":"db7946ff-ae75-475f-d30a-e4b23327f918","fieldPos":68,"fieldType":"sap.ui.core.HTML","script":"","request":[],"response":[],"attributes":[{"attribute":"content","grouping":"Properties","value":"<div id='To'> </div>","script":"","translation":[]},{"attribute":"afterRendering","grouping":"Events","value":"setWoPagination();","script":"setWoPagination();","translation":[]}]},{"fieldNo":"cedc1b68-e3f1-477d-f32c-69c5c5e92fbb","fieldName":"LeftPaginationTo","fieldParent":"0415ff28-e367-4d39-db16-b6a4abb7bf12","fieldPos":69,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"c94c0935-e3c2-4f7f-e575-f87f7e62ab51","fieldName":"oLabelToLeft","fieldParent":"cedc1b68-e3f1-477d-f32c-69c5c5e92fbb","fieldPos":70,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"318e1432-5da2-4401-d61e-a79724b33b3f","fieldName":"Models","fieldParent":99999,"fieldPos":71,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"bcd99300-37c8-4920-f1f1-d26373e4a809","fieldName":"mdlBlockedLocationConfig","fieldParent":"318e1432-5da2-4401-d61e-a79724b33b3f","fieldPos":72,"fieldType":"neptune.model.object","bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0f1f089d-d8b8-4654-e8fc-d7890ced39f3","fieldName":"mdlItemDetails","fieldParent":"318e1432-5da2-4401-d61e-a79724b33b3f","fieldPos":73,"fieldType":"neptune.model.object","bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"f8b7278b-25eb-4ca2-e5d7-7dae6281b547","fieldName":"mdlLocationSettings","fieldParent":"318e1432-5da2-4401-d61e-a79724b33b3f","fieldPos":74,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"96c878e2-3f9d-4781-ec4c-7c109ae5c470","fieldName":"oModelUserLocation","fieldParent":"318e1432-5da2-4401-d61e-a79724b33b3f","fieldPos":75,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"6e93a0fe-4aec-4496-fdad-1e96ca024b90","fieldName":"mdlOrderStatus","fieldParent":"318e1432-5da2-4401-d61e-a79724b33b3f","fieldPos":76,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ed652203-112e-4c5b-8ae3-696ff217db43","fieldName":"mdlLabels","fieldParent":"318e1432-5da2-4401-d61e-a79724b33b3f","fieldPos":77,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8123b006-675e-4f27-9628-8e6c6242c5c6","fieldName":"mdlLDAPInfo","fieldParent":"318e1432-5da2-4401-d61e-a79724b33b3f","fieldPos":78,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"2c599b58-a35c-4da7-92fd-cc56ee233731","fieldName":"mdlReasonCodes","fieldParent":"318e1432-5da2-4401-d61e-a79724b33b3f","fieldPos":79,"fieldType":"neptune.model.object","bindingValue":"API rsc_order_execution_reason_codes>rsc_order_execution_reason_codes","bindingType":"u","bindingSource":"API","bindingParentID":"5842a095-a22f-46b4-aff0-2def73aae68c","bindingPathID":"40313f43-2f7f-4c51-e534-b3f473cdc3d7","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"74030d7a-b47b-4598-deb8-f004788642a7","fieldName":"mdlMachineIp","fieldParent":"318e1432-5da2-4401-d61e-a79724b33b3f","fieldPos":80,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"40a92886-fa40-4746-fddc-62f57700c5cb","fieldName":"pagination","fieldParent":99999,"fieldPos":81,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8de426f8-6fd0-4695-e59e-54bbc953004b","fieldName":"Pagination","fieldParent":"40a92886-fa40-4746-fddc-62f57700c5cb","fieldPos":82,"fieldType":"neptune.Script","script":"/**\n * Name: Pagination\n * Description: Function to handle pagination for Wo Details TABLE.\n * Created By :Aswini Allugunti  \n * Created At:12/15/2020\n * CR:  \n */\n\nfunction setWoPagination() {\n    //if Table is oTable\n    var length = tblQuality.getModel().getData().length; //if Table is oTable\n    var noOfItemsPerPage = 12;\n    var currentPageNo = 1;\n    var totalNumberOfPages = Math.ceil(parseInt(length) / noOfItemsPerPage);\n    var newItemsEnd = 12;\n    var newItemsstart = 0;\n    var arrayItem = [];\n\n    for (var i = newItemsstart; i < newItemsEnd; i++) {\n        if (tblQuality.getModel().getData()[i] !== undefined) { //if Table is oTable\n            var data = tblQuality.getModel().getData()[i]; //if Table is oTable\n            arrayItem.push(data);\n        }\n    }\n\n    var oModelItem = new sap.ui.model.json.JSONModel(arrayItem);\n    \n    oModelItem.setData(arrayItem);\n    tblQuality.setModel(oModelItem);\n    tblQuality.bindRows(\"/\");\n    $(\"#To\").pagination({\n        items: 100,\n        itemsOnPage: 100,\n        currentPage: currentPageNo,\n        pages: totalNumberOfPages,\n        prevText: 'Prev',\n        nextText: 'Next',\n        cssStyle: 'light-theme',\n        onPageClick: function() {\n            var pageNo = $(\"#pagination\").pagination('getCurrentPage');\n            currentPageNo = pageNo;\n\n            newItemsEnd = 12 * currentPageNo;\n            newItemsstart = newItemsEnd - 12;\n            arrayItem = [];\n            for (i = newItemsstart; i < newItemsEnd; i++) {\n                if (tblQuality.getModel().getData()[i] !== undefined) //if Table is oTable\n                    arrayItem.push(tblQuality.getModel().getData()[i]); //if Table is oTable\n            }\n\n            var oModelItem = new sap.ui.model.json.JSONModel(arrayItem);\n            // tblQuality.unbindRows(); //if Table is oTable\n            oModelItem.setData(arrayItem);\n            tblQuality.setModel(oModelItem); //if Table is oTable\n            tblQuality.bindRows(\"/\"); //if Table is oTable\n\n\n        }\n\n    });\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"3d35d688-b59e-43da-ac6a-76adc5860126","fieldName":"PDF_EXCEL_Download","fieldParent":99999,"fieldPos":83,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"45d00e99-ee72-41ef-9798-124c88a9d5da","fieldName":"pdfDownload","fieldParent":"3d35d688-b59e-43da-ac6a-76adc5860126","fieldPos":84,"fieldType":"neptune.Script","script":"/**\n * Name: PDF Download \n * Description:  Function used to handle PDF download\n * Created By :Aswini Allugunti\n * Created At: 17/11/2020\n * CR:   \n * @param {JSON} tableData Pass the array of data from table without key\n * @param {Object} headers send the header object from table header \n * @param {String} tableFlag sends the flag name to determine what needs to be printed. \n * @param {String} title sends the filename to export with.  \n\n  */\n\nfunction generatePdf(tableData, headers, title) {\n    \n    var doc = new jsPDF('l', 'pt', [1300, 650]);\n    doc.setFontSize(7);\n    var height = doc.internal.pageSize.height; // SWAP 8/19\n    var width = doc.internal.pageSize.width; // SWAP 8/19\n    var finalData = [];\n    for (let x = 0; x < tableData.length; x++) {\n\n        finalData[x] = [\n            tableData[x].workOrder,\n            tableData[x].product,\n            tableData[x].batch,\n            tableData[x].qty,\n            tableData[x].workOrderStatus,\n            tableData[x].qaDisposition,\n            tableData[x].qty_accept,\n            tableData[x].qty_cancel,\n            tableData[x].reasonCode,\n            tableData[x].woComments,\n\n        ];\n\n    }\n\n    doc.setFontSize(18);\n    var text = title;\n    var xOffset = (doc.internal.pageSize.width / 2) - (doc.getStringUnitWidth(text) * doc.internal.getFontSize() / 2);\n    doc.text(text, xOffset, 28, {\n        align: \"center\"\n    });\n\n    doc.setFontSize(7);\n    doc.autoTable({\n        head: [\n            headers\n        ],\n        body: finalData,\n        headStyles: {\n            fillColor: [10, 140, 170],\n            fontSize: 8\n        },\n        bodyStyles: {\n            fontSize: 7\n        },\n        styles: {\n            overflow: 'linebreak',\n            columnWidth: 'wrap',\n            halign: 'left'\n        },\n        columnStyles: {\n            11: {\n                cellWidth: 120\n            }\n        },\n        margin: {\n            top: 70\n        },\n        theme: 'grid',\n\n    });\n    var fileName = title;\n    fileName += \"RSC_\" + new Date().getTime();\n    doc.save(fileName);\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"5f467789-a016-4ed0-91e0-d2270472e22d","fieldName":"FunctionExcel","fieldParent":"3d35d688-b59e-43da-ac6a-76adc5860126","fieldPos":85,"fieldType":"neptune.Script","script":"/**\n * Name: Excel Download \n * Description:  Function used to handle Excel download\n * Created By : Aswini Allugunti\n * Created At: 11/14/2020\n * CR:   \n * @param {JSON} JsonData pass the json from the model of table\n * @param {String} ReportTitle the name of the excel\n */\n\n\n\nfunction genarateExcel(responseItems, fileName) {\n\n    var headerData = responseItems.getModel().getData();\n\n    var fileName = fileName + \".xlsx\";\n    var headerDataFinal = createExcelData(responseItems);\n\n    var headerSheet = createHTMLTable(headerDataFinal);\n\n    var book = TableToExcel.tableToBook(headerSheet, {\n        sheet: {\n            name: lblWrkOrderDetails.getText()\n        }\n    });\n\n    TableToExcel.save(book, fileName);\n}\n\n/**\n * Name: createExcelData\n * Description: Function to dynamicaly create excel data using table\n * Created By :  Suman Dey  \n * Created At: 09/25/2020\n * CR:   \n * @param {Object} tableName send the table object\n * @return {JSON} its return the json data which can be converted to excel.\n */\nfunction createExcelData(tableName, data) {\n\n    var finalData = [];\n    if (tableName.getModel() === undefined) {\n        return finalData;\n    }\n    var columnsArrHeader = {};\n    for (let x = 0; x < tableName.getColumns().length; x++) {\n        var column = tableName.getColumns()[x];\n        var label = column.getLabel();\n        if (label && column.getVisible()) {\n            var isDublicate = checkDublicate(columnsArrHeader, label.getText());\n            if (isDublicate) {\n                columnsArrHeader[column.mProperties.filterProperty] = ` ${label.getText()} `;\n            } else {\n                columnsArrHeader[column.mProperties.filterProperty] = label.getText();\n            }\n\n        }\n    }\n    var tableData;\n    if (data === undefined) {\n        tableData = tableName.getModel().getData();\n    } else {\n        tableData = data;\n    }\n\n\n    var finalData = [];\n    var keys = Object.keys(columnsArrHeader);\n    for (let x = 0; x < tableData.length; x++) {\n        var data = tableData[x];\n        var obj = {};\n        keys.forEach(key => {\n            if (data[key] === null || data[key] === undefined) {\n                data[key] = \"\";\n            }\n            if (Object.prototype.toString.call(data[key]) === \"[object Date]\") {\n                if (isNaN(new Date(data[key]).getTime())) {\n                    data[key] = \"\";\n                }\n            }\n            if (data[key].toString().length < 10 ||\n                key.toLowerCase() === \"gtin\" ||\n                data[key] === \"\" ||\n                isNaN(new Date(Number(data[key])))) {\n                if (key === \"refLink\") {\n                    if (data.hasOwnProperty(\"preSignedLink\")) {\n                        obj[columnsArrHeader[key]] = data[\"preSignedLink\"].toString();\n                    } else {\n                        obj[columnsArrHeader[key]] = data[key].toString();\n                    }\n                } else {\n                    obj[columnsArrHeader[key]] = data[key].toString();\n                }\n            } else {\n                obj[columnsArrHeader[key]] = convertDate(data[key]);\n            }\n\n        });\n        finalData.push(obj);\n    }\n    return finalData;\n}\n\n/**\n * Name: createHTMLTable\n * Description: Function to create HTML table using json\n * Created By :  Suman Dey  \n * Created At: 09/25/2020\n * CR:   \n * @param {json} myList send the table data as json \n */\n\nfunction createHTMLTable(myList) {\n    var html = document.createElement('html');\n    var head = document.createElement('head');\n    html.appendChild(head);\n    var body = document.createElement('body');\n    html.appendChild(body);\n    var div = document.createElement('div');\n    div.id = \"table_container\";\n    body.appendChild(div);\n    document.body.appendChild(html);\n\n    var columns = [];\n    var headerTr$ = $('<tr/>');\n    var col_count = [];\n\n    for (var i = 0; i < myList.length; i++) {\n        var rowHash = myList[i];\n        for (var key in rowHash) {\n            if ($.inArray(key, columns) == -1) {\n                columns.push(key);\n                headerTr$.append($(\n                    '<th class=\"innerTableData\" data-fill-color=\"FF5b9bd5\" data-f-color=\"FFFFFFFF\" data-f-bold=\"true\" data-b-a-s=\"thin\" data-b-a-c=\"FF000000\" data-a-h=\"center\"/>'\n                ).html(key));\n                col_count.push(20);\n            }\n        }\n    }\n\n    var table = $('<table id=\"excelDataTable\" border=\"1\" data-cols-width=\"' + col_count.toString() + '\"/>');\n    $(\"#table_container\").append(table);\n    $(\"#excelDataTable\").append(headerTr$);\n\n    //this for loop will create the row data for the html table from the given json data.\n    for (var i = 0; i < myList.length; i++) {\n        var row$ = $('<tr/>');\n        for (var colIndex = 0; colIndex < columns.length; colIndex++) {\n            var cellValue = myList[i][columns[colIndex]];\n\n            if (cellValue == null) {\n                cellValue = \"\";\n            }\n\n            if (validPDFURL(String(cellValue))) {\n                var first_split = cellValue.split(\"?\")[0];\n                var split = first_split.split('/');\n\n                var a = `<a href=\"${cellValue}\">${decodeURIComponent(split[split.length - 1])}</a>`\n                row$.append($(`<td data-f-color=\"#1F497D\" data-b-a-s=\"thin\" data-fill-color=\"FFddebf7\" data-hyperlink=\"${cellValue}\" data-b-a-c=\"FF000000\" data-a-wrap=\"true\"/>`).html(a));\n            } else {\n                row$.append($('<td data-fill-color=\"FFddebf7\" data-b-a-s=\"thin\" data-b-a-c=\"FF000000\" data-a-wrap=\"true\"/>').html(cellValue));\n            }\n\n\n\n        }\n        $(\"#excelDataTable\").append(row$);\n    }\n\n    const tableFinal = document.getElementById('excelDataTable')\n    document.body.removeChild(html);\n\n    return tableFinal;\n\n}\n\n/*function to convert milisecond to date String returns date as Oct 20, 2020 (Example)\n *@param {int} milisecond hold the date value as milisecond. ex: new Date().getTime()\n */\n\nfunction convertDate(milisecond) {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n    var today;\n    if (isNaN(parseInt(milisecond))) {\n        today = new Date(milisecond);\n    } else {\n        today = new Date(parseInt(milisecond));\n    }\n\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = `${monthNames[today.getMonth()]} ${dd}, ${yyyy}`;\n    return today;\n}\n\nfunction checkDublicate(obj, text) {\n    var keys = Object.keys(obj);\n    var isDublicate = keys.filter(key => {\n        return obj[key] === text;\n    });\n    if (isDublicate.length === 0) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\n/**Function to check the column have text or PDF URL in Component Table  \n * @param {String} str send the pdf URL to validate\n */\nfunction validPDFURL(str) {\n    var first_split = str.split(\"?\")[0];\n    var split = first_split.split('/');\n    var extention = split[split.length - 1].split('.');\n    if (split[split.length - 1].includes(\"pdf\")) {\n        return true;\n    } else {\n        return false;\n    }\n\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"c4c5a3a3-8198-44ec-8b2d-b1bca566b1c6","fieldName":"BCRAddendum","fieldParent":99999,"fieldPos":86,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8bbd7f0a-68bf-4d36-8ab0-340f6695d806","fieldName":"qrCodeData","fieldParent":"c4c5a3a3-8198-44ec-8b2d-b1bca566b1c6","fieldPos":87,"fieldType":"neptune.Script","script":" /**\n * Name:generateQRCodeData \n * Description:  Function used to Generate QR Code \n * Created By :Aswini Allugunti\n * Created At: 11/12/2020\n * CR:   \n * @param {JSON} tableData Pass the array of data from table without key\n * @param {Object} headers send the header object from table header \n * @param {String} tableFlag sends the flag name to determine what needs to be printed. \n * @param {String} title sends the filename to export with.  \n\n  */\n\n \n function generateQRCodeData(wNum, huPick, getTO, btnText) {\n\n     // Assigning Values to the QR CODE\n     var pick;\n     var woNUM = {\n         workOrder: wNum\n     };\n\n     if (btnText === lblPickOrder.getText()) {\n         pick = {\n             pickOrder: huPick\n         };\n     } else {\n         pick = {\n             huNumber: huPick\n         };\n     }\n\n     var toNum = {\n         transformOrder: getTO\n     };\n\n\n     var wo = JSON.stringify(woNUM);\n     var pic = JSON.stringify(pick);\n     var to = JSON.stringify(toNum);\n\n     var qrObj = {};\n\n     qr.makeCode(wo);\n     qrObj.woBase64 = document.getElementById('qrcode').querySelector('canvas').toDataURL();\n     qr.makeCode(pic);\n     qrObj.pickBase64 = document.getElementById('qrcode').querySelector('canvas').toDataURL();\n     qr.makeCode(to);\n     qrObj.toBase64 = document.getElementById('qrcode').querySelector('canvas').toDataURL();\n\n     return qrObj;\n }","request":[],"response":[],"attributes":[]},{"fieldNo":"d1542df1-f21c-4ac9-af55-a4b0836fba2e","fieldName":"bcrDocument","fieldParent":"c4c5a3a3-8198-44ec-8b2d-b1bca566b1c6","fieldPos":88,"fieldType":"neptune.Script","script":"// Function for downloading the PDF\n/**\n* Name:pdfDownload \n* Description:  Function used to Generate QR Code \n* Created By :Aswini Allugunti\n* Created At: 11/12/2020\n* CR:   \n* @param {JSON} woDataR response data of WO details\n\n */\nfunction pdfDownload(woDataR) {\n    var getWorkStationId = modeloModelObjectGetWorkStation.oData[0].printId;\n    woId = getWorkStationId;\n    var ldapInfo = modelmdlLDAPInfo.getData();\n    var currentDate = printDateString(new Date())\n\n    var ldapInfo = modelmdlLDAPInfo.getData();\n    var currentDate = printDateString(new Date())\n    var huPick = inputPickScan.getValue();\n    var btnText = scanPICKHU.getText();\n    var getTO = inputTO.getValue();\n    var wrkStation = tblQuality.getModel().getData()[0].workstation\n    var componentData = tblQuality.getModel().getData()\n\n    var woNum = componentData.find(f => {\n        return f.workOrder === wrkOrdScan.getValue();\n    });\n\n    var wNum = woNum.workOrder;\n    var acceptedQty = woNum.qty_accept;\n    var rejectQty = woNum.qty_cancel;\n    var reasonCode = woNum.reasonCode;\n    var reasonData = mdlReasonCodes.getModel().getData().find(item => {\n        if (item.reasonCode === reasonCode) {\n            return item\n        }\n    });\n    if (reasonData !== undefined) {\n        var description = reasonData.description;\n    } else {\n        var description = reasonCode;\n        var reasonCode = \"R009 + Reason\";\n    }\n\n    var cmnts = woNum.woComments;\n    var totalQty = woNum.qty;\n\n    var newTime = modeloModelUserLocation.oData[0].location === \"Selzach, Switzerland\" ? currentDate : \"\";\n\n    var qrData = generateQRCodeData(wNum, huPick, getTO, btnText);\n    var doc = new jsPDF(\"Potrait\", \"pt\", \"a4\", true);\n    var pageSize = doc.internal.pageSize\n    doc.setFontSize(11)\n    doc.setFontStyle('bold')\n    doc.text(200, 30, \"Addendum : Non Conformance Batch Record\");\n    var pageHeight = pageSize.height ? pageSize.height : pageSize.height\n    var totalPagesExp = '{total_pages_count_string}'\n\n    var left = 20;\n    var height = 20;\n    doc.setFontSize(11);\n\n    var headerData = [\n        [{\n                content: lblWo.getText() + \" - \" + wNum,\n                styles: {\n                    halign: 'center'\n                }\n            },\n            // wNum,\n            {\n                content: btnText + \" - \" + huPick,\n                styles: {\n                    halign: 'center'\n                }\n            },\n            // huPick,\n            {\n                content: oLabelTONum.getText() + \" - \" + getTO,\n                styles: {\n                    halign: 'center'\n                }\n            },\n\n            // getTO,\n        ],\n    ]\n    doc.autoTable({\n        body: headerData,\n        styles: {\n            columnWidth: 'fixed'\n        },\n        bodyStyles: {\n            lineColor: [0, 0, 0],\n            lineBorder: [0, 0, 00],\n            lineWidth: 2\n\n        },\n\n        columnStyles: {\n            0: {\n                halign: 'center',\n                cellWidth: 163\n            },\n            1: {\n                halign: 'center',\n                cellWidth: 163\n            },\n            2: {\n                halign: 'center',\n                cellWidth: 189\n            },\n\n\n        },\n\n\n\n        theme: 'grid',\n\n        height: 50\n\n    })\n    doc.setDrawColor(0);\n    doc.setLineWidth(2);\n\n\n    doc.rect(40, doc.lastAutoTable.finalY + 0, 162, 60);\n\n    doc.addImage(qrData.woBase64, 80, doc.lastAutoTable.finalY + 5, 20, 20); // right, down, width, height\n\n    doc.rect(203, doc.lastAutoTable.finalY + 0, 162, 60);\n    doc.addImage(qrData.pickBase64, 280, doc.lastAutoTable.finalY + 5, 20, 20); // right, down, width, height\n\n    doc.rect(365, doc.lastAutoTable.finalY + 0, 190, 60);\n    doc.addImage(qrData.toBase64, 450, doc.lastAutoTable.finalY + 5, 20, 20); // right, down, width, height\n\n    var table2Data = [\n\n        [{\n                content: oLabelnonConfrm.getText(), \n                rowSpan: 8,\n                styles: {\n                    halign: 'center'\n                }\n            }, {\n                content: lblQtty.getText(),\n               \n                styles: {\n                    halign: 'center'\n                }\n            },\n            {\n                content: lblReason.getText(),\n                styles: {\n                    halign: 'center'\n                }\n            },\n            {\n                content: lblRjtReason.getText(),\n                styles: {\n                    halign: 'center'\n                }\n            }\n        ],\n        [{\n            content: rejectQty,\n\n            styles: {\n                halign: 'center'\n            }\n        }, {\n            content: reasonCode,\n            styles: {\n                halign: 'center'\n            }\n        }, {\n            content: description,\n\n            styles: {\n                halign: 'center'\n            }\n        }],\n\n\n    ]\n\n\n    doc.autoTable({\n        body: table2Data,\n        styles: {\n            columnWidth: 'fixed'\n        },\n        bodyStyles: {\n            lineColor: [0, 0, 0],\n            lineWidth: 2\n\n        },\n        columnStyles: {\n            0: {\n                halign: 'center',\n                fontStyle: 'bold',\n                cellWidth: 100,\n            },\n            1: {\n                halign: 'center',\n                fontStyle: 'bold',\n                cellWidth: 62,\n            },\n            2: {\n                halign: 'center',\n                fontStyle: 'bold',\n                cellWidth: 90,\n            },\n            3: {\n                halign: 'center',\n                fontStyle: 'bold',\n                cellWidth: 264,\n            }\n\n        },\n\n\n\n        theme: 'grid',\n\n        startY: doc.lastAutoTable.finalY + 30\n\n    })\n\n    var table3Data = [\n        [{\n                content: \"Total NC\",\n                colSpan: 2,\n                styles: {\n                    halign: 'center'\n                }\n            },\n            {\n                content: rejectQty,\n                colSpan: 5,\n                styles: {\n                    halign: 'start'\n                }\n            },\n        ],\n\n\n\n    ]\n\n    doc.autoTable({\n\n        body: table3Data,\n        styles: {\n            columnWidth: 'fixed'\n        },\n\n        bodyStyles: {\n            lineColor: [0, 0, 0],\n            lineWidth: 2\n\n        },\n        columnStyles: {\n            0: {\n                halign: 'center',\n                fontStyle: 'bold',\n                cellWidth: 100,\n            }\n        },\n\n        theme: 'grid',\n\n        startY: doc.lastAutoTable.finalY + 0\n\n    })\n\n\n    var nameIdString = `${ldapInfo.employeeID} / ${ldapInfo.displayName.split('[')[0].trim()}`\n\n\n    var table5Data = [\n        [{\n                content: lblWorkStation.getText(),\n                colSpan: 1,\n                styles: {\n                    halign: 'center'\n                }\n            },\n            {\n                content: oLabelinspecOpp.getText(),\n                rowSpan: 2,\n                styles: {\n                    halign: 'center'\n                }\n            },\n            {\n                content: oLabelwwid.getText(),\n                colSpan: 4,\n                styles: {\n                    halign: 'center'\n                }\n            },\n            {\n                content: oLabelsign.getText(),\n                colSpan: 1,\n                styles: {\n                    halign: 'center'\n                }\n            },\n            {\n                content: oLabeldate.getText(),\n                colSpan: 1,\n                styles: {\n                    halign: 'center'\n                }\n            }\n        ],\n\n        [{\n                content: \"\",\n                colSpan: 1,\n                styles: {\n                    halign: 'center'\n                }\n            },\n            {\n                content: nameIdString,\n                colSpan: 4,\n                styles: {\n                    halign: 'center'\n                }\n            },\n            {\n                content: \"\",\n                colSpan: 1,\n                styles: {\n                    halign: 'center'\n                }\n            },\n            {\n                content: newTime,\n                colSpan: 1,\n                styles: {\n                    halign: 'center'\n                }\n            }\n        ],\n\n\n    ]\n\n    doc.autoTable({\n\n        body: table5Data,\n        styles: {\n            columnWidth: 'fixed'\n        },\n        bodyStyles: {\n            lineColor: [0, 0, 0],\n            lineWidth: 2\n\n        },\n\n        columnStyles: {\n            0: {\n                halign: 'center',\n                fontStyle: 'bold',\n                cellWidth: 90,\n            },\n            1: {\n                halign: 'center',\n                fontStyle: 'bold',\n                cellWidth: 90,\n            },\n            2: {\n                halign: 'center',\n                fontStyle: 'bold',\n                cellWidth: 30,\n            },\n            3: {\n                halign: 'center',\n                fontStyle: 'bold',\n                cellWidth: 90,\n            },\n            4: {\n                halign: 'center',\n                fontStyle: 'bold',\n                cellWidth: 90,\n            }\n        },\n        theme: 'grid',\n\n        startY: doc.lastAutoTable.finalY + 30\n\n    })\n\n    var str = 'Page ' + doc.internal.getNumberOfPages()\n\n    if (typeof doc.putTotalPages === 'function') {\n        str = str + ' of ' + totalPagesExp\n    }\n\n\n    var noOfPages = doc.internal.getNumberOfPages();\n\n    for (var i = 1; i <= noOfPages; i++) {\n\n        doc.setPage(i);\n\n        doc.text(left + 30, height, 'Page ' + i + ' of ' + noOfPages)\n        str = str + ' of ' + totalPagesExp;\n        doc.text(left, height, lblLstBatch.getText());\n        doc.text(left + 450, height, \"Date \" + currentDate);\n    }\n\n\n\n    if (typeof doc.putTotalPages === 'function') {\n        doc.putTotalPages(totalPagesExp)\n    }\n\n    doc.autoPrint(doc.output('bloburl'), '_blank');\n\n    var openL = window.open(doc.output('bloburl'), '_blank', 'width=1000,height=600,top=40');\n    openL.focus();\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"16ce66fb-a659-4fbd-967c-1cac9be4f8ec","fieldName":"tblBindingScript","fieldParent":99999,"fieldPos":89,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"83d0a679-daf3-4616-e428-4d1f390ac17f","fieldName":"tblItemBinding","fieldParent":"16ce66fb-a659-4fbd-967c-1cac9be4f8ec","fieldPos":90,"fieldType":"neptune.Script","script":"/**\n * Name: bindTblQualInspec\n * Description:  function For Binding Quality Inspection Table\n * Created By : Swati Mani\n * Created At: 12/09/2020\n * @param {JSON} itemDetails fetches the json data from  getQiOverviewDetails api  \n */\nfunction tblItemBinding(itemDetails) {\n    // binding the model with the item details to be used in the Popover \n    var qaDispositionTblData = tblQuality.getModel().getData()\n    // fetching the uom value wrt the WO from the tblQuality data\n    var uomData = qaDispositionTblData.find(data => {\n        return data.workOrder === itemDetails[0].woNumber\n    });\n    // Binding the uom to the response \n    itemDetails.forEach(data => {\n        data.uom = uomData.uom,\n            data.reprintQty = uomData.reprintQty\n    })\n    // open the Popover\n    oDialogToWoData.open();\n\n    if (itemDetails.length > 0) {\n\n        tblItemDetails.removeAllColumns();\n        tblItemDetails.addColumn(new sap.ui.table.Column({\n            name: \"Components Type\",\n            label: new sap.m.Label({\n                text: lblCompType.getText()\n            }).addStyleClass(\"inputfieldheader\"),\n            template: new sap.m.Text().bindProperty(\"text\", \"componentType\"),\n            hAlign: \"Center\",\n            filterProperty: \"componentType\",\n            filtered: true,\n            sortProperty: \"componentType\",\n        }));\n        tblItemDetails.addColumn(new sap.ui.table.Column({\n            name: \"Component Control Number\",\n            label: new sap.m.Label({\n                text: lblCompControl.getText()\n            }).addStyleClass(\"inputfieldheader\"),\n            template: new sap.m.Text().bindProperty(\"text\", \"component\"),\n            hAlign: \"Center\",\n            filterProperty: \"component\",\n            filtered: true,\n            sortProperty: \"component\",\n        }));\n        tblItemDetails.addColumn(new sap.ui.table.Column({\n            name: \"Component Confirm Quantity\",\n            label: new sap.m.Label({\n                text: lblCmpConfirmQty.getText(),\n                wrapping: true\n            }).addStyleClass(\"inputfieldheader\"),\n            template: new sap.m.Text().bindProperty(\"text\", \"confirmedQty\"),\n            hAlign: \"Center\",\n            filterProperty: \"confirmedQty\",\n            filtered: true,\n            sortProperty: \"confirmedQty\",\n        }));\n\n        tblItemDetails.addColumn(new sap.ui.table.Column({\n            name: \"UOM\",\n            label: new sap.m.Label({\n                text: oLabelUnitOfMeas.getText(),\n            }).addStyleClass(\"inputfieldheader\"),\n\n            template: new sap.m.Text().bindProperty(\"text\", \"uom\"),\n            hAlign: \"Center\",\n            filterProperty: \"uom\",\n            filtered: true,\n            sortProperty: \"uom\",\n\n        }));\n        tblItemDetails.addColumn(new sap.ui.table.Column({\n            name: \"Label Reprint Qty\",\n            label: new sap.m.Label({\n                text: lblRepQty.getText(),\n            }).addStyleClass(\"inputfieldheader\"),\n\n            template: new sap.m.Text().bindProperty(\"text\", \"compReprintQty\"),\n            hAlign: \"Center\",\n            filterProperty: \"compReprintQty\",\n            filtered: true,\n            sortProperty: \"compReprintQty\",\n\n\n\n        }));\n        // Binding the data to the model and table\n        var mdldata = new sap.ui.model.json.JSONModel();\n        mdldata.setData(itemDetails);\n        tblItemDetails.setModel(mdldata);\n        tblItemDetails.bindRows(\"/\");\n        sap.ui.core.BusyIndicator.hide(0);\n\n    }\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"6e6b7f28-bcdd-4d24-e1ed-d135655d8b1d","fieldName":"bindTblQualityInspec","fieldParent":"16ce66fb-a659-4fbd-967c-1cac9be4f8ec","fieldPos":91,"fieldType":"neptune.Script","script":"/**\n * Name: bindTblQualInspec\n * Description:  function For Binding Quality Inspection Table\n * Created By : Aswini Allugunti\n * Created At: 12/03/2020\n * @param {JSON} modelData fetches the json data from  table api    \n */\n\nfunction bindTblQualInspec(responseItems) {\n\n    if (!responseItems.qty_cancel) {\n        responseItems.qty_cancel = 0;\n    }\n    if (!responseItems.qty_accept) {\n        responseItems.qty_accept = 0;\n    }\n    if (!responseItems.qaDisposition) {\n        responseItems.qaDisposition = \"\";\n    }\n    if (!responseItems.reasonCode) {\n        responseItems.reasonCode = \"\";\n    }\n    var qualityInspection = [];\n    qualityInspection.push(responseItems);\n\n\n    tblQuality.removeAllColumns();\n    tblQuality.addColumn(new sap.ui.table.Column({\n        name: \"WO Number\",\n        label: new sap.m.Label({\n            text: lblWo.getText(),\n            wrapping: true\n        }).addStyleClass(\"inputfieldheader\"),\n\n        template: new sap.m.Link({\n            press: function(oEvent) {\n\n                var woNum = this.getText();\n                lblWONumber.setText(woNum);\n                // Calling api to fetch the item data based on the work order num\n                getQiItemDetails(woNum, \"GETITEMS\");\n            }\n        }).bindProperty(\"text\", \"workOrder\"),\n        hAlign: \"Center\",\n        filterProperty: \"workOrder\",\n        filtered: true,\n        sortProperty: \"workOrder\",\n\n    }));\n    tblQuality.addColumn(new sap.ui.table.Column({\n        name: \"MatNum\",\n        label: new sap.m.Label({\n            text: oLabelProductNum.getText(),\n            wrapping: true\n        }).addStyleClass(\"inputfieldheader\"),\n\n        template: new sap.m.Text().bindProperty(\"text\", \"product\"),\n        hAlign: \"Center\",\n        filterProperty: \"product\",\n        filtered: true,\n        sortProperty: \"product\",\n    }));\n    tblQuality.addColumn(new sap.ui.table.Column({\n        name: \"BatchNum\",\n        label: new sap.m.Label({\n            text: oLabelBatchNum.getText(),\n            wrapping: true\n        }).addStyleClass(\"inputfieldheader\"),\n\n        template: new sap.m.Text().bindProperty(\"text\", \"batch\"),\n        hAlign: \"Center\",\n        filterProperty: \"batch\",\n        filtered: true,\n        sortProperty: \"batch\",\n    }));\n    tblQuality.addColumn(new sap.ui.table.Column({\n        name: \"Work Order Quantity\",\n        label: new sap.m.Label({\n            text: oLabelBatchQty.getText(),\n            wrapping: true\n        }).addStyleClass(\"inputfieldheader\"),\n\n        template: new sap.m.Text().bindProperty(\"text\", \"qty\"),\n        hAlign: \"Center\",\n        filterProperty: \"qty\",\n        filtered: true,\n        sortProperty: \"qty\",\n    }));\n    tblQuality.addColumn(new sap.ui.table.Column({\n        name: \"WO Status\",\n        label: new sap.m.Label({\n            text: oLabelWorkOrderStatus.getText(),\n            wrapping: true\n        }).addStyleClass(\"inputfieldheader\"),\n        template: new sap.m.Text().bindProperty(\"text\", \"workOrderStatus\",\n            function(cellValue) {\n\n                // remove styles else it will overwrite\n                this.removeStyleClass('inProgress');\n                // Set style Conditionally\n                // Set style Conditionally\n                if (cellValue === g_QA_INPROGRESS) {\n                    this.addStyleClass('inProgress');\n\n                } else if (cellValue === \"BLOCKED\") {\n                    this.addStyleClass('blocked');\n                } else if (cellValue === g_COMPLETED_STATUS) {\n                    this.addStyleClass('complete')\n                }\n\n                return cellValue;\n            }),\n        hAlign: \"Center\",\n        filterProperty: \"workOrderStatus\",\n        filtered: true,\n        sortProperty: \"workOrderStatus\",\n\n    }));\n    tblQuality.addColumn(new sap.ui.table.Column({\n        name: \"QA Disposition\",\n        label: new sap.m.Label({\n            text: lblQaDispsition.getText()\n        }).addStyleClass(\"inputfieldheader\"),\n        template: new sap.m.ComboBox({\n                selectedKey: \"{qaDisposition}\",\n                editable: false,\n                items: g_qaDispStatus,\n                change: function(oEvent) {\n                    oEvent.getSource().getParent().getCells()[5].setValueState(\"None\");\n                    if (oEvent.getSource().getSelectedKey() === \"ACCEPT\") {\n\n                        oEvent.getSource().getParent().getCells()[6].setEditable(false); //changed as per Sprint 3 2021\n                        oEvent.getSource().getParent().getCells()[6].setValue(oEvent.getSource().getParent().getCells()[3].mProperties.text)\n                        oEvent.getSource().getParent().getCells()[7].setEditable(false)\n                        oEvent.getSource().getParent().getCells()[8].mAggregations.items[1].setVisible(false)\n                        oEvent.getSource().getParent().getCells()[8].mAggregations.items[0].setVisible(true)\n                        oEvent.getSource().getParent().getCells()[8].mAggregations.items[0].setEditable(false)\n                        oEvent.getSource().getParent().getCells()[7].setValue(\"N/A\")\n                        oEvent.getSource().getParent().getCells()[8].mAggregations.items[0].setValue(\"N/A\")\n                        tblQuality.getModel().getData().qty_cancel = \"N/A\"\n                        tblQuality.getModel().getData().qty_accept = oEvent.getSource().getParent().getCells()[3].mProperties.text\n                        tblQuality.getModel().getData().reasonCode = \"N/A\"\n                        tblQuality.getModel().getData().qaDisposition = \"ACCEPT\"\n                    } else if (oEvent.getSource().getSelectedKey() === \"REJECT\") {\n\n                        // Making the accepted qty, rejected qty and reject reason codes cols as editable\n                        oEvent.getSource().getParent().getCells()[6].setEditable(true);\n                        oEvent.getSource().getParent().getCells()[7].setEditable(true);\n                        oEvent.getSource().getParent().getCells()[8].mAggregations.items[0].setEditable(true)\n                        // setting the Accepted qty as default the Work Order Quantity and making empty the other cols\n                        oEvent.getSource().getParent().getCells()[6].setValue(oEvent.getSource().getParent().getCells()[3].mProperties.text)\n                        oEvent.getSource().getParent().getCells()[7].setValue()\n                        oEvent.getSource().getParent().getCells()[8].mAggregations.items[0].setValue()\n\n                    }\n                }\n\n            }).addEventDelegate({\n                onAfterRendering: function(oEvent) {\n                    setTimeout(function() {\n                        $(\".stopTyping\").find(\"input\").attr(\"readonly\", true);\n                    }, 10);\n\n                }\n            }).addStyleClass(\"input_class_new stopTyping\")\n            .addStyleClass(\"input_class_new\"),\n\n        hAlign: \"Center\",\n        filterProperty: \"qaDisposition\",\n        filtered: true,\n        sortProperty: \"\",\n\n    }));\n    tblQuality.addColumn(new sap.ui.table.Column({\n        name: \"Accepted Quantity\",\n        label: new sap.m.Label({\n            text: lblAcQty.getText(),\n            wrapping: true\n        }).addStyleClass(\"inputfieldheader\"),\n        template: new sap.m.Input({\n            editable: false,\n            change: function(oEvent) {\n\n                var woqty = parseInt(oEvent.getSource().getParent().getCells()[3].mProperties.text)\n\n                qtyCheck(oEvent, \"accept\", woqty)\n            },\n\n        }).addStyleClass(\"input_class_new\").bindProperty(\"value\", \"qty_accept\"),\n        hAlign: \"Center\",\n        filterProperty: \"qty_accept\",\n        filtered: true,\n        sortProperty: \"\",\n\n    }));\n    tblQuality.addColumn(new sap.ui.table.Column({\n        name: \"Reject Quantity\",\n        label: new sap.m.Label({\n            text: lblrRcQty.getText(),\n            wrapping: true\n        }).addStyleClass(\"inputfieldheader\"),\n        template: new sap.m.Input({\n            value: \"{qty_cancel}\",\n            editable: false,\n            change: function(oEvent) {\n                var woQty = parseInt(oEvent.getSource().getParent().getCells()[3].mProperties.text)\n\n                qtyCheck(oEvent, \"reject\", woQty)\n            }\n        }).addStyleClass(\"input_class_new\"),\n\n        hAlign: \"Center\",\n        filterProperty: \"qty_cancel\",\n        filtered: true,\n        sortProperty: \"\",\n\n    }));\n\n    tblQuality.addColumn(new sap.ui.table.Column({\n        name: \"Rejection Reason\",\n        label: new sap.m.Label({\n            text: lblRjtReason.getText(),\n            wrapping: true\n        }).addStyleClass(\"inputfieldheader\"),\n        template: new sap.m.HBox({\n            alignItems: \"Center\",\n        }).addItem(\n            new sap.m.ComboBox({\n                showSecondaryValues: true,\n                items: g_qualReason,\n                selectedKey: \"{reasonCode}\",\n                value: \"{reasonCode}\",\n                editable: false,\n                selectionChange: function(oEvent) {\n                    var index = parseInt(oEvent.getSource().mBindingInfos.selectedKey.binding.oContext.sPath.split(\"/\")[1]);\n                    tblQuality.getRows()[index].getCells()[8].mAggregations.items[0].setValueState(\"None\");\n                },\n                change: function(oEvent) {\n\n\n                    if (oEvent.getSource().getSelectedKey() === \"R009 + Reason\") {\n\n                        var index = parseInt(oEvent.getSource().mBindingInfos.selectedKey.binding.oContext.sPath.split(\"/\")[1]);\n                        tblQuality.getRows()[index].getCells()[8].mAggregations.items[0].setValueState(\"None\");\n\n                        tblQuality.getRows()[index].getCells()[8].mAggregations.items[0].setVisible(false);\n                        tblQuality.getRows()[index].getCells()[8].mAggregations.items[1].setVisible(true);\n                        tblQuality.getRows()[index].getCells()[8].mAggregations.items[1].setPlaceholder(\"Enter Reject Reason(upto 250 chars)\");\n                    }\n                }\n            }).addEventDelegate({\n                onAfterRendering: function(oEvent) {\n                    setTimeout(function() {\n                        $(\".stopTyping\").find(\"input\").attr(\"readonly\", true);\n                    }, 10);\n\n                }\n            }).addStyleClass(\"input_class_new stopTyping\")\n            .addStyleClass(\"input_class_new\")\n        ).addItem(new sap.m.TextArea({\n            value: \"{reasonDesc}\",\n            wrapping: \"Hard\",\n            visible: false,\n            maxLength: 250,\n            change: function(oEvent) {\n\n            }\n        })),\n        hAlign: \"Center\",\n        filterProperty: \"reasonCode\",\n        filtered: true,\n        sortProperty: \"\",\n\n    }))\n    tblQuality.addColumn(new sap.ui.table.Column({\n        name: \"WO Comments\",\n        label: new sap.m.Label({\n            text: oLabelComments.getText(),\n        }).addStyleClass(\"inputfieldheader\"),\n\n        template: new sap.m.Text().bindProperty(\"text\", \"woComments\"),\n        hAlign: \"Center\",\n        filterProperty: \"woComments\",\n        filtered: true,\n        sortProperty: \"woComments\",\n\n\n\n    }));\n\n    var mdldata = new sap.ui.model.json.JSONModel();\n    mdldata.setData(qualityInspection[0]);\n    tblQuality.setModel(mdldata);\n    tblQuality.bindRows(\"/\");\n    panelQualityInspection.setVisible(true);\n    sap.ui.core.BusyIndicator.hide(0);\n\n}\n\n/**\n * Name: qtyCheck\n * Description:  function to check the quantity validations of reject and accept and autocalculate the difference\n * Created By : Aswini Allugunti\n * Created At: 12/03/2020\n * @param {JSON} event Change event  \n *  @param {string} type (accept/reject)\n * @param {int} woQty work order quantity\n */\nfunction qtyCheck(event, type, woQty) {\n\n    if (event.getSource().getParent().getCells()[7].mProperties.value === \"\") {\n        // do nothing\n        var rejectQty = \"\"\n    } else {\n        var rejectQty = parseInt(event.getSource().getParent().getCells()[7].mProperties.value)\n    }\n    if (event.getSource().getParent().getCells()[6].mProperties.value === \"\") {\n        var acceptedQty = \"\"\n    } else {\n        var acceptedQty = parseInt(event.getSource().getParent().getCells()[6].mProperties.value)\n    }\n\n    if (type === \"accept\") {\n        \n        // check if accepted qty is not entered\n        if (acceptedQty === \"\") {\n            event.getSource().getParent().getCells()[6].setValue(\"0\")\n            getDialog(lblEnterAcceptQty.getText())\n            event.getSource().getParent().getCells()[6].setValue(woQty);\n            event.getSource().getParent().getCells()[6].setValueState(\"Error\");\n        } else if (acceptedQty > woQty) {\n            // if the accepted qty is more than workorder qty\n            getDialog(lblAccQtyMoreWoQty.getText())\n            event.getSource().getParent().getCells()[6].setValue(woQty);\n            event.getSource().getParent().getCells()[7].setValue(\"0\");\n\n            btnSave.setEnabled(false)\n        } else if (acceptedQty === woQty) {\n            event.getSource().getParent().getCells()[7].setValue(\"0\");\n        } else if (acceptedQty + rejectQty > woQty) {\n            // if the sum of accepted+reject more than workOrder qty\n            getDialog(lblSumMoreWoQty.getText())\n            event.getSource().getParent().getCells()[6].setValue(woQty);\n            event.getSource().getParent().getCells()[7].setValue(\"0\");\n\n            btnSave.setEnabled(false)\n        } else {\n            btnSave.setEnabled(true)\n            event.getSource().getParent().getCells()[6].setValueState(\"None\");\n            event.getSource().getParent().getCells()[7].setValueState(\"None\");\n        }\n    } else if (type === \"reject\") {\n        \n        // if reject qty not entered\n        if (rejectQty === \"\") {\n            event.getSource().getParent().getCells()[7].setValue(\"0\")\n            event.getSource().getParent().getCells()[6].setValue(\"0\")\n            getDialog(lblEnterRejectQty.getText())\n            btnSave.setEnabled(false)\n        } else if (rejectQty === 0) {\n            // if reject qty is 0\n            event.getSource().getParent().getCells()[6].setValue(woQty)\n        } else if (rejectQty > woQty) {\n            // if reject qty more workorder qty\n            getDialog(lblRejectQtyMoreWoQty.getText());\n            btnSave.setEnabled(false)\n            event.getSource().getParent().getCells()[7].setValue(\"0\")\n            event.getSource().getParent().getCells()[6].setValue(woQty)\n\n        } else if (rejectQty > acceptedQty) {\n            // if rejectQty more than accepted qty\n            if (rejectQty === woQty) {\n                // if reject = order qty then set accepted value as 0\n                // find the difference and set in place of accepted qty\n                var newAcceptedQty = event.getSource().getParent().getCells()[6].setValue(\"0\");\n            } else if ((rejectQty + acceptedQty) > woQty) {\n                // if the sum is more than work order qty then Error\n                getDialog(lblSumMoreWoQty.getText())\n                event.getSource().getParent().getCells()[7].setValueState(\"Error\");\n                event.getSource().getParent().getCells()[6].setValueState(\"Error\");\n                btnSave.setEnabled(false)\n\n            } else {\n                // calculate the difference and set the values\n                calDiff(event,rejectQty,acceptedQty,woQty);\n                event.getSource().getParent().getCells()[6].setValueState(\"None\");\n                event.getSource().getParent().getCells()[7].setValueState(\"None\");\n                // btnSave.setEnabled(true)\n            }\n        } else {\n            // calculate the difference and set the values\n            if (rejectQty > acceptedQty) {\n                var difference = rejectQty - acceptedQty;\n            } else {\n                var difference = acceptedQty - rejectQty;\n            }\n            calDiff(event,rejectQty,acceptedQty,woQty);\n        }\n    }\n}\n\n/**\n * Name: calDiff\n * Description:  function to calculate the difference between accepted and reject Quantity\n * Created By : Swati Mani\n * Created At: 12/03/2020\n * @param {Object} event oEvent for the change function    \n */\nfunction calDiff(event,rejectQty,acceptedQty,woQty) {\n    event.getSource().getParent().getCells()[7].setValue(rejectQty)\n    var newAcceptedQty = event.getSource().getParent().getCells()[6].setValue(woQty - rejectQty)\n    tblQuality.getModel().getData().qty_cancel = event.getSource().getParent().getCells()[7].setValue(rejectQty)\n    tblQuality.getModel().getData().qty_accept = woQty - rejectQty\n    btnSave.setEnabled(true)\n    event.getSource().getParent().getCells()[6].setValueState(\"None\");\n    event.getSource().getParent().getCells()[7].setValueState(\"None\");\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldName":"ErrMsgLabels","fieldParent":99999,"fieldPos":92,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"68422fb2-9da1-48da-9d27-53fbec5fa467","fieldName":"oLabelauthenticationSuccess","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":93,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"a5716f5c-cd84-478b-a28e-f5f8d63bffae","fieldName":"oLabelauthenticatonError","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":94,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8f69dea2-38ae-4342-b00f-6229aa83a35b","fieldName":"oLabelpostData","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":95,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"12384eb7-b3a8-424d-83ec-7fed682ffe54","fieldName":"lblPleaseEnterTON","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":96,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"68026706-17fc-46a1-8dfb-d16d942e32e7","fieldName":"lblEnterReasonCode","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":97,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"959d4761-b1d2-422a-eb90-83dadb907bdd","fieldName":"lblRejectQty0","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":98,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"fc2ebc64-65b9-4416-c391-3a6ff9ae003d","fieldName":"multipleQAInprogress","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":99,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"a3dc53b8-bf1a-4ec2-e6ee-13ccc4cf1b15","fieldName":"wrkOrderHasStatus","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":100,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"8dd46e7d-cb76-4994-eb9f-0fbc37d2390d","fieldName":"lblNotAllowedInspection","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":101,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"1932d74d-7a01-4ac7-c8cc-2a33bdf5c741","fieldName":"lblEnterAcceptQty","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":102,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"4833edab-88b5-4848-b09a-2650a5801ec5","fieldName":"lblEnterRejectQty","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":103,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"fa03b7f1-8a6e-4f7f-da15-e1752a8b876c","fieldName":"lblSumMoreWoQty","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":104,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"b581ae27-76bc-4862-d4f9-071413e9dbdb","fieldName":"lblRejectQtyMoreAcceptedQty","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":105,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"48dfcd8e-8bad-4d9d-9448-c3f36c61feb4","fieldName":"lblRejectQtyMoreWoQty","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":106,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"6423334d-8a1e-4a04-ab48-ba4cca0d7046","fieldName":"lblAccQtyMoreWoQty","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":107,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"45cc0a55-d191-4d99-b9b0-f3a4000ba9ec","fieldName":"lblInvalidWO","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":108,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"7e9bde0b-be90-445f-eff2-fbf89c597c82","fieldName":"lblEnterWO","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":109,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"e3b9fda9-fd70-4a97-884c-ca1f9f131a43","fieldName":"lblEnterHUPick","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":110,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"433958fe-1f87-4821-a2d5-61bd3b1e0ad5","fieldName":"lblPleaseEnterTO","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":111,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"12683b6c-d84f-4a50-c15a-1cf7c37ed390","fieldName":"noInspecReqStatus","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":112,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"e753daf1-0375-4dbc-a4f0-7b4962c3b4f4","fieldName":"lblMultipleWorkOrderIn","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":113,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"9d5774d1-1a1b-4b50-ddb2-ac0d68ea65a9","fieldName":"incorrectScan","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":114,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"a034e979-4614-480b-8187-c2c2a09a45b7","fieldName":"lblEnterTOHUPick","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":115,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"d9fabd8b-bb3e-42e6-d357-38bb7808b354","fieldName":"oLabel401Msg","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":116,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"92c78751-5554-403a-aaa3-8bd61701ea5d","fieldName":"oLabel500Msg","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":117,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"1bd6be2f-0c08-45d0-fe7f-f90bc52603c4","fieldName":"oLabel502Msg","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":118,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"0ea73045-3355-4992-d5f3-53e6c8943432","fieldName":"oLabel503Msg","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":119,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"48a152d4-191a-44eb-c972-ff532a208293","fieldName":"oLabelGenericMsg","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":120,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"4e4130ca-f058-4b4e-da50-27006c14fcea","fieldName":"oLabel504Msg","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":121,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"0a4f4b58-ffa7-4113-8d88-78a359b9fb19","fieldName":"lblMissingErrorMsg","fieldParent":"8611c531-6cea-420d-9370-a0ca6d25e26e","fieldPos":122,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldName":"uiLabels","fieldParent":99999,"fieldPos":123,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"530c7169-550a-49ef-f57b-0619035c7fe4","fieldName":"lblDigitalRecord","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":124,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e3c64026-136d-4fb4-946a-741180d063eb","fieldName":"lblisNow","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":125,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"f9e960ed-bf79-4bdb-d2ea-9be7f5d85b23","fieldName":"lblTotalHeader","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":126,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"labelHeaderText","script":"","translation":[]}]},{"fieldNo":"c0966d70-a488-4823-e357-90b69a82b5a4","fieldName":"lblCmpConfirmQty","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":127,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"262d5684-d3f4-408d-d82c-c9a7c9382d49","fieldName":"lblRepQty","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":128,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"061b414c-5887-432b-833b-4c591706786f","fieldName":"lblInspectionOf","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":129,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ce28e7c4-f707-4b76-c3da-f042c7f0b4c8","fieldName":"lblCompControl","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":130,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d8cbc155-4445-4fc0-d405-9db36c93bc4a","fieldName":"lblCompType","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":131,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"c54708da-3b49-41d0-e45c-10f977e88f62","fieldName":"lblRjtReason","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":132,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"403e5f30-510b-421a-a242-7b5b0fc332fa","fieldName":"lblrRcQty","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":133,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4309cb59-9dd8-48b2-c234-d9fdcbc553b6","fieldName":"lblQaDispo","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":134,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"cbdfe005-f5e4-459d-80d7-e8f4bd429669","fieldName":"lblHuNumber","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":135,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"86d59fb8-bf91-446f-9a92-c6d6370aa471","fieldName":"lblPickOrder","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":136,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"60f70c40-a2ad-41f1-dd1a-ab61d15eaab2","fieldName":"oLabelWorkOrderNumber","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":137,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"229966f1-82d1-44fb-f3dc-3989766a9159","fieldName":"oLabelProductNum","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":138,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"3df8a62b-55dc-43eb-8f13-5435b722b20c","fieldName":"oLabelBatchNum","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":139,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0ea78c7b-62b1-4f4f-9c97-75af70feb0b0","fieldName":"oLabelBatchQty","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":140,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"6d014a49-fc39-4f14-bf1b-99e52b9ebbbd","fieldName":"lblQaDispsition","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":141,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"af6b428f-9827-4431-9ae9-41c8f46cdb26","fieldName":"lblis","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":142,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8fc6a3f9-5bfe-43f2-80f7-d09fed0b56f5","fieldName":"oLabelUnitOfMeas","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":143,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"eb912734-5476-45af-ebb2-8f46da199fac","fieldName":"lblAcQty","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":144,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"7d9eb9cb-0a05-4a96-da58-6e00f9ab392d","fieldName":"oLabelWorkOrderStatus","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":145,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d8dffbbe-f449-449b-f909-012858ff59ee","fieldName":"oLabelComments","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":146,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"9b45cbdb-4951-46d5-d467-0b34cdd5526f","fieldName":"lblWelcome","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":147,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0bbd12ec-3614-46b1-d829-7b05e3a1a6dc","fieldName":"oLabelMissingTranslations","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":148,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"99e79781-a2cb-43ec-fd78-94d4f2af3fea","fieldName":"lblEsignConfirmation","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":149,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e5da2af2-17c5-4595-9dc9-c54bf8c96721","fieldName":"lblReprintLabels","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":150,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"56d347e5-6bce-4da8-c7ff-57db8e98a3a5","fieldName":"lblLineExec","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":151,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"b5928eb7-8848-4ec5-96db-23e305428cdc","fieldName":"lblalready","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":152,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"14c514ae-17c5-4901-82eb-457c48a28e07","fieldName":"lblPTConfirmation","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":153,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"bac953b3-395f-42a4-f70b-caa49215d768","fieldName":"labelRetensionConfirmed","fieldParent":"7db80e38-b232-4a45-8136-8a14901dfd1e","fieldPos":154,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"9b9b6470-bef3-426e-826f-320c792703c4","fieldName":"APIs","fieldParent":99999,"fieldPos":155,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"cafcc0b0-2688-4df8-c68a-ba8f8f0b5ea9","fieldName":"getTableData","fieldParent":"9b9b6470-bef3-426e-826f-320c792703c4","fieldPos":156,"fieldType":"neptune.restapi","restSource":"50f6da1d-ceb4-4e57-82ec-88bda5585614","restOperation":"c52cc441-d1bc-4386-eec9-eaa776b689e0","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"setTblData(xhr.responseJSON);\nResetTimeOutTimer()","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"ResetTimeOutTimer()","script":"ResetTimeOutTimer()","translation":[]}]},{"fieldNo":"0e57e4b1-dc03-436e-cb4d-5730b5f1555d","fieldName":"oRestAPISaveBCRData","fieldParent":"9b9b6470-bef3-426e-826f-320c792703c4","fieldPos":157,"fieldType":"neptune.restapi","restSource":"93ab6ac3-e51e-46ea-9a2e-5f9983b7c27d","restOperation":"98b87d3d-7810-4425-bb15-18ee09d60803","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"setTimeout(function() {\n    showMessage(lblDigitalRecord.getText());\n}, 800);\nResetTimeOutTimer()","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"ResetTimeOutTimer()","script":"ResetTimeOutTimer()","translation":[]}]},{"fieldNo":"4e0a80d6-2395-4325-8326-a047ab52ee41","fieldName":"apiQualInspEsign","fieldParent":"9b9b6470-bef3-426e-826f-320c792703c4","fieldPos":158,"fieldType":"neptune.restapi","restSource":"50f6da1d-ceb4-4e57-82ec-88bda5585614","restOperation":"9d3fc647-b2d8-4041-a0a8-49929f5a25d3","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"if (xhr.responseJSON.state === \"S\") {\n    inUsername.setValue(\"\");\n    inPassword.setValue(\"\");\n    diaTargetAuth.close();\n    diaTargetAuth.setBusy(false);\n    // call the save VBR api\n    lineClearSave()\n\n} else {\n    diaTargetAuth.setBusy(false);\n    var code = xhr.responseJSON;\n    if (code.msg === 2) {\n        showMessage(oLabelauthenticatonError.getText());\n    } else if (code.msg === 3) {\n        showMessage(oLabel401Msg.getText());\n    } else if (code.msg === 4) {\n        showMessage(oLabel500Msg.getText());\n    } else if (code.msg === 5) {\n        showMessage(oLabel502Msg.getText());\n    } else if (code.msg === 6) {\n        showMessage(oLabel503Msg.getText());\n    } else if (code.msg === 7) {\n        showMessage(oLabel504Msg.getText());\n    } else if (code.msg === 8) {\n        showMessage(oLabelGenericMsg.getText());\n    } else if (code.msg === 9) {\n        showMessage(oLabelpostData.getText());\n    }\n}\nResetTimeOutTimer()","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"ResetTimeOutTimer()","script":"ResetTimeOutTimer()","translation":[]}]},{"fieldNo":"3650f294-0554-4be8-9fc8-aaeecf943a9e","fieldName":"post_qaDisposition","fieldParent":"9b9b6470-bef3-426e-826f-320c792703c4","fieldPos":159,"fieldType":"neptune.restapi","restSource":"468f04c3-7e62-43f0-ae5c-9801edc9ef86","restOperation":"4a225b58-d51f-4fcc-e982-b7d65db6e8d9","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"// Checks based on the TO status, if status has value in the response then we bind it to the input field\nif (xhr.responseJSON.toStatus !== \"\") {\n    oInputTOStat.setValue(xhr.responseJSON.toStatus);\n    sap.ui.core.BusyIndicator.hide(0);\n    btnSave.setEnabled(false);\n    getQiOverDetails(g_barcodeIdentifier, \"GET\");\n}else if(xhr.responseJSON.toStatus === \"\"){\n    sap.ui.core.BusyIndicator.hide(0);\n    btnSave.setEnabled(false);\n    \n    getQiOverDetails(g_barcodeIdentifier, \"GET\");\n}\n//VBR Save\nsaveVBR();\nwrkOrdScan.setValue(\"\");\nResetTimeOutTimer()\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status)\nResetTimeOutTimer()","translation":[]}]},{"fieldNo":"2e066b8f-080a-462b-b843-92c482a71211","fieldName":"getQiOverviewDetails","fieldParent":"9b9b6470-bef3-426e-826f-320c792703c4","fieldPos":160,"fieldType":"neptune.restapi","restSource":"67edc478-319b-41ed-819a-4822d844d7cc","restOperation":"7a10cafb-af58-48bc-e75f-8d744e795617","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"// Bind the header and WO details using the data we get from the response.\n\nif (xhr.responseJSON.action === 'ERROR') {\n    inputPickScan.setEnabled(true);\n    inputTO.setEnabled(true);\n    getDialog(xhr.responseJSON.msg);\n}\nif (xhr.responseJSON.action === \"POST\") {\n    sap.ui.core.BusyIndicator.hide(0);\n} else if (xhr.responseJSON.action === \"GET\") {\n    headerDataBinding(xhr.responseJSON)\n} else if (xhr.responseJSON.action === \"GETITEMS\") {\n    // binding the model with the item details to be used in the Popover \n    tblItemDetails.setVisible(true);\n    var itemDetails = xhr.responseJSON.itemDetails\n    oPanelItemDetails.setHeaderText(lblTotalHeader.getText() + itemDetails.length);\n    // function to bind the table for the items table in Popover\n    tblItemBinding(itemDetails)\n    setWoPagination();\n}\nResetTimeOutTimer()","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status)\nResetTimeOutTimer()","translation":[]}]},{"fieldNo":"2001e102-fe1b-4ee9-c5d3-bc93ebe0bac5","fieldName":"getLabels","fieldParent":"9b9b6470-bef3-426e-826f-320c792703c4","fieldPos":161,"fieldType":"neptune.restapi","restSource":"f76a1b9d-5dfc-406d-9149-d90f9b19d86b","restOperation":"8d3231db-ff6b-4ab6-9d33-b65fb22e787e","script":"","request":[],"response":[{"status":200,"dataId":"6aca585b-6324-43d5-ba88-3a7e95fc28b1","modelFieldNo":"ed652203-112e-4c5b-8ae3-696ff217db43"}],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.show(0);\nlanguageTranslations()\ng_user = AppCache.userInfo.username;\ntry {\n    g_user = AppCache.userInfo.username;\n    oLabelUserInfo.setText(lblWelcome.getText() + g_user);\n    g_OEName = \"\"\n    getLDAPInfo(g_user)\n    getAllTableData()\n} catch (err) {\n    g_OEName = \"\"\n    oLabelUserInfo.setText(lblWelcome.getText() + g_user);\n    getLDAPInfo(g_user)\n   getAllTableData()\n\n}\nResetTimeOutTimer()","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status)\nResetTimeOutTimer()","translation":[]}]},{"fieldNo":"3f13aea9-934a-4dee-92c3-85c0f6087ecc","fieldName":"getLDAPInfo","fieldParent":"9b9b6470-bef3-426e-826f-320c792703c4","fieldPos":162,"fieldType":"neptune.restapi","restSource":"65a5da7b-4115-4179-8503-f6b636d9c74a","restOperation":"fa287a9f-47f4-4563-c886-155780ca69eb","script":"","request":[],"response":[{"status":"200","dataId":"0f2b67cd-9dbd-4275-9d0e-e9d7ba10346e","modelFieldNo":"8123b006-675e-4f27-9628-8e6c6242c5c6"}],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"\nif (g_OEName === \"final\") {\n    modelmdlLDAPInfo.setData(xhr.responseJSON)\n    var ldapInfo = modelmdlLDAPInfo.getData();\n    var nameIdString = `${ldapInfo.employeeID} / ${ldapInfo.displayName.split('[')[0].trim()}`\n    inpQualInspect.setValue(nameIdString);\n    \n} else if (g_OEName === \"\") {\n    modelmdlLDAPInfo.setData(xhr.responseJSON)\n    var ldapInfo = modelmdlLDAPInfo.getData();\n    g_QIOperator = `${ldapInfo.employeeID} / ${ldapInfo.displayName.split('[')[0].trim()}`\n\n}\nResetTimeOutTimer()","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status)\nResetTimeOutTimer()","translation":[]}]},{"fieldNo":"1ac6353d-543b-4cb2-e83c-a26aca07b2e6","fieldName":"getMachineIP","fieldParent":"9b9b6470-bef3-426e-826f-320c792703c4","fieldPos":163,"fieldType":"neptune.restapi","restSource":"3502c606-4a19-41e8-8c20-81951b8c00d1","restOperation":"b6f81ef3-6b66-43b5-be93-4eef0f521f1d","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"getUserLocation(g_user);\nResetTimeOutTimer()","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status)\nResetTimeOutTimer()","translation":[]}]},{"fieldNo":"310ee029-dd99-4394-c9a9-392534ad59ff","fieldName":"oHTMLObject","fieldParent":99999,"fieldPos":164,"fieldType":"sap.ui.core.HTML","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d334358b-7cc4-482f-e566-88e112a3832f","fieldName":"oHTML","fieldParent":"310ee029-dd99-4394-c9a9-392534ad59ff","fieldPos":165,"fieldType":"neptune.Html","script":"<div id=\"qrcode\"></div>\n<img id=\"imageid\" src=\"https://eudev2.jnjux.com/media/root/RSC/Johnson_and_Johnson_logo_red.png\">","request":[],"response":[],"attributes":[]},{"fieldNo":"a38d9991-6951-482f-902a-169bc323a556","fieldName":"Dialogs","fieldParent":99999,"fieldPos":166,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"3c226382-2aaa-45ec-8742-7484d344e2de","fieldName":"diaTargetAuth","fieldParent":"a38d9991-6951-482f-902a-169bc323a556","fieldPos":167,"fieldType":"sap.m.Dialog","bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassPadding","grouping":"Properties","value":"sapUiNoContentPadding","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://signature","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"contentWidth","grouping":"Properties","value":"1024px","script":"","translation":[]},{"attribute":"contentHeight","grouping":"Properties","value":"780px","script":"","translation":[]},{"attribute":"beforeOpen","grouping":"Events","value":"Anonymous Function","script":"diaTargetAuth.formLogons = [];\ninFormLogin.destroyItems();\ninFormLogin.addItem(new sap.ui.core.Item({\n    key: 'local',\n    text: 'Local'\n}));\n\n$.ajax({\n    type: \"GET\",\n    url: \"/user/logon/types\",\n    success: function(data) {\n        // Logon Types\n        configureLogonScreen(data.logonTypes);\n\n    },\n    error: function(result, status) {\n\n    }\n});\n\n\nfunction configureLogonScreen(data) {\n    for (var i = 0, length = data.length; i < length; i++) {\n        switch (data[i].type) {\n            case 'ldap':\n                if (data[i].show) {\n                    addFormLogon(data[i]);\n                }\n                break;\n        }\n    }\n}\n\nfunction addFormLogon(data) {\n    diaTargetAuth.formLogons.push(data);\n    inFormLogin.addItem(new sap.ui.core.Item({\n        key: data.path,\n        text: data.description\n    }));\n    inFormLogin.setVisible(true);\n}","translation":[]}]},{"fieldNo":"66176bf5-44c2-495b-9964-58603ef4f910","fieldName":"pageTargetAuth","fieldParent":"3c226382-2aaa-45ec-8742-7484d344e2de","fieldPos":168,"fieldType":"sap.m.Page","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"sapMGlobalBackgroundColorStrong sapUiUfdShellBG","script":"","translation":[]},{"attribute":"showHeader","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"406ce4d7-d0ac-49ce-b511-d429e549814b","fieldName":"oGrid","fieldParent":"66176bf5-44c2-495b-9964-58603ef4f910","fieldPos":169,"fieldType":"sap.ui.layout.Grid","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"loginGrid","script":"","translation":[]},{"attribute":"position","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"4b6db74e-485e-4856-d532-bee672aa6544","fieldName":"oGridData1","fieldParent":"406ce4d7-d0ac-49ce-b511-d429e549814b","fieldPos":170,"fieldType":"sap.ui.layout.GridData","script":"","request":[],"response":[],"attributes":[{"attribute":"spanS","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"spanM","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"spanL","grouping":"Properties","value":"12","script":"","translation":[]}]},{"fieldNo":"89c76a06-6375-44ca-b565-456f15be0446","fieldName":"oImageLogo","fieldParent":"4b6db74e-485e-4856-d532-bee672aa6544","fieldPos":171,"fieldType":"sap.m.Image","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"70%","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"https://eudev2.jnjux.com/media/root/JJ/jj-large.png","script":"","translation":[]}]},{"fieldNo":"55e3ead7-f0bc-4a55-c840-5b78f5eadba9","fieldName":"oGridData","fieldParent":"406ce4d7-d0ac-49ce-b511-d429e549814b","fieldPos":172,"fieldType":"sap.ui.layout.GridData","script":"","request":[],"response":[],"attributes":[{"attribute":"spanS","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"spanM","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"spanL","grouping":"Properties","value":"12","script":"","translation":[]}]},{"fieldNo":"b955783f-6519-442b-8a15-4ac48a7d706c","fieldName":"boxLogon","fieldParent":"55e3ead7-f0bc-4a55-c840-5b78f5eadba9","fieldPos":173,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"15a4c8fd-6a89-47a9-bda4-76e2ee8a0a8d","fieldName":"oSimpleForm","fieldParent":"b955783f-6519-442b-8a15-4ac48a7d706c","fieldPos":174,"fieldType":"sap.ui.layout.form.SimpleForm","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"loginForm","script":"","translation":[]},{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"4f7ecdf3-7789-4f05-910d-cc86c5c57604","fieldName":"oVBoxSign","fieldParent":"15a4c8fd-6a89-47a9-bda4-76e2ee8a0a8d","fieldPos":175,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth1","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"01ef5fee-7dbc-4df0-b03f-036d565afe67","fieldName":"oVBox1Sign","fieldParent":"4f7ecdf3-7789-4f05-910d-cc86c5c57604","fieldPos":176,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]}]},{"fieldNo":"f13f21cc-6e76-4a8a-f3b5-6ce7d39be62e","fieldName":"oTextSign","fieldParent":"01ef5fee-7dbc-4df0-b03f-036d565afe67","fieldPos":177,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"titleColor","script":"","translation":[]}]},{"fieldNo":"27533a82-cdd2-4dfa-a9af-5b2df7108703","fieldName":"oHBox1Sign","fieldParent":"4f7ecdf3-7789-4f05-910d-cc86c5c57604","fieldPos":178,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth","script":"","translation":[]}]},{"fieldNo":"deb6bfd1-b1cb-48e7-d04e-7d4c8020d7fe","fieldName":"inFormLogin","fieldParent":"27533a82-cdd2-4dfa-a9af-5b2df7108703","fieldPos":179,"fieldType":"sap.m.Select","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"536505a8-5f19-417e-a6bf-44f5a5b3c013","fieldName":"oHBox2Sign","fieldParent":"4f7ecdf3-7789-4f05-910d-cc86c5c57604","fieldPos":180,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth","script":"","translation":[]}]},{"fieldNo":"d855565c-fe77-4026-9084-0921ecd29774","fieldName":"inUsername","fieldParent":"536505a8-5f19-417e-a6bf-44f5a5b3c013","fieldPos":181,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"167%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"eSignLoginUser input_class_new","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"inUsername.setValueState(); \nthis.setValueStateText();","translation":[]}]},{"fieldNo":"18054c43-cb0f-48e4-d46d-4784c8d280d0","fieldName":"oHBox3Sign","fieldParent":"4f7ecdf3-7789-4f05-910d-cc86c5c57604","fieldPos":182,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth","script":"","translation":[]}]},{"fieldNo":"a01c42ce-fc79-4b36-d74e-d02e6c0dc8bc","fieldName":"inPassword","fieldParent":"18054c43-cb0f-48e4-d46d-4784c8d280d0","fieldPos":183,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"168%","script":"","translation":[]},{"attribute":"type","grouping":"Properties","value":"Password","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"eSignLogin input_class_new","script":"","translation":[]},{"attribute":"submit","grouping":"Events","value":"Anonymous Function","script":"formLoginButton.firePress();","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"inPassword.setValueState();\nthis.setValueStateText();","translation":[]}]},{"fieldNo":"62142454-8f14-4a93-fa88-96e8fe2792a3","fieldName":"oHBox5Sign","fieldParent":"4f7ecdf3-7789-4f05-910d-cc86c5c57604","fieldPos":184,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth","script":"","translation":[]}]},{"fieldNo":"2c08a068-6bf6-47ea-ac19-53c5a1d5b18f","fieldName":"oVBox1","fieldParent":"62142454-8f14-4a93-fa88-96e8fe2792a3","fieldPos":185,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"c9b6559a-fee2-4630-93f5-1ec44405fac6","fieldName":"chkSign","fieldParent":"2c08a068-6bf6-47ea-ac19-53c5a1d5b18f","fieldPos":186,"fieldType":"sap.m.CheckBox","script":"","request":[],"response":[],"attributes":[{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"chkSign.setValueState(\"None\");\nif(chkSign.getSelected()){\n    formLoginButton.setEnabled(true);\n}else{\n        formLoginButton.setEnabled(false);\n\n}","translation":[]}]},{"fieldNo":"30b00f5a-a4e2-48e9-cbde-ef5d93585774","fieldName":"oVBox","fieldParent":"62142454-8f14-4a93-fa88-96e8fe2792a3","fieldPos":187,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"Start","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Start","script":"","translation":[]}]},{"fieldNo":"b866011b-a5c4-4563-def9-7f3cd92acc68","fieldName":"oLabelSignIn","fieldParent":"30b00f5a-a4e2-48e9-cbde-ef5d93585774","fieldPos":188,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"3f1363c2-c090-4512-83f8-6cd8197eb72c","fieldName":"oLabelIApprove","fieldParent":"30b00f5a-a4e2-48e9-cbde-ef5d93585774","fieldPos":189,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"bulet_point","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"a40ff79c-809b-48bc-df64-9b9995502c2e","fieldName":"oLabelRetention","fieldParent":"30b00f5a-a4e2-48e9-cbde-ef5d93585774","fieldPos":190,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"bulet_point","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"9df441b6-a300-46a7-b34a-fe643c593aca","fieldName":"oHBox4Sign","fieldParent":"4f7ecdf3-7789-4f05-910d-cc86c5c57604","fieldPos":191,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"2cf787cf-308c-4303-b3ff-555baf0a0f58","fieldName":"formLoginButton","fieldParent":"9df441b6-a300-46a7-b34a-fe643c593aca","fieldPos":192,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"buttonLogin","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"diaTargetAuth.setBusy(true);\n\n\n\nvar rec = {};\nrec.username = inUsername.getValue();\nrec.password = inPassword.getValue();\n\nif (!rec.username || !rec.password || !chkSign.getSelected()) {\n    if (!rec.username) {\n        diaTargetAuth.setBusy(false);\n        inUsername.setValueState(\"Error\");\n        inPassword.setValueStateText(\"Please enter Username\");\n    }\n    if (!rec.password) {\n        diaTargetAuth.setBusy(false);\n        inPassword.setValueState(\"Error\");\n        inPassword.setValueStateText(\"Please enter password\");\n    }\n    if(!chkSign.getSelected()){\n        diaTargetAuth.setBusy(false);\n        chkSign.setValueState(\"Error\");\n    }\n    return;\n}\n\ndiaTargetAuth.setBusy(true);\n\nvar rec = {};\n\nvar authArray = [];\n\nrec[\"username\"] = inUsername.getValue();\nrec[\"password\"] = inPassword.getValue();\nrec[\"type\"] = \"ldap\";\nrec[\"path\"] = \"jjldap\";\nrec[\"authUrl\"] = AppCache.Url + \"/user/logon/ldap/jjldap\";\n\n\n\nauthArray.push(rec);\n\nvar options = {\n    data: authArray\n};\n\napiapiQualInspEsign(options);\n","translation":[]}]},{"fieldNo":"4b6f2a5e-1906-46b3-d1dc-e024f1f75164","fieldName":"butCancel","fieldParent":"9df441b6-a300-46a7-b34a-fe643c593aca","fieldPos":193,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"type","grouping":"Properties","value":"Emphasized","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"buttonLogin","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":" formLoginButton.setEnabled(false);\n diaTargetAuth.close();","translation":[]}]},{"fieldNo":"acd5f847-6e7c-4fe8-eaaf-0088c75f78d0","fieldName":"oDialogToWoData","fieldParent":"a38d9991-6951-482f-902a-169bc323a556","fieldPos":194,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://detail-view","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"791e3210-6c16-4505-81da-e894d4498258","fieldName":"oBar","fieldParent":"acd5f847-6e7c-4fe8-eaaf-0088c75f78d0","fieldPos":195,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"commonStyle","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"edf70980-02a0-40ac-d880-52d2039d71c1","fieldName":"Middle","fieldParent":"791e3210-6c16-4505-81da-e894d4498258","fieldPos":196,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"36ef081d-87e2-454f-dce2-5703f8efc63c","fieldName":"lblWONumber","fieldParent":"edf70980-02a0-40ac-d880-52d2039d71c1","fieldPos":197,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"labelWO","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"3bb0bd4e-3276-4c30-f289-eaa02b483b98","fieldName":"Right","fieldParent":"791e3210-6c16-4505-81da-e894d4498258","fieldPos":198,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"fa26c2d8-7778-4d8b-9d92-3647a7df44e8","fieldName":"oButtonToWoDataClose","fieldParent":"3bb0bd4e-3276-4c30-f289-eaa02b483b98","fieldPos":199,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"closeTop","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"oDialogToWoData.close();","script":"oDialogToWoData.close();","translation":[]}]},{"fieldNo":"6b26b021-2e99-4c53-8b4a-ac5bf1aecfd1","fieldName":"oBarContent","fieldParent":"791e3210-6c16-4505-81da-e894d4498258","fieldPos":200,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"8001951a-d4da-427b-f6ab-5bddb4f36fe9","fieldName":"oPanelItemDetails","fieldParent":"acd5f847-6e7c-4fe8-eaaf-0088c75f78d0","fieldPos":201,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"17e8a324-4947-4a56-9f57-4963ed0c8bd6","fieldName":"tblItemDetails","fieldParent":"8001951a-d4da-427b-f6ab-5bddb4f36fe9","fieldPos":202,"fieldType":"sap.ui.table.Table","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"showNoData","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"enableSelectAll","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableColumnReordering","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"1688027c-de1b-4ad3-d92a-59ac98e71b71","fieldName":"dialogCommon","fieldParent":"a38d9991-6951-482f-902a-169bc323a556","fieldPos":203,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"55b50068-ffb7-4260-af99-80a4802741d9","fieldName":"oBarCmn","fieldParent":"1688027c-de1b-4ad3-d92a-59ac98e71b71","fieldPos":204,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"commonStyle","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"b84030a3-2ac3-4169-fada-d0a21f6e209d","fieldName":"Middle","fieldParent":"55b50068-ffb7-4260-af99-80a4802741d9","fieldPos":205,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"69cd4a8c-6111-48eb-c94e-6a465ccaa752","fieldName":"lblExceLine","fieldParent":"b84030a3-2ac3-4169-fada-d0a21f6e209d","fieldPos":206,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"5b0f1ad8-4b10-471c-9863-6a1ce0374d80","fieldName":"Right","fieldParent":"55b50068-ffb7-4260-af99-80a4802741d9","fieldPos":207,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"b8a860ab-f34b-457b-eba5-d22282f452ed","fieldName":"btnCloseCmn","fieldParent":"5b0f1ad8-4b10-471c-9863-6a1ce0374d80","fieldPos":208,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"closeTop","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"dialogCommon.close();\n sap.ui.core.BusyIndicator.hide();\n","translation":[]}]},{"fieldNo":"ff8b312d-3d09-45c0-8eac-c37c46a72af3","fieldName":"oVBoxLineClearance","fieldParent":"1688027c-de1b-4ad3-d92a-59ac98e71b71","fieldPos":209,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"e690f20a-45ee-4790-f628-7acdc2530e1f","fieldName":"lblMessage","fieldParent":"ff8b312d-3d09-45c0-8eac-c37c46a72af3","fieldPos":210,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"ac51f29a-a78e-4e4c-b6fd-8d5fbee87367","fieldName":"dilogExecutive","fieldParent":"a38d9991-6951-482f-902a-169bc323a556","fieldPos":211,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"15f3d96e-1667-4d77-c479-c7c16eb39bac","fieldName":"oBaExecutive","fieldParent":"ac51f29a-a78e-4e4c-b6fd-8d5fbee87367","fieldPos":212,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"commonStyle","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"d9013fb5-45ff-49e1-fae7-00e49445f602","fieldName":"Middle","fieldParent":"15f3d96e-1667-4d77-c479-c7c16eb39bac","fieldPos":213,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"56a835d0-859b-45af-a426-3c885efd5403","fieldName":"lblExceLineClerance","fieldParent":"d9013fb5-45ff-49e1-fae7-00e49445f602","fieldPos":214,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"af767994-7fa8-4065-e17d-e1ccc58f6be3","fieldName":"Right","fieldParent":"15f3d96e-1667-4d77-c479-c7c16eb39bac","fieldPos":215,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"73e97778-cea6-4305-d0bf-1065a5e8235a","fieldName":"btnCloseExec","fieldParent":"af767994-7fa8-4065-e17d-e1ccc58f6be3","fieldPos":216,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"closeTop","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"dilogExecutive.close();\n","translation":[]}]},{"fieldNo":"df5b0c65-a548-402e-9737-ca7b0b9d9390","fieldName":"oPanelExecutive","fieldParent":"ac51f29a-a78e-4e4c-b6fd-8d5fbee87367","fieldPos":217,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8a2b9603-d54a-4227-9947-ea008783c16f","fieldName":"oVBoxExecu","fieldParent":"df5b0c65-a548-402e-9737-ca7b0b9d9390","fieldPos":218,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"a980282e-5027-4f23-eac5-12eabe7dab25","fieldName":"txtExec","fieldParent":"8a2b9603-d54a-4227-9947-ea008783c16f","fieldPos":219,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"4ea2a71b-bea0-406b-9ce4-f6848aded201","fieldName":"hExec","fieldParent":"df5b0c65-a548-402e-9737-ca7b0b9d9390","fieldPos":220,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"f87337b7-6f4c-4ab5-a341-bdf9aee0c586","fieldName":"yesExce","fieldParent":"4ea2a71b-bea0-406b-9ce4-f6848aded201","fieldPos":221,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Yes","script":"","translation":[{"language":"FR","value":"confirmer"},{"language":"DE","value":"Bestätigen"}]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"greenbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"// Calling function to update WO status and print bcr for reject disposition\ndilogExecutive.close();\nchkSign.setSelected(false);\noLabelSignIn.setText(lblEsignConfirmation.getText());\noLabelIApprove.setText(\"◉\" + \" \" + lblPTConfirmation.getText());\noLabelRetention.setText(\"◉\"+ \" \" +labelRetensionConfirmed.getText());\ndiaTargetAuth.open();\n\ninUsername.setValue(g_user);","translation":[]}]},{"fieldNo":"851ce96c-b0ea-4036-a1ea-aa90afd09250","fieldName":"oDialogLogoutMessage","fieldParent":"a38d9991-6951-482f-902a-169bc323a556","fieldPos":222,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"927bf57b-45e0-4ab2-ceb4-05138a224383","fieldName":"oBarLogout","fieldParent":"851ce96c-b0ea-4036-a1ea-aa90afd09250","fieldPos":223,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"commonStyle","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"c3105b33-8d86-4a0d-f199-eeb7aa00e427","fieldName":"Middle","fieldParent":"927bf57b-45e0-4ab2-ceb4-05138a224383","fieldPos":224,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"291f6496-04bb-420d-8181-577626c58b01","fieldName":"lblLogOutQI","fieldParent":"c3105b33-8d86-4a0d-f199-eeb7aa00e427","fieldPos":225,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Logout","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"4b9c1449-4b5f-4b84-aa4d-daf2d2bf8be8","fieldName":"Right","fieldParent":"927bf57b-45e0-4ab2-ceb4-05138a224383","fieldPos":226,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"ff725f6b-9cf1-4e65-bcbb-134e2fa15858","fieldName":"btnLogout","fieldParent":"4b9c1449-4b5f-4b84-aa4d-daf2d2bf8be8","fieldPos":227,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"closeTop","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"oDialogLogoutMessage.close();","script":"oDialogLogoutMessage.close();","translation":[]}]},{"fieldNo":"d666fa3d-078b-4018-c58e-1104c09e2168","fieldName":"oPanelLogoutMessage","fieldParent":"851ce96c-b0ea-4036-a1ea-aa90afd09250","fieldPos":228,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ef5c50d6-a651-47dd-c7e5-3be405a022be","fieldName":"oVBoxLog","fieldParent":"d666fa3d-078b-4018-c58e-1104c09e2168","fieldPos":229,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"8b632f9d-9faa-4dce-8f7c-d10b1b56fa63","fieldName":"lblLogOut","fieldParent":"ef5c50d6-a651-47dd-c7e5-3be405a022be","fieldPos":230,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"90d339ab-d623-4f99-e7cc-d0d8be0f016f","fieldName":"oHBoxButtonLogOut","fieldParent":"d666fa3d-078b-4018-c58e-1104c09e2168","fieldPos":231,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"f9b49323-35e0-4543-9c29-cc7b51c308c3","fieldName":"logoutYes","fieldParent":"90d339ab-d623-4f99-e7cc-d0d8be0f016f","fieldPos":232,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CONFIRM","script":"","translation":[{"language":"FR","value":" confirmer"},{"language":"DE","value":"Bestätigen"}]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"greenbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"\nAppCache.Logout();\noDialogLogoutMessage.close();","translation":[]}]},{"fieldNo":"04556183-5f47-4fe2-9060-73f6f29ed494","fieldName":"diaLabelMissing","fieldParent":"a38d9991-6951-482f-902a-169bc323a556","fieldPos":233,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"horizontalScrolling","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"contentWidth","grouping":"Properties","value":"40rem","script":"","translation":[]}]},{"fieldNo":"751b2e97-9e0c-47ac-948b-762edaad953b","fieldName":"oPanelLabelMissing","fieldParent":"04556183-5f47-4fe2-9060-73f6f29ed494","fieldPos":234,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"pan","script":"","translation":[]}]},{"fieldNo":"65d8b3eb-54db-4720-a075-3b6b09f0e86c","fieldName":"oVBoxLabelMissing","fieldParent":"751b2e97-9e0c-47ac-948b-762edaad953b","fieldPos":235,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]}]},{"fieldNo":"a0d3a22a-ae65-46f4-dff6-cbd6232328ac","fieldName":"oMessageStrip","fieldParent":"65d8b3eb-54db-4720-a075-3b6b09f0e86c","fieldPos":236,"fieldType":"sap.m.MessageStrip","script":"","request":[],"response":[],"attributes":[{"attribute":"type","grouping":"Properties","value":"Warning","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"labMissing","script":"","translation":[]},{"attribute":"showIcon","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"5c4291f5-a836-4cfa-d1de-fe5b940069d9","fieldName":"oFlexBoxLabelMissing","fieldParent":"65d8b3eb-54db-4720-a075-3b6b09f0e86c","fieldPos":237,"fieldType":"sap.m.FlexBox","script":"","request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"End","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"9ba4fdce-1f5c-464c-e984-ae300367081c","fieldName":"oVBoxLabelMiss","fieldParent":"5c4291f5-a836-4cfa-d1de-fe5b940069d9","fieldPos":238,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"63586268-2db7-4f9d-b41c-732226dce60d","fieldName":"oHBoxLabMissing","fieldParent":"9ba4fdce-1f5c-464c-e984-ae300367081c","fieldPos":239,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"7d00effb-4089-4193-e43c-9d7e8a3415ed","fieldName":"rejectNo","fieldParent":"63586268-2db7-4f9d-b41c-732226dce60d","fieldPos":240,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"CANCEL","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"diaLabelMissing.close();\n","translation":[]}]},{"fieldNo":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldName":"GlobalScripts","fieldParent":99999,"fieldPos":241,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"701f5b09-a730-497d-8ba1-4563ffafa22f","fieldName":"SetAllTableData","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":242,"fieldType":"neptune.Script","script":"/**\n * Name: setTblData\n * Description:  function For Binding the table api data to the different controls\n * Created By : Swati Mani\n * Created At: 04/13/2021\n * @param {JSON} responseData fetches the json data from table api    \n */\nfunction setTblData(responseData) {\n    // Binding the Blocked location config data\n    modelmdlBlockedLocationConfig.setData(responseData.blockedLocationConfig)\n\n    // Binding the location settings\n    modelmdlLocationSettings.setData(responseData.userLocationSettings)\n\n    // Bind the user settings data\n    modeloModelUserLocation.setData(responseData.userSettings)\n    /*\n    Based on the location assign the label for the scan button and value for the global variable\n    */\n    if (modeloModelUserLocation.getData() !== undefined) {\n\n\n        g_barcodeIdentifier = modelmdlLocationSettings.getData()[0].barcodeIdentifier;\n        if (g_barcodeIdentifier === \"huNumber\") {\n            scanPICKHU.setText(lblHuNumber.getText())\n        } else if (g_barcodeIdentifier === \"pickOrder\") {\n            scanPICKHU.setText(lblPickOrder.getText());\n        }\n\n    }\n    // Bind the status\n    modelmdlOrderStatus.setData(responseData.status)\n    setStatuses();\n\n    // Bind the reasonCode\n    modelmdlReasonCodes.setData(responseData.reasonCode)\n    // setting the global variable to binding the comboBox of reason code\n    qualReason = responseData.reasonCode;\n    qualReason.forEach(function(item) {\n\n        var list = new sap.ui.core.ListItem({\n            key: item.reasonCode,\n            text: item.reasonCode,\n            additionalText: item.description\n        });\n        g_qualReason.push(list);\n    });\n\n    // Bind the global varibales for the Disposition status combo box\n    g_REJECT = responseData.rejectReason[0].status;\n    g_ACCEPT = responseData.rejectReason[1].status;\n    qaDispositionStatus = responseData.rejectReason;\n    qaDispositionStatus.forEach(function(item) {\n\n        var list = new sap.ui.core.ListItem({\n            key: item.status,\n            text: item.status,\n        });\n        g_qaDispStatus.push(list);\n    });\n\n    // bind the WorkStation model\n    modeloModelObjectGetWorkStation.setData(responseData.workstation);\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"8c898027-0bc9-449c-dc0f-813c59850f00","fieldName":"SaveWOData","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":243,"fieldType":"neptune.Script","script":"/**\n * Name: Save WO Data\n * Description: To save the WO Data\n * Created By :Swati Mani  \n * Created At: 12/07/2020\n * CR:   \n */\nfunction saveWOData(woDataObj, woArr) {\n    post_qiDisposition(woDataObj, woArr)\n\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"572d3c46-7c6e-4778-8ed3-4536c5b76082","fieldName":"lineClearSave","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":244,"fieldType":"neptune.Script","script":"/**\n * Name: lineClearSave\n * Description: To change the status and print the BCR addendum if the Reject disposition\n * Created By :Swati Mani  \n * Created At: 12/07/2020\n * CR:   \n */\nfunction lineClearSave() {\n    var tblQualityData = tblQuality.getModel().getData();\n    var scannedWO = wrkOrdScan.getValue();\n    var pickOrderLabel = lblPickOrder.getText();\n    var huNumberLabel = lblHuNumber.getText();\n    var lineClearance = LineClearance.getSelected();\n    var execLineClerance = true;\n\n    let woFoundData = tblQualityData.find(line => {\n        return line.workOrder === scannedWO;\n    })\n    let woFoundIndex = tblQualityData.findIndex(line => {\n        return line.workOrder === scannedWO;\n    })\n\n    let woArr = [];\n    tblQualityData.forEach(line => {\n        woArr.push(line.workOrder)\n\n    })\n\n    if (woFoundData) {\n        // change status of WO with reject to Blocked and print BCR Addendum\n        // if the WO which is scanned is in rejected state then print bcr and change status\n        if (woFoundData.qaDisposition === g_REJECT) {\n\n            if (scanPICKHU.getText() === pickOrderLabel) {\n                woFoundData.pickOrderLabel = pickOrderLabel;\n                woFoundData.huNumberLabel = \"\";\n            } else if (scanPICKHU.getText() === huNumberLabel) {\n                woFoundData.pickOrderLabel = \"\";\n                woFoundData.huNumberLabel = huNumberLabel;\n            }\n            // Logic for blocking the site if it is allowed based on the config table\n            var allowedBlockedData = mdlBlockedLocationConfig.getModel().getData();\n            var allowFlag = allowedBlockedData.find(data => {\n                if (data.locationName === oInputTransSite.getValue()) {\n                    return data.allowFlag\n                }\n            })\n            if (allowFlag) {\n                woFoundData.workOrderStatus = g_BLOCKED\n            } else {\n                woFoundData.workOrderStatus = g_COMPLETED_STATUS\n            }\n\n            tblQuality.getRows()[woFoundIndex].getCells()[5].setEditable(false);\n            tblQuality.getRows()[woFoundIndex].getCells()[6].setEditable(false);\n            tblQuality.getRows()[woFoundIndex].getCells()[7].setEditable(false);\n            tblQuality.getRows()[woFoundIndex].getCells()[8].mAggregations.items[0].setEditable(false);\n            tblQuality.getRows()[woFoundIndex].getCells()[8].mAggregations.items[1].setEditable(false);\n            tblQuality.getModel().setData(tblQualityData);\n            tblQuality.getModel().refresh()\n            //Function to save data in WO tables and sending/ blocking ERP confirmation. \n            woFoundData.lineClearance = lineClearance;\n            woFoundData.execLineClerance = execLineClerance;\n            saveWOData(woFoundData, woArr)\n\n        } else if (woFoundData.qaDisposition === g_ACCEPT) {\n\n            woFoundData.workOrderStatus = g_COMPLETED_STATUS\n            tblQuality.getRows()[woFoundIndex].getCells()[5].setEditable(false);\n            tblQuality.getRows()[woFoundIndex].getCells()[6].setEditable(false);\n            tblQuality.getModel().setData(tblQualityData);\n            tblQuality.getModel().refresh()\n            // woFoundData.LineClearance.getSelected();\n            woFoundData.lineClearance = lineClearance;\n            woFoundData.execLineClerance = execLineClerance;\n\n            //Function to save data in WO tables and sending/ blocking ERP confirmation. \n            saveWOData(woFoundData, woArr)\n        }\n    } else {\n\n        // Error handling.\n    }\n\n\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"87767963-de1a-4317-df20-3ea928fa373a","fieldName":"headerDataBinding","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":245,"fieldType":"neptune.Script","script":"/**\n * Name: headerDataBinding\n * Description: Binding the response data to the header input fields and call function to bind the WO Details\n * Created By :Swati Mani  \n * Created At: 12/07/2020\n * CR:   \n */\nasync function headerDataBinding(response) {\n\n    var responseHeader = response.headerData;\n    var responseItems = response.itemData;\n    if (responseHeader && (responseHeader.toStatus === g_PENDINGQA_STATUS || responseHeader.toStatus === g_QA_INPROGRESS)) {\n        // checking for OE validation\n        var ldapDataName = mdlLDAPInfo.getModel().getData().displayName;\n        var ldapDataID = mdlLDAPInfo.getModel().getData().employeeID;\n\n        var getData = modeloModelObjectGetWorkStation.oData[0];\n        var ldapInfo = modelmdlLDAPInfo.getData();\n        if (responseHeader.updatedBy.toLowerCase() === g_user.toLowerCase()) {\n            if (g_OEName === \"final\") {\n                g_OEName = \"\"\n            } else if (g_OEName === \"\") {\n                getDialog(lblNotAllowedInspection.getText())\n            }\n\n            sap.ui.core.BusyIndicator.hide();\n        } else {\n\n            // To set the OE operator name we assign a global flag with value \"final\" \n            g_OEName = \"final\"\n            sap.ui.core.BusyIndicator.show(0);\n            var result = await getLDAPInfo(responseHeader.updatedBy)\n\n\n\n            // making clear, save buttons visible\n            btnClear.setVisible(true);\n            btnSave.setVisible(true);\n            oIconpdf.setVisible(true);\n            oIconexcel.setVisible(true);\n            // make the header items visible and set the values as per the data scanned\n            hBoxHeader.setVisible(true);\n            vBoxTransSite.setVisible(true);\n            oInputTransSite.setValue(responseHeader.location);\n            oVBoxShipToCountry.setVisible(true);\n            oInputShipToCountry.setValue(responseHeader.country);\n            vBoxToDate.setVisible(true);\n            // Converting the time for the TO Start Date and Time Field\n            var newTime = new Date(Number(responseHeader.createdAt));\n            newTime = new Date(newTime);\n            var timenew = newTime.toUTCString();\n            // Setting the Transform order number field and the pick/Hu number field from the response\n            inputTO.setValue(responseHeader.transformOrdNo);\n            if (responseHeader.pickOrder) {\n                inputPickScan.setValue(responseHeader.pickOrder);\n            } else {\n                inputPickScan.setValue(responseHeader.huNumber);\n            }\n            oInputTODate.setValue(timenew);\n            vBoxQualityInsp.setVisible(true);\n\n            vboxTo.setVisible(true);\n            oInputTOStat.setValue(responseHeader.toStatus);\n            // Function to bind the WO Details\n            bindTblQualInspec(responseItems);\n            setWoPagination();\n            sap.ui.core.BusyIndicator.hide(0);\n        }\n\n    } else if (responseHeader && responseHeader.toStatus !== g_PENDINGQA_STATUS || responseHeader.toStatus !== g_QA_INPROGRESS) {\n        sap.ui.core.BusyIndicator.hide(0);\n\n        if (g_OEName === \"\") {\n            getDialog(lblInspectionOf.getText() + \" \" + inputTO.getValue() + \" \" + lblalready.getText() + \" \" + responseHeader.toStatus + \".\")\n        } else if (g_OEName === \"final\") {\n            var data = tblQuality.getModel().getData().filter(f => {\n                return f.workOrderStatus === g_QA_INPROGRESS || f.workOrderStatus === g_BLOCKED || f.workOrderStatus === g_COMPLETED_STATUS\n            });\n            if (data.length === tblQuality.getModel().getData().length) {\n                setTimeout(function() {\n                    showMessage(lblInspectionOf.getText() + \" \" + inputTO.getValue() + \" \" + lblisNow.getText() + \" \" + responseHeader.toStatus + \".\");\n                }, 2500);\n                // Checking if it is the last \n\n            } else {\n                // continue\n            }\n        }\n\n\n        // //In the tblQuality For the last work order status goes Pending QA to BLOCKED or completed status,making the line clearance as setSelected false and wo input also we are making set enable false.\n        lineClearanceFalse();\n\n    } else {\n        sap.ui.core.BusyIndicator.hide(0);\n        inputPickScan.setEnabled(true);\n        inputTO.setEnabled(true);\n        getDialog(incorrectScan.getText());\n    }\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"15a36a3a-f795-4c65-b7f3-6e006b472b18","fieldName":"scanWOScript","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":246,"fieldType":"neptune.Script","script":"/**\n * Name: scanWOScript \n * Description:Function triggered on scanning the Work Order   \n * Created By : Swati Mani\n * Created At: 12/03/2020\n * @param : passing the work order number scanned\n */\n\nfunction scanWO(woNum) {\n    var woNum = wrkOrdScan.getValue();\n    // checking if the entered WO is present in the table or not\n    var tblData = tblQuality.getModel().getData();\n    var validWO = tblData.find((item) => {\n        return item.workOrder === woNum;\n    });\n    // if the WO is present in the table then scan WO\n    if (validWO) {\n        // checking if there is already a WO in QA INPROGRESS which is not the wrk order being scanned\n        var alreadyQAInProgress = tblData.find((item) => {\n            return item.workOrder !== woNum && item.workOrderStatus === g_QA_INPROGRESS;\n        });\n        // if work order status is in blocked status\n        var alreadyBlocked = tblData.find((item) => {\n            return item.workOrder === woNum && item.workOrderStatus === g_BLOCKED;\n        });\n\n        // if work order status is in completed status\n        var alreadyCompleted = tblData.find((item) => {\n            return item.workOrder === woNum && item.workOrderStatus === g_COMPLETED_STATUS;\n        });\n\n        // if Multiple QA INPROGRESS then error else continue with scanning\n        if (alreadyQAInProgress) {\n            getDialog(lblMultipleWorkOrderIn.getText() + g_QA_INPROGRESS);\n        } else if (alreadyBlocked) {\n            getDialog(wrkOrderHasStatus.getText() + g_BLOCKED);\n        } else if (alreadyCompleted) {\n            getDialog(wrkOrderHasStatus.getText() + g_COMPLETED_STATUS);\n        } else {\n            // find the rowIndex of the WO scanned\n            var index = tblData.forEach((data, i) => {\n                if (data.workOrder === woNum) {\n                    // make the QA Disposition column as editable\n                    tblQuality.getRows()[i].getCells()[5].setEditable(true);\n                    // Setting the TO Status and the Work Order Status as QA IN-PROGRESS\n\n                    tblQuality.getModel().getData()[i].workOrderStatus = g_QA_INPROGRESS;\n                    tblQuality.getModel().refresh();\n                    oInputTOStat.setValue(g_QA_INPROGRESS);\n                    btnSave.setEnabled(true);\n                    getQiOverDetails(g_barcodeIdentifier, \"POST\")\n\n                } else {\n                    // do nothing\n                }\n            })\n        }\n    } else {\n        getDialog(lblInvalidWO.getText());\n    }\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"9371a796-50c7-4552-f724-9203725c6614","fieldName":"languageTranslations","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":247,"fieldType":"neptune.Script","script":"/**\n * Name: Create languageTranslations for Quality Inspection\n * Description:  function update all labels(translations) for input fields and column names from rsc_translations table\n * Created By : Allugunti Aswini\n * Created At: 12/02/2020\n * @param {JSON} modelData fetches the json data from rsc_translations table api    \n */\nfunction languageTranslations() {\n    var modelData = modelmdlLabels.getData();\n    modelData.forEach(data => {\n        switch (data.technicalName) {\n            //Labels for the input fields on the filter search\n            case 'transformOrdNum':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' transformOrdNum');\n                    return;\n                } else {\n                    scanTOLabel.setText(data.translation);\n                }\n                break;\n                //changed as per Sprint 3 2021\n            case 'digitalSignatureTitle':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' digitalSignatureTitle');\n                    return;\n                } else {\n                    diaTargetAuth.setTitle(data.translation);\n\n                }\n\n                break;\n            case 'enterDisposition':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' enterDisposition');\n                    return;\n                } else {\n                    lblenterDisposition.setText(data.translation);\n\n                }\n\n                break;\n            case 'reviewApprove':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' reviewApprove');\n                    return;\n                } else {\n                    oLabelIApprove.setText(data.translation);\n\n                }\n                break;\n\n            case 'authenticationSuccess':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' authenticationSuccess');\n                    return;\n                } else {\n                    oLabelauthenticationSuccess.setText(data.translation);\n                }\n                break;\n\n            case 'authenticatonError':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' authenticatonError');\n                    return;\n                } else {\n                    oLabelauthenticatonError.setText(data.translation);\n                }\n                break;\n\n            case 'wrongUser':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' wrongUser');\n                    return;\n                } else {\n                    oLabel401Msg.setText(data.translation);\n                }\n                break;\n\n            case 'internalServer':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' internalServer');\n                    return;\n                } else {\n                    oLabel500Msg.setText(data.translation);\n                }\n                break;\n\n            case 'badGateWay':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' badGateWay');\n                    return;\n                } else {\n                    oLabel502Msg.setText(data.translation);\n                }\n                break;\n\n            case 'serviceUnavailable':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' serviceUnavailable');\n                    return;\n                } else {\n                    oLabel503Msg.setText(data.translation);\n                }\n                break;\n\n            case 'gatewayTimeOut':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' gatewayTimeOut');\n                    return;\n                } else {\n                    oLabel504Msg.setText(data.translation);\n                }\n                break;\n\n            case 'genericError':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' genericError');\n                    return;\n                } else {\n                    oLabelGenericMsg.setText(data.translation);\n                }\n                break;\n\n            case 'postData':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' postData');\n                    return;\n                } else {\n                    oLabelpostData.setText(data.translation);\n                }\n                break;\n\n            case 'rejectQtyMoreThanAccepted':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' rejectQtyMoreThanAccepted');\n                    return;\n                } else {\n                    lblRejectQtyMoreWoQty.setText(data.translation);\n                }\n                break;\n            case 'execLineClr':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' execLineClr');\n                    return;\n                } else {\n                    lblExceLineClerance.setText(data.translation);\n                }\n                break;\n            case 'huNumber':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' huNumber');\n                    return;\n                } else {\n                    lblHuNumber.setText(data.translation);\n                }\n                break;\n            case 'yesLeb':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' yesLeb');\n                    return;\n                } else {\n                    yesExce.setText(data.translation);\n                }\n                break;\n\n            case 'digitalBcrSaved':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + 'digitalBcrSaved');\n                    return;\n                } else {\n                    lblDigitalRecord.setText(data.translation);\n                }\n                break;\n\n            case 'cancelLeb':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' cancelLeb');\n                    return;\n                } else {\n                    butCancel.setText(data.translation);\n                    rejectNo.setText(data.translation);\n                }\n                break;\n            case 'pickOrder':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' pickOrder');\n                    return;\n                } else {\n                    lblPickOrder.setText(data.translation);\n                }\n\n                break;\n            case 'woDetails':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' woDetails');\n                    return;\n                } else {\n                    lblWrkOrderDetails.setText(data.translation);\n                }\n\n                break;\n\n            case 'clearBtn':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' clearBtn');\n                    return;\n                } else {\n                    btnClear.setText(data.translation.toUpperCase());\n                }\n\n                break;\n\n            case 'saveLeb':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' saveLeb');\n                    return;\n                } else {\n                    btnSave.setText(data.translation.toUpperCase());\n                }\n                break;\n\n            case 'sysVal':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' sysVal');\n                    return;\n                } else {\n                    lblExceLine.setText(data.translation);\n                    dialogCommon.setTitle(data.translation);\n                    diaLabelMissing.setTitle(data.translation);\n                }\n                break;\n\n            case 'welcomeText':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' welcomeText');\n                    return;\n                } else {\n                    lblWelcome.setText(data.translation);\n                }\n\n                break;\n            case 'transformOrder':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' transformOrder');\n                    return;\n                } else {\n                    oLabelTONum.setText(data.translation);\n                }\n\n                break;\n\n            case 'qualInsp':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' qualInsp');\n                    return;\n                } else {\n                    lblQualityInspection.setText(data.translation);\n                }\n\n                break;\n\n            case 'transSite':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' transSite');\n                    return;\n                } else {\n                    oLabelTransSite.setText(data.translation);\n                }\n\n                break;\n            case 'home':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' home');\n                    return;\n                } else {\n                    home.setText(data.translation);\n                }\n\n                break;\n\n            case 'shiptoCountry':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' shiptoCountry');\n                    return;\n                } else {\n                    oLabelShipTOCountry.setText(data.translation);\n                }\n\n                break;\n            case 'toDate':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' toDate');\n                    return;\n                } else {\n                    oLabelTODate.setText(data.translation);\n                }\n\n                break;\n            case 'reprintLabels':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' reprintLabels');\n                    return;\n                } else {\n                    lblReprintLabels.setText(data.translation);\n                }\n                break;\n            case 'toStatus':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' toStatus');\n                    return;\n                } else {\n                    oLabelTOStat.setText(data.translation);\n                }\n\n                break;\n            case 'oeOperator':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' oeOperator');\n                    return;\n                } else {\n                    lblQualInsp.setText(data.translation);\n                }\n\n                break;\n\n            case 'verifyLine':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' verifyLine');\n                    return;\n                } else {\n                    oLabelLineClearancet.setText(data.translation);\n                }\n\n                break;\n                //Table col labels\n\n            case 'woNum':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' woNum');\n                    return;\n                } else {\n                    lblWo.setText(data.translation);\n                    lblWONum.setText(data.translation);\n                    oLabelWorkOrderNumber.setText(data.translation);\n                }\n\n                break;\n\n            case 'productNumber':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' productNumber');\n                    return;\n                } else {\n                    oLabelProductNum.setText(data.translation);\n                }\n                break\n            case 'batchNumber':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' batchNumber');\n                    return;\n                } else {\n                    oLabelBatchNum.setText(data.translation);\n                }\n\n                break;\n            case 'woStatus':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' woStatus');\n                    return;\n                } else {\n                    oLabelWorkOrderStatus.setText(data.translation);\n                }\n\n                break;\n            case 'inspectionOf':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' inspectionOf');\n                    return;\n                } else {\n                    lblInspectionOf.setText(data.translation);\n                }\n\n                break;\n            case 'is':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' is');\n                    return;\n                } else {\n                    lblis.setText(data.translation);\n                }\n\n                break;\n\n            case 'already':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' already');\n                    return;\n                } else {\n                    lblalready.setText(data.translation);\n                }\n\n                break;\n            case 'isNow':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' isNow');\n                    return;\n                } else {\n                    lblisNow.setText(data.translation);\n                }\n\n                break;\n            case 'date':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' date');\n                    return;\n                } else {\n                    oLabeldate.setText(data.translation);\n                }\n\n                break;\n\n            case 'woQty':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' woQty');\n                    return;\n                } else {\n                    oLabelBatchQty.setText(data.translation);\n                }\n\n                break;\n\n            case 'UOM':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' UOM');\n                    return;\n                } else {\n                    oLabelUnitOfMeas.setText(data.translation);\n                }\n\n                break;\n\n            case 'qaDispo':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' qaDispo');\n                    return;\n                } else {\n                    lblQaDispsition.setText(data.translation);\n                }\n\n                break;\n            case 'acQty':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' acQty');\n                    return;\n                } else {\n                    lblAcQty.setText(data.translation);\n                }\n\n                break;\n            case 'rjcQty':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' rjcQty');\n                    return;\n                } else {\n                    lblrRcQty.setText(data.translation);\n                }\n\n                break;\n            case 'rjtReason':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' rjtReason');\n                    return;\n                } else {\n                    lblRjtReason.setText(data.translation);\n                }\n\n                break;\n\n            case 'compTyp':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' compTyp');\n                    return;\n                } else {\n                    lblCompType.setText(data.translation);\n                }\n\n                break;\n\n            case 'compControl':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' compControl');\n                    return;\n                } else {\n                    lblCompControl.setText(data.translation);\n                }\n\n                break;\n            case 'repQty':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' repQty');\n                    return;\n                } else {\n                    lblRepQty.setText(data.translation);\n                }\n\n                break;\n\n            case 'cmpCnfirmQty':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' cmpCnfirmQty');\n                    return;\n                } else {\n                    lblCmpConfirmQty.setText(data.translation);\n                }\n\n                break;\n            case 'confirm':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' confirm');\n                    return;\n                } else {\n                    formLoginButton.setText(data.translation.toUpperCase());\n                }\n\n                break;\n\n                //error messages\n            case 'peAcQty':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' peAcQty');\n                    return;\n                } else {\n                    lblEnterAcceptQty.setText(data.translation);\n                }\n\n                break;\n\n            case 'oLabel401Msg':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' oLabel401Msg');\n                    return;\n                } else {\n                    oLabel401Msg.setText(data.translation);\n                }\n\n                break;\n            case 'oLabel500Msg':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' oLabel500Msg');\n                    return;\n                } else {\n                    oLabel500Msg.setText(data.translation);\n                }\n\n                break;\n            case 'oLabel502Msg':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' oLabel502Msg');\n                    return;\n                } else {\n                    oLabel502Msg.setText(data.translation);\n                }\n\n                break;\n            case 'oLabel503Msg':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' oLabel503Msg');\n                    return;\n                } else {\n                    oLabel503Msg.setText(data.translation);\n                }\n\n                break;\n            case 'oLabelGenericMsg':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' oLabelGenericMsg');\n                    return;\n                } else {\n                    oLabelGenericMsg.setText(data.translation);\n                }\n\n                break;\n\n            case 'totalItemCount':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' totalItemCount');\n                    return;\n                } else {\n                    lblTotalHeader.setText(data.translation);\n                }\n                break;\n\n            case 'languageTranslationErr':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' languageTranslationErr');\n                    return;\n                } else {\n                    lblMissingErrorMsg.setText(data.translation);\n                    oLabelMissingTranslations.setText(data.translation);\n                }\n\n                break;\n            case 'oLabel504Msg':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' oLabel504Msg');\n                    return;\n                } else {\n                    oLabel504Msg.setText(data.translation);\n                }\n\n                break;\n            case 'rjtQtyM':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' rjtQtyM');\n                    return;\n                } else {\n                    lblEnterRejectQty.setText(data.translation);\n                }\n\n                break;\n            case 'sumWoQty':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' sumWoQty');\n                    return;\n                } else {\n                    lblSumMoreWoQty.setText(data.translation);\n                }\n\n                break;\n\n            case 'mreAccQty':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' mreAccQty');\n                    return;\n                } else {\n                    lblRejectQtyMoreAcceptedQty.setText(data.translation);\n                }\n\n                break;\n\n            case 'inValWo':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' inValWo');\n                    return;\n                } else {\n                    lblInvalidWO.setText(data.translation);\n                }\n                break;\n\n            case 'enterWo':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' enterWo');\n                    return;\n                } else {\n                    lblEnterWO.setText(data.translation);\n                }\n                break;\n\n            case 'noInspec':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' noInspec');\n                    return;\n                } else {\n                    noInspecReqStatus.setText(data.translation);\n                }\n                break;\n\n            case 'incorrectScan':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' incorrectScan');\n                    return;\n                } else {\n                    incorrectScan.setText(data.translation);\n                }\n                break;\n                //BCR print Labels\n            case 'workiInstruction':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' workiInstruction');\n                    return;\n                } else {\n                    oLabelworkInstruction.setText(data.translation);\n                }\n                break;\n            case 'transformationOp':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' transformationOp');\n                    return;\n                } else {\n                    oLabelTOoperator.setText(data.translation);\n                }\n\n                break;\n            case 'lineClearance':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' lineClearance');\n                    return;\n                } else {\n                    oLabelLineClear.setText(data.translation);\n                }\n\n                break;\n            case 'inspectionOp':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' inspectionOp');\n                    return;\n                } else {\n                    oLabelinspecOpp.setText(data.translation);\n                }\n\n                break;\n            case 'wwid':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' wwid');\n                    return;\n                } else {\n                    oLabelwwid.setText(data.translation);\n                }\n                break;\n            case 'signature':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' signature');\n                    return;\n                } else {\n                    oLabelsign.setText(data.translation);\n                }\n\n                break;\n            case 'date':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' date');\n                    return;\n                } else {\n                    oLabeldate.setText(data.translation);\n                }\n\n                break;\n            case 'batchRecord':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' batchRecord');\n                    return;\n                } else {\n                    oLabelbatchPF.setText(data.translation);\n                }\n\n                break;\n            case 'prodResult':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' prodResult');\n                    return;\n                } else {\n                    oLabelTOpf.setText(data.translation);\n                }\n\n                break;\n\n            case 'workStation':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' workStation');\n                    return;\n                } else {\n                    lblWorkStation.setText(data.translation);\n                }\n\n                break;\n            case 'gtinNum':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' gtinNum');\n                    return;\n                } else {\n                    oLabelGTIN.setText(data.translation);\n                }\n\n                break;\n            case 'variant':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' variant');\n                    return;\n                } else {\n                    oLabelVariant.setText(data.translation);\n                }\n\n                break;\n            case 'productSKU':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' productSKU');\n                    return;\n                } else {\n                    oLabelSKU.setText(data.translation);\n                }\n\n                break;\n\n            case 'type':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' type');\n                    return;\n                } else {\n                    oLabelComponentType.setText(data.translation);\n                }\n\n                break;\n\n            case 'cid':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' cid');\n                    return;\n                } else {\n                    oLabelComponentID.setText(data.translation);\n                }\n\n                break;\n\n            case 'version':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' version');\n                    return;\n                } else {\n                    oLabelVersion.setText(data.translation);\n                }\n\n                break;\n\n            case 'workiInstruction':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' workiInstruction');\n                    return;\n                } else {\n                    oLabelworkInstruction.setText(data.translation);\n                }\n\n                break;\n\n            case 'labelRet':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' labelRet');\n                    return;\n                } else {\n                    oLblLabelretention.setText(data.translation);\n                }\n\n                break;\n            case 'labelRecon':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' labelRecon');\n                    return;\n                } else {\n                    oLabelReconcilition.setText(data.translation);\n                }\n\n                break;\n            case 'ifuReconciliation':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ifuReconciliation');\n                    return;\n                } else {\n                    oLabelIFUReconcilition.setText(data.translation);\n                }\n\n                break;\n            case 'comments':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' comments');\n                    return;\n                } else {\n                    oLabelComments.setText(data.translation);\n\n                }\n\n                break;\n            case 'transformationOp':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' transformationOp');\n                    return;\n                } else {\n                    oLabelTOoperator.setText(data.translation);\n                }\n\n                break;\n\n            case 'lineClearance':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' lineClearance');\n                    return;\n                } else {\n                    oLabelLineClear.setText(data.translation);\n                }\n\n                break;\n\n            case 'batchRecord':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' batchRecord');\n                    return;\n                } else {\n                    oLabelbatchPF.setText(data.translation);\n                }\n\n                break;\n\n            case 'prodResult':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' prodResult');\n                    return;\n                } else {\n                    oLabelTOpf.setText(data.translation + \":\");\n                }\n\n                break;\n\n            case 'nonConfirm':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' nonConfirm');\n                    return;\n                } else {\n                    oLabelnonConfrm.setText(data.translation);\n                }\n\n                break;\n\n            case 'tnyc':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' tnyc');\n                    return;\n                } else {\n                    lblTotalNyc.setText(data.translation);\n                }\n                break;\n\n            case 'reasonCode':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' reasonCode');\n                    return;\n                } else {\n                    lblReason.setText(data.translation + \":\");\n                }\n\n                break;\n\n            case 'nonConfirm':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' nonConfirm');\n                    return;\n                } else {\n                    lblNonConfirmity.setText(data.translation);\n                }\n\n                break;\n            case 'confirm':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' confirm');\n                    return;\n                } else {\n                    oBtnDialogBackYes.setText(data.translation);\n                    yesBcr.setText(data.translation);\n                }\n\n                break;\n\n            case 'qty':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' qty');\n                    return;\n                } else {\n                    lblQtty.setText(data.translation);\n                }\n                break;\n\n            case 'multiWorkOrdersIn':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' multiWorkOrdersIn');\n                    return;\n                } else {\n                    lblMultipleWorkOrderIn.setText(data.translation);\n                }\n\n                break;\n\n            case 'PleaseEnterTO':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' PleaseEnterTO');\n                    return;\n                } else {\n                    lblPleaseEnterTON.setText(data.translation);\n                }\n\n                break;\n\n            case 'enterTO/Pick/HU':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + 'enterTO/Pick/HU');\n                    return;\n                } else {\n                    lblEnterTOHUPick.setText(data.translation);\n                }\n\n                break;\n\n            case 'logoutMsg':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + 'logoutMsg');\n                    return;\n                } else {\n                    lblLogOut.setText(data.translation);\n                }\n\n                break;\n\n            case 'execLineClearQi':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + 'execLineClearQi');\n                    return;\n                } else {\n                    txtExec.setText(data.translation);\n                    lblLineExec.setText(data.translation);\n                }\n                break;\n                //Error Message technicalName adding here\n            case 'noInspecReq':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + ' noInspecReq');\n                    return;\n                } else {\n                    noInspecReqStatus.setText(data.translation);\n                }\n\n                break;\n            case 'incorrectNum':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + ' incorrectNum');\n                    return;\n                } else {\n                    incorrectScan.setText(data.translation);\n                }\n\n                break;\n            case 'enterTO':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + ' enterTO');\n                    return;\n                } else {\n                    lblPleaseEnterTO.setText(data.translation);\n                }\n\n                break;\n            case 'enterHUPick':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + 'enterHUPick');\n                    return;\n                } else {\n                    lblEnterHUPick.setText(data.translation);\n                }\n\n                break;\n            case 'cantInspectSameOE':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + 'cantInspectSameOE');\n                    return;\n                } else {\n                    lblNotAllowedInspection.setText(data.translation);\n                }\n\n                break;\n            case 'wrkHasStatus':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + 'wrkHasStatus');\n                    return;\n                } else {\n                    wrkOrderHasStatus.setText(data.translation);\n                }\n\n                break;\n\n            case 'multipleQAinProgress':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + 'multipleQAinProgress');\n                    return;\n                } else {\n                    multipleQAInprogress.setText(data.translation);\n                }\n\n                break;\n            case 'mreWoQty':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + 'mreWoQty');\n                    return;\n                } else {\n                    lblAccQtyMoreWoQty.setText(data.translation);\n                }\n\n\n                break;\n\n            case 'rejectQtyZero':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + 'rejectQtyZero');\n                    return;\n                } else {\n                    lblRejectQty0.setText(data.translation);\n                }\n\n\n                break;\n            case 'enterRejectCode':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + 'enterRejectCode');\n                    return;\n                } else {\n                    lblEnterReasonCode.setText(data.translation);\n                }\n\n                break;\n\n\n            case 'esignConfirmation':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + 'esignConfirmation');\n                    return;\n                } else {\n                    lblEsignConfirmation.setText(data.translation);\n                }\n\n                break;\n\n\n            case 'productTransformationConfirmed':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + 'productTransformationConfirmed');\n                    return;\n                } else {\n                    lblPTConfirmation.setText(data.translation);\n                }\n                break;\n\n\n            case 'labelRetentionConfirmed':\n                if (!data.translation) {\n                    diaLabelMissing.open();\n                    oMessageStrip.setText(lblMissingErrorMsg.getText() + 'labelRetentionConfirmed');\n                    return;\n                } else {\n                    labelRetensionConfirmed.setText(data.translation);\n                }\n                break;\n            default:\n        }\n    });\n    sap.ui.core.BusyIndicator.hide(0);\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"d2e81dcf-037d-48ae-8ab4-30d1c92f47db","fieldName":"Global","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":248,"fieldType":"neptune.Script","script":"/**\n * Name: Global\n * Description: to initialize global funtion and variables.\n * Created By :Swati Mani  \n * Created At: 12/1/2020\n * CR:   \n */\nvar g_barcodeIdentifier = \"\";\nvar g_INPROGRESS_STATUS;\nvar g_PENDINGQA_STATUS;\nvar g_ONHOLD_STATUS;\nvar g_CREATED_STATUS;\nvar g_COMPLETED_STATUS;\nvar g_BLOCKED;\nvar g_qualReason = [];\nvar g_QA_INPROGRESS;\nvar g_qaDispStatus = [];\nvar g_ACCEPT;\nvar g_REJECT;\nvar g_OEName = \"\";\nvar g_QIOperator;\n\nfunction setStatuses() {\n\n    // Gets status based on user location and sets statuses to global variables, which can be used across the application. \n    //**Make sure we don't update the below global variables.\n    var orderStatusData = modelmdlOrderStatus.getData();\n\n    let createdObj = orderStatusData.find(f => {\n        return f.sequnceNo === \"1\"\n    });\n    if (createdObj) {\n        g_CREATED_STATUS = createdObj.woStatus;\n    }\n\n    let progressObj = orderStatusData.find(f => {\n        return f.sequnceNo === \"2\"\n    });\n    if (progressObj) {\n        g_INPROGRESS_STATUS = progressObj.woStatus;\n    }\n\n\n    let pendingObj = orderStatusData.find(f => {\n        return f.sequnceNo === \"5\"\n    });\n    if (pendingObj) {\n        g_PENDINGQA_STATUS = pendingObj.woStatus;\n    }\n\n\n    let onHoldObj = orderStatusData.find(f => {\n        return f.sequnceNo === \"6\"\n    });\n    if (onHoldObj) {\n        g_ONHOLD_STATUS = onHoldObj.woStatus;\n    }\n\n    let completedObj = orderStatusData.find(f => {\n        return f.sequnceNo === \"3\"\n    });\n    if (completedObj) {\n        g_COMPLETED_STATUS = completedObj.woStatus;\n    }\n\n    let qaInProgressObj = orderStatusData.find(f => {\n        return f.sequnceNo === \"7\"\n    });\n    if (qaInProgressObj) {\n        g_QA_INPROGRESS = qaInProgressObj.woStatus;\n    }\n\n    let qaBlocked = orderStatusData.find(f => {\n        return f.sequnceNo === \"4\"\n    });\n    if (qaBlocked) {\n        g_BLOCKED = qaBlocked.woStatus;\n    }\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"f918f7dd-ee7a-48a7-cb67-b1510c63c7ef","fieldName":"CommonFunctions","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":249,"fieldType":"neptune.Script","script":"/**\n * Name: clearFields \n * Description:Function triggered on clicking the clear button  \n * Created By : Aswini Allugunti\n * Created At: 12/02/2020\n */\n\n\n// Function triggered on clicking the clear button \nfunction clearFields() {\n    hBoxHeader.setVisible(false);\n    oInputTransSite.setValue();\n    oInputShipToCountry.setValue();\n    oInputTODate.setValue();\n    oInputTOStat.setValue();\n    inpQualInspect.setValue();\n    wrkOrdScan.setValue();\n    inputTO.setValue();\n    inputPickScan.setValue();\n    LineClearance.setSelected();\n    panelQualityInspection.setVisible(false);\n    btnClear.setVisible(false);\n    btnSave.setVisible(false);\n    inputPickScan.setEnabled(true);\n    inputTO.setEnabled(true);\n}\n\n// Common dialog to set the text\nfunction getDialog(msg) {\n    lblMessage.setText(msg);\n    dialogCommon.open();\n}\n\n// printDateString -- Returns date in format \"02 Nov 2020\"\nfunction printDateString(myDate) {\n    var month = [];\n    month[0] = \"Jan\";\n    month[1] = \"Feb\";\n    month[2] = \"Mar\";\n    month[3] = \"Apr\";\n    month[4] = \"May\";\n    month[5] = \"Jun\";\n    month[6] = \"Jul\";\n    month[7] = \"Aug\";\n    month[8] = \"Sep\";\n    month[9] = \"Oct\";\n    month[10] = \"Nov\";\n    month[11] = \"Dec\";\n    var dd = String(myDate.getDate()).padStart(2, '0');\n    return dd + \" \" + month[myDate.getMonth()] + \" \" + myDate.getFullYear();\n}\n\nvar qr = new QRCode(\"qrcode\", {\n    //  text: QRId,\n    width: 200,\n    height: 200,\n    colorDark: \"#000\",\n    colorLight: \"#fff\",\n    correctLevel: QRCode.CorrectLevel.H\n});\n\n/**show message toast\n *@param {String} strMsg pass the message to show\n */\nfunction showMessage(strMsg) {\n    sap.m.MessageToast.show(strMsg, {\n        duration: 1500, // default\n        width: \"22em\", // default\n        my: \"center center\", // default\n        at: \"center center\", // default\n        animationTimingFunction: \"ease-in\", // default\n        animationDuration: 300 // default\n    });\n}\n\n\n/**used to check the pdf url is valid or not \n * @param {String} str send the pdf URL to validate\n */\nfunction validURL(str) {\n    var split = str.split('/');\n    var extention = split[split.length - 1].split('.');\n    if (split[split.length - 1].includes(\"pdf\")) {\n        return true;\n    } else {\n        return false;\n    }\n\n}\n\n/**\n * Name: lineClearanceFalse \n * Description:In the tblQuality For the last work order satus goes Pending QA to BLOCKED or completed status,making the line clearance as setSelected false and wo input also we are making set enable false.  \n * Created By : Aswini Allugunti\n * Created At: 04/03/2020\n */\nfunction lineClearanceFalse() {\n    LineClearance.setSelected();\n    wrkOrdScan.setValue();\n    clearFields();\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"71805710-ff23-4325-d3d9-177cbb7b32ab","fieldName":"init","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":250,"fieldType":"neptune.Script","script":"/**\n * Name: init\n * Description: on init load\n * Created By : Allugunti Aswini\n * Created At: 12/01/2020\n * CR:   \n */\n\n// Added the error handling, incase user doesn't have the languageKey in localStorage, set it to EN by default.\nif (window.localStorage.languageKey === undefined || window.localStorage.languageKey === \"\") {\n    window.localStorage.languageKey = \"EN\";\n}\nvar g_user;\n// Only for View - Custom beforeDisplay - Trigger everytime the view is started\nif (sap.n) {\n    sap.n.Shell.attachBeforeDisplay(function() {\n        getBCRLabels();\n        // Do your Stuff\n    });\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"b382d24f-73e6-4e2e-c7e0-1cdb29d7e965","fieldName":"ajaxCalls","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":251,"fieldType":"neptune.Script","script":"/**\n * Name: getBCRLabels\n * Description: Get the BCR labels \n * Created By :Swati Mani  \n * Created At: 12/07/2020\n * CR:   \n */\nfunction getBCRLabels() {\n    let languageKey = window.localStorage.languageKey ? window.localStorage.languageKey : \"EN\"\n    var whereParam = '{\"languageKey\": \"' + languageKey + '\"}';\n\n\n    var options = {\n        parameters: {\n            \"where\": whereParam, // Optional \n            \"select\": \"\", // Optional \n            \"take\": \"\", // Optional \n            \"skip\": \"\", // Optional \n            \"order\": \"\" // Optional \n\n        }\n    };\n    sap.ui.core.BusyIndicator.show(0);\n\n    apigetLabels(options);\n\n}\n\n/**\n * Name: getLDAPInfo\n * Description: Get User information from this api call \n * Created By :Swati Mani  \n * Created At: 12/07/2020\n * CR:   \n */\nfunction getLDAPInfo(userName) {\n\n    var options = {\n        parameters: {\n            \"ntUserId\": userName // Required \n        }\n    };\n\n    apigetLDAPInfo(options);\n}\n\n\n\n\n/**\n * Name: getQiOverDetails\n * Description: Get the WO details based on the barcode identifier\n * Created By :Swati Mani  \n * Created At: 12/07/2020\n * CR:   \n * @params : barcodeIdentifier - pick/hu identifiers\n * action : GET, POST\n */\n\nfunction getQiOverDetails(barcodeIdentifier, action) {\n    if (barcodeIdentifier === \"transformOrdNo\") {\n        var options = {\n            data: {\n                \"scan_num\": inputTO.getValue().toUpperCase(),\n                \"barcodeIdentifier\": barcodeIdentifier,\n                \"location\": modeloModelUserLocation.getData().location,\n                \"action\": action,\n                \"status\": action === \"GET\" ? \"\" : g_QA_INPROGRESS,\n                \"wONum\": action === \"GET\" ? \"\" : wrkOrdScan.getValue()\n            }\n        };\n        // Blocks the entire screen\n        sap.ui.core.BusyIndicator.show(0);\n\n        apigetQiOverviewDetails(options);\n    } else {\n        var options = {\n            data: {\n                \"scan_num\": inputPickScan.getValue().toUpperCase(),\n                \"barcodeIdentifier\": barcodeIdentifier,\n                \"location\": modeloModelUserLocation.getData().location,\n                \"action\": action,\n                \"status\": action === \"GET\" ? \"\" : g_QA_INPROGRESS,\n                \"wONum\": action === \"GET\" ? \"\" : wrkOrdScan.getValue()\n\n            }\n        };\n\n        sap.ui.core.BusyIndicator.show(0);\n        apigetQiOverviewDetails(options);\n    }\n}\n\nfunction saveVBR() {\n\n    var data = {};\n    var tblData = tblQuality.getModel().getData().filter(f => {\n        return f.workOrder === wrkOrdScan.getValue();\n    });\n\n    var ldapInfo = modelmdlLDAPInfo.getData();\n    \n    var reasonData = mdlReasonCodes.getModel().getData().find(f => {\n        if (f.reasonCode === tblData[0].reasonCode) {\n            if(f.reasonCode === \"R009 + Reason\"){\n                // already oText is binded\n            }else{\n                tblData[0].reasonDesc = f.description;\n            }\n            \n        }\n    });\n     // Update the reason description as N/A when the disposition is ACCEPT\n    if (tblData[0].reasonCode === \"N/A\") {\n        tblData[0].reasonDesc = \"N/A\";\n    }\n    //save the inspector name in VBR\n    tblData[0].qiInspector = g_QIOperator;\n\n\n    /**\n     * Name: Order_Execution_API\n     * Description: MTO - Order execution app API group\n     * \n     * Path: /saveBCRData\n     * Method: POST\n     * \n     */\n    var options = {\n        data: {\n            action: \"QI\",\n            tblData,\n            toNum: inputTO.getValue()\n\n        }\n    };\n    apioRestAPISaveBCRData(options);\n}\n\n/**\n * Name: getQiItemDetails\n * Description: Get the WO items when you click on the hyperlink of WO Number\n * Created By :Swati Mani  \n * Created At: 12/07/2020\n * CR:   \n * @params : wrkOrdNum - WOrk Order number which you clicked on \n * action : GET, POST\n */\nfunction getQiItemDetails(wrkOrdNum, action) {\n    var options = {\n        data: {\n            \"action\": action,\n            \"wONum\": wrkOrdNum\n        }\n    };\n\n    sap.ui.core.BusyIndicator.show(0);\n    apigetQiOverviewDetails(options);\n}\n\n/**\n * Name: post_qiDisposition\n * Description: POST the data to DB \n * Created By :Swati Mani  \n * Created At: 12/07/2020\n * CR:   \n * @params : woDataObj - WOrk Order number which you clicked on \n * woArr : array of work orders for that pick/hu/TO\n */\nfunction post_qiDisposition(woDataObj, woArr) {\n\n    /**\n     * Name: lst_post_qaDispositionData\n     * Description: Api to post the data into reject disposition and for ERP confirmation\n     * \n     * Path: /post_qaDisp\n     * Method: POST\n     * \n     */\n    var options = {\n        data: {\n            \"woItem\": woDataObj,\n            \"woArr\": woArr,\n\n        }\n    };\n\n    sap.ui.core.BusyIndicator.show(0);\n    apipost_qaDisposition(options);\n}\n\n/**\n * Name: qaDispositionStatus\n * Description: GET the status for the qa disposition \n * Created By :Swati Mani  \n * Created At: 12/07/2020\n * CR:   \n *\n */\nfunction qaDispositionStatus() {\n    /**\n     * Name: API lst_config_reject_status\n     * Description: Get the qa_disposition status from lst_config_reject_status config table\n     * \n     * Path: /lst_config_reject_status\n     * Method: GET\n     * \n     * Body:\n     */\n\n    var object = \"qa_disposition\"\n    var whereParam = '{\"object\":\"' + object + '\"';\n\n    whereParam = whereParam + ',\"objName\":\"' + \"QI\" + '\"';\n    whereParam = whereParam + '}';\n\n    var options = {\n        parameters: {\n            \"where\": whereParam, // Optional \n            \"select\": \"\", // Optional \n            \"take\": \"\", // Optional \n            \"skip\": \"\", // Optional \n            \"order\": \"\" // Optional \n        }\n    };\n\n    apigetqaDispositionStatus(options);\n}\n\nfunction getAllTableData() {\n    /**\n     * Name: QUALITY_INSPECTION_API\n     * Description: API Group for the Quality Inspection App\n     * \n     * Path: /getAllTableData\n     * Method: POST\n     * \n     * Body:\n     */\n    var options = {\n        data: {\n            \"userName\": g_user,\n            \"languageKey\": window.localStorage.languageKey\n        }\n    };\n\n    apigetTableData(options);\n\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"1711f4e2-d0c3-4b31-e101-d43f7154be7d","fieldName":"ajaxErrors","fieldParent":"6aff0571-011d-4f85-b9cc-c57287930d6b","fieldPos":252,"fieldType":"neptune.Script","script":"/**\r\n * Name: ajaxError\r\n * Description: Function to handle response errors with meaningful messaages\r\n * Created By :Aswini Allugunti  \r\n * Created At: 14/10/2020\r\n * CR:   \r\n */\r\n \r\nfunction handleErrors(xhr, status) {\r\n    \r\n    var statusCode = xhr.status;\r\n    if (statusCode === 401) {\r\n        getDialog(oLabel401Msg.getText());\r\n        setTimeout(function() {\r\n            location.reload();\r\n        }, 3000);\r\n    } else if (statusCode === 500) {\r\n        getDialog(oLabel500Msg.getText());\r\n    } else if (statusCode === 502) {\r\n        getDialog(oLabel502Msg.getText());\r\n    } else if (statusCode === 503) {\r\n        getDialog(oLabel503Msg.getText());\r\n    } else if (statusCode === 504) {\r\n        getDialog(oLabel504Msg.getText());\r\n    } else if (statusCode > 401 && statusCode < 512) {\r\n        getDialog(oLabelGenericMsg.getText());\r\n    }\r\n}\r\n","request":[],"response":[],"attributes":[]},{"fieldNo":"f3ef8913-cf4c-450f-ceb0-03d39f0ac50f","fieldName":"BCR-Labels/API","fieldParent":99999,"fieldPos":253,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"69d36c7c-8530-4bdc-94f2-a90681563d13","fieldName":"Models","fieldParent":"f3ef8913-cf4c-450f-ceb0-03d39f0ac50f","fieldPos":254,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4f3dc504-6e2f-4a02-d586-7259973a416d","fieldName":"oModelObjectGetWorkStation","fieldParent":"69d36c7c-8530-4bdc-94f2-a90681563d13","fieldPos":255,"fieldType":"neptune.model.object","bindingValue":"lst_workstation_configuration>lst_workstation_configuration","bindingType":"u","bindingSource":"API","bindingParentID":"57f9f34e-4e85-49de-80c6-12b10363215b","bindingPathID":"cbe51f31-1a0a-4e78-a13e-7d98a3e9dfcc","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e1239ac9-ab31-4f77-f860-6f74e5ef1659","fieldName":"APIs","fieldParent":"f3ef8913-cf4c-450f-ceb0-03d39f0ac50f","fieldPos":256,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"1844701f-0a5b-41aa-edde-fe26c9af051c","fieldName":"oRestAPIGetWorkStation","fieldParent":"e1239ac9-ab31-4f77-f860-6f74e5ef1659","fieldPos":257,"fieldType":"neptune.restapi","restSource":"57f9f34e-4e85-49de-80c6-12b10363215b","restOperation":"edbda1ad-5549-4129-dd28-e887baa46d02","script":"","request":[],"response":[{"status":200,"dataId":"cbe51f31-1a0a-4e78-a13e-7d98a3e9dfcc","modelFieldNo":"4f3dc504-6e2f-4a02-d586-7259973a416d"}],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"ResetTimeOutTimer()","script":"ResetTimeOutTimer()","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status)\nResetTimeOutTimer()","translation":[]}]},{"fieldNo":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldName":"Labels","fieldParent":"f3ef8913-cf4c-450f-ceb0-03d39f0ac50f","fieldPos":258,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"af5805fd-6cfe-452f-d58f-84b11b082061","fieldName":"lblenterDisposition","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":259,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"56114a78-59c4-4f26-d2ee-e2365f2807da","fieldName":"oLabelTOoperator","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":260,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"085e43f7-0f84-4235-be7f-eab2ab2039b1","fieldName":"oLabelSupervr","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":261,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4e4e9c32-dc11-43f2-943f-7ffdaca8a4cf","fieldName":"oLabelLineClear","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":262,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ede32995-427a-46e9-c42b-6f1ec1be4e8f","fieldName":"oLabelbatchPF","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":263,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"67c92754-22e9-4afc-82df-c4ebf70baa67","fieldName":"oLabelTOpf","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":264,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"b44f5887-0484-4899-a84c-92d5d678aeab","fieldName":"oLabelnonConfrm","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":265,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"bb1fe96e-0bfb-43f1-9e92-d5fcae0443b4","fieldName":"oLabelinspecOpp","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":266,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8387f935-6ce2-461d-93ba-59b36ceb8b36","fieldName":"oLabelworkInstruction","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":267,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4eff36ab-3ed2-41e6-fca3-75690795c26e","fieldName":"oLabelVersion","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":268,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"1032f009-2553-4f12-b9a8-e69bbe3da0eb","fieldName":"oLabeldate","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":269,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"a68f1f94-a256-4724-dd23-99d36219b2f2","fieldName":"oLabelsign","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":270,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4cd3ce19-35ca-4ce0-9660-4087436d939c","fieldName":"oLabelMaterialList","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":271,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"9558a80b-42bc-4528-f2c4-b815fc842ed7","fieldName":"oLabelwwid","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":272,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"1a6b88bf-d369-4343-94d7-92692ce060fa","fieldName":"lblLstBatch","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":273,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"6d3b15a0-c84e-4eea-fcac-6a8b8cf7f126","fieldName":"oLabelSerialNo","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":274,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"06e21259-2b1f-40ee-bed8-443a31a1c4ed","fieldName":"oLabelBatch","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":275,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"141d08e8-6a7f-4e09-d036-a313a382878e","fieldName":"oLabelqty","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":276,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"bc40c00f-a2bf-470f-921f-eb2b43022526","fieldName":"oLabelUOM","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":277,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"2a8e85d1-993d-4d5e-beb4-4cc3026ae2e8","fieldName":"oLabelVariantscan","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":278,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ba9d5c1c-4a6f-426a-ffd7-8ec1ace08cf3","fieldName":"oLabelGTINscan","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":279,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"faf54483-bcb3-4f67-d034-ea28ef89da14","fieldName":"oLabelTONum","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":280,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e1c9fece-4904-4eee-b9fa-ae87e9dcd249","fieldName":"lblWONum","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":281,"fieldType":"sap.m.Label","filePath":"lblwonum","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"72bab01c-e8a1-4ede-96d9-d4f561b46ebc","fieldName":"lblIfuApplied","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":282,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ff005aca-5919-4933-adc3-c6ae5c171d68","fieldName":"lblPrintedLabels","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":283,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e4d6926e-b619-4198-ad63-0edd68e5ee59","fieldName":"lblsAppliedProducts","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":284,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"88f5f791-a3e7-4014-eb2b-ed9ce1329740","fieldName":"lblRetnSample","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":285,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"2b983d3d-1047-4206-d66f-8a7c78742dcb","fieldName":"lblRepickIfu","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":286,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4a08e1af-e946-4024-86d6-b91cd35d7bd5","fieldName":"lblDestroyProducts","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":287,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"974fe229-e516-449a-9f70-cd10a3b77247","fieldName":"lblDestroyLabels","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":288,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"7b088c84-9ae6-4d0d-8f91-331128523d73","fieldName":"lblretnSample","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":289,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"bdb53091-3339-4541-9c05-7d38106bab12","fieldName":"lblFollowWI","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":290,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"44bc814b-9f7f-43ef-9718-1d895c56a803","fieldName":"lblWorkStation","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":291,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"001a0aad-c8bc-463e-d10a-2fc78ee53f1c","fieldName":"oLabelGTIN","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":292,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"6fb701d4-ae5e-4807-c37e-faf6fdfc192e","fieldName":"oLabelVariant","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":293,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"cde8206b-3d2e-41d1-f033-d3d1c7d8976d","fieldName":"oLabelSKU","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":294,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"68356016-a362-4854-b667-ad48d7772169","fieldName":"oLabelProdDesc","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":295,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"211ff7dd-ad31-447e-8b03-252c351a24ee","fieldName":"oLabelcomponentType","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":296,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"c7476163-9cf0-446a-db8a-9ef34e70bf1f","fieldName":"oLabelComponentID","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":297,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e20de9f0-73db-4dd4-b4a2-bf4d06766391","fieldName":"oLblLabelretention","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":298,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"091b1312-2d10-44e4-a582-4a6d8f5d5aa3","fieldName":"oLabelReconcilition","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":299,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ff3a4626-eb0a-474d-f880-fd811231d66e","fieldName":"oLabelIFUReconcilition","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":300,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"a8d574ea-58bb-47e0-e35a-407cd55d9cdc","fieldName":"oLabelComponentType","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":301,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"bb385306-2fb1-4a0c-a67e-732508955510","fieldName":"oLabelPickIFU","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":302,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"362e40b6-050f-4b37-af84-e604e129e2fe","fieldName":"lblReason","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":303,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"a4371f54-3f7f-462c-b608-fbb729b8f06d","fieldName":"lblTotalNyc","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":304,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d628fcf6-d18b-492b-9851-6a3b992b1bdf","fieldName":"lblDestroyIfu","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":305,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4bf19693-71f8-4ead-b9d5-7728235c52ef","fieldName":"lblNonConfirmity","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":306,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"5a6c3fd0-2624-47fc-a104-fbea7a5d97eb","fieldName":"lblQtty","fieldParent":"8bbc792c-6dc1-429f-8391-487b2d2764d4","fieldPos":307,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"6377880f-da7c-4cd1-fdab-1e265c119b0b","fieldName":"oLabel","fieldParent":99999,"fieldPos":308,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]}],"ui5_chart":false,"ui5_m":true,"ui5_f":false,"ui5_table":true,"ui5_tnt":true,"ui5_uxap":false,"libHighchart":false,"libHighmap":false}}