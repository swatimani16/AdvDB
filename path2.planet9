{"app":{"id":"435b2e41-3555-4e5f-b5e0-273a484f9294","ver":"21.5.25.2144","status":"Active","application":"rsc_product_transformation_bom","title":"","createdOn":1601474321527,"createdBy":"YNidhija","package":"5fa13cfa-75db-4c11-a78b-81ae73ff406a","description":"RSC Product transformation BOM Web application","disabled":false,"ui5_theme":"sap_belize","cus_theme":"","ui5_version":"1.71","enableStylesheet":true,"manifest":"","enableObfuscate":true,"onlyRunLaunchpad":false,"appType":"","ui5_language":null,"enableMultiDevelopment":false,"publicAccess":false,"enableManifest":false,"css":".pendingCompText{\r\n    margin-left:8%!important;\r\n}\r\n\r\n.iconTab1 .sapMITBContent {\r\n    border-bottom: none !important;\r\n}\r\n\r\n.iconTab1 .sapMITH {\r\n    box-shadow: inset 0 -0.25rem 0 -0.125rem #f7f7f7 !important;\r\n    background-color: #f7f7f7 !important;\r\n    border-bottom: none !important;\r\n}\r\n\r\n.iconTab1 .sapMITBSelected .sapMITBFilterDefault {\r\n    background: #4285f4 !important;\r\n    color: #ffffff !important;\r\n    border: 1px solid #4285f4 !important;\r\n}\r\n\r\n.iconTab1 .sapMITBFilterIcon {\r\n    margin-left: 105% !important;\r\n    border: 1px solid #4285f4 !important;\r\n    background-color: #ecf3fe !important;\r\n}\r\n\r\n.iconTab1 .sapMITBFilter .sapMITBText {\r\n    color: #4285f4 !important;\r\n    font-weight: bold !important;\r\n    font-size: 14px !important;\r\n    width: 14rem !important;\r\n}\r\n\r\n.iconTab1 .sapMITBSelected>.sapMITBContentArrow {\r\n    border-bottom-color: #4285f4 !important;\r\n    color: #fff !important;\r\n}\r\n\r\n.iconTab1 .sapMITBFilterDefault {\r\n    color: #4285f4 !important;\r\n}","header":"<script src=\"/media/root/LST/jspdf.min.js\"></script>\n<script src=\"/media/root/LST/jspdf.plugin.autotable.js\"></script>\n<script src=\"/media/root/RSC/tableToExcel.js\"></script>\n<script src=\"https://eudev2.jnjux.com/media/root/common/Javascript/jquery.simplePagination.js\"></script>\n<link rel=\"stylesheet\" href=\"https://eudev2.jnjux.com/media/root/common/css/simplePagination.css\"/>\n\n\n\n","globalScript":"","objects":[{"fieldNo":"807283d9-cc0b-4145-c5e8-f90e4eae49c5","fieldName":"oApp","fieldParent":0,"fieldPos":1,"fieldType":"sap.m.App","script":"","request":[],"response":[],"attributes":[{"attribute":"busy","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"busyIndicatorDelay","grouping":"Properties","value":"0","script":"","translation":[]}]},{"fieldNo":"d238ec7e-bc49-448b-8a3e-6d9fb725e83e","fieldName":"oPage","fieldParent":"807283d9-cc0b-4145-c5e8-f90e4eae49c5","fieldPos":2,"fieldType":"sap.m.Page","script":"","request":[],"response":[],"attributes":[{"attribute":"showHeader","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"d9571df8-b678-4eb9-8420-dd01a51c75aa","fieldName":"oIconTabBarPTBOM","fieldParent":"d238ec7e-bc49-448b-8a3e-6d9fb725e83e","fieldPos":3,"fieldType":"sap.m.IconTabBar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"iconTab1","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"key = this.getSelectedKey();\n\nif (g_change_detact) {\n    if (key === \"GLOBAL\") {\n        this.setSelectedKey(\"SITE\");\n    } else if (key === \"SITE\") {\n        this.setSelectedKey(\"GLOBAL\");\n    }\n    g_button_detact = \"tab_change\";\n    if (g_activeLockRecord && Object.keys(g_activeLockRecord).length) {\n        window.localStorage.lockedEntry = \"\"\n        removeLock(g_activeLockRecord);\n    }\n    dialog_back.open();\n} else {\n    resetPTSite();\n\n    if (key === \"GLOBAL\") {\n        clearSiteFilter();\n        oVBoxProductNumber.setVisible(true);\n        oVBoxVariant.setVisible(true);\n        oVBoxShiptoCountry.setVisible(true);\n        oButtonPTBOMCreate.setVisible(true);\n        oButtonFooterSave.setVisible(true);\n        oButtonFooterSubmitApproval.setVisible(true);\n        oButtonFooterSaveSite.setVisible(false);\n        oButtonFooterSubmitApprovalSite.setVisible(false);\n    } else if (key === \"SITE\") {\n        clearFilter();\n        oVBoxSiteProductNumber.setVisible(true);\n        oVBoxSiteVariant.setVisible(true);\n        oVBoxSiteShiptoCountry.setVisible(true);\n        btnSiteChange.setVisible(true);\n        btnSiteView.setVisible(true);\n        // btnSiteDisplay.setVisible(true);\n        btnSiteReset.setVisible(true);\n        btnSiteExpand.setVisible(true);\n        btnSiteExtension.setVisible(true);\n        oButtonFooterSave.setVisible(false);\n        oButtonFooterSubmitApproval.setVisible(false);\n        oButtonFooterSaveSite.setVisible(true);\n        oButtonFooterSubmitApprovalSite.setVisible(true);\n        // Call api with Objname for the PTSite AD Groups\n        var options = {\n            data: {\n                \"username\": g_username, // Required \n                \"objName\": \"PT_SITE\" // Required \n            }\n        };\n\n        apipostGetUserRoles(options);\n    }\n\n    if (g_activeLockRecord && Object.keys(g_activeLockRecord).length) {\n        window.localStorage.lockedEntry = \"\"\n        removeLock(g_activeLockRecord);\n    }\n\n    oBarFooter.setVisible(false);\n    oBarFooter.setVisible(false);\n}","translation":[]}]},{"fieldNo":"5840a6a2-048e-42da-8ef9-ed33079074d1","fieldName":"oIconTabFilterGlobal","fieldParent":"d9571df8-b678-4eb9-8420-dd01a51c75aa","fieldPos":4,"fieldType":"sap.m.IconTabFilter","script":"","request":[],"response":[],"attributes":[{"attribute":"key","grouping":"Properties","value":"GLOBAL","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://master-task-triangle","script":"","translation":[]}]},{"fieldNo":"22790abc-ac37-49f4-8885-db701c5c7f09","fieldName":"oPanel1","fieldParent":"5840a6a2-048e-42da-8ef9-ed33079074d1","fieldPos":5,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]}]},{"fieldNo":"5df9696e-6e10-4ad6-d471-f43a3750e9d6","fieldName":"FilterContailer","fieldParent":"22790abc-ac37-49f4-8885-db701c5c7f09","fieldPos":6,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"custom_grid","script":"","translation":[]}]},{"fieldNo":"8f0abaf5-92a7-4fbc-ea72-ac97cd689efb","fieldName":"oPanelFillter","fieldParent":"5df9696e-6e10-4ad6-d471-f43a3750e9d6","fieldPos":7,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]},{"attribute":"expanded","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"expandable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"92546ee9-0741-47be-d89d-e976d9d42418","fieldName":"oScrollContainer","fieldParent":"8f0abaf5-92a7-4fbc-ea72-ac97cd689efb","fieldPos":8,"fieldType":"sap.m.ScrollContainer","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filterScroll","script":"","translation":[]}]},{"fieldNo":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldName":"oGrid","fieldParent":"92546ee9-0741-47be-d89d-e976d9d42418","fieldPos":9,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]}]},{"fieldNo":"e3ecceb0-47f2-49eb-8055-36447a2a40c7","fieldName":"oVBoxPTType","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":10,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"6bc79f00-9cbc-4bab-fcfd-500815db8f62","fieldName":"oLabelPTType","fieldParent":"e3ecceb0-47f2-49eb-8055-36447a2a40c7","fieldPos":11,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"80838e0c-e865-4068-aa6d-08cd0890bb02","fieldName":"oComboBoxPTType","fieldParent":"e3ecceb0-47f2-49eb-8055-36447a2a40c7","fieldPos":12,"fieldType":"sap.m.ComboBox","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"170px","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"showWarning();\nif (this.getSelectedKey()) {\n    this.setValueState(\"None\")\n}\nvar split = oEvent.getSource().getSelectedItemId().split('-');\nvar position = parseInt(split[split.length - 1]);\ncmboVariant.setValue(oEvent.getSource().getModel().getData()[position].matlModeCd);\nif ((cmboVariant.getSelectedKey().length + 1) * 8 > 170) {\n    cmboVariant.setWidth(((cmboVariant.getSelectedKey().length + 1) * 8) + 'px');\n}\n","translation":[]}]},{"fieldNo":"e07fa6d5-ae81-4999-e3e0-f39823acb2d0","fieldName":"ptTypeItem","fieldParent":"80838e0c-e865-4068-aa6d-08cd0890bb02","fieldPos":13,"fieldType":"sap.ui.core.ListItem","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{matlNum}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{matlNum}","script":"","translation":[]}]},{"fieldNo":"754def90-c793-40e7-9239-d6836675fc69","fieldName":"oVBoxProductNumber","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":14,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"155px","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9bb02522-b3b5-4de5-93f0-26d10806577e","fieldName":"oLabelProductNumber","fieldParent":"754def90-c793-40e7-9239-d6836675fc69","fieldPos":15,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"d97f8c7d-2f2b-4838-b0ad-25f5a90e2051","fieldName":"oComboBoxProduct","fieldParent":"754def90-c793-40e7-9239-d6836675fc69","fieldPos":16,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"valueHelpRequest","grouping":"Events","value":"Anonymous Function","script":"// sap.ui.core.BusyIndicator.show(0);\n// getProducts();","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.show(0);\nthis.setValue(this.getValue().trim());\noEvent.getSource().setValue(oEvent.getSource().getValue().toUpperCase());\ngetMatDataGlobal(oEvent);\n// async function getMatData(oEvent) {\n//     sap.ui.core.BusyIndicator.show(0);\n//     if (oEvent.getSource().getValue() !== \"\") {\n//         oEvent.getSource().setValueState(\"None\");\n//         var options = {\n//             data: [oEvent.getSource().getValue()]\n//         };\n\n//         var material = await apigetMatNumberData(options);\n//         if (material.length > 0) {\n//             sap.ui.core.BusyIndicator.hide(0);\n//             cmboVariant.setValue(material[0].matlModeCd);\n//             oMessagePageEmpty.setVisible(false);\n//         } else {\n//             sap.ui.core.BusyIndicator.hide(0);\n//             getDialog(oLabelInvalidProductCode.getText());\n//             oComboBoxProduct.setValue();\n//             oMessagePageEmpty.setVisible(true);\n//         }\n//     } else if (oEvent.getSource().getValue() === \"\") {\n//         if (oIconTabBar.getSelectedKey() === g_display_tab) {\n//             sap.ui.core.BusyIndicator.hide(0);\n//             oEvent.getSource().setValueState(\"None\");\n//         } else {\n//             sap.ui.core.BusyIndicator.hide(0);\n//             oEvent.getSource().setValueState(\"Error\");\n//         }\n\n//     }\n// }","translation":[]}]},{"fieldNo":"2778f1fc-44f9-43f9-e72e-6ff6a5fdeb2c","fieldName":"oVBoxVariant","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":17,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"155px","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"27c42674-d225-466b-dd02-2737034a74ac","fieldName":"lblVariant","fieldParent":"2778f1fc-44f9-43f9-e72e-6ff6a5fdeb2c","fieldPos":18,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"57d78f32-0c08-4cfc-e39b-c33334804179","fieldName":"cmboVariant","fieldParent":"2778f1fc-44f9-43f9-e72e-6ff6a5fdeb2c","fieldPos":19,"fieldType":"sap.m.ComboBox","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new1","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":" this.setValue(this.getValue().trim());\n oEvent.getSource().setValue(oEvent.getSource().getValue().toUpperCase());","translation":[]}]},{"fieldNo":"4784561e-e6ef-4b28-e185-53cbb5c38662","fieldName":"oVBoxShiptoCountry","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":20,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"979a5e3b-22cd-4cef-a82f-55de2ab5e92a","fieldName":"oLabelDestination","fieldParent":"4784561e-e6ef-4b28-e185-53cbb5c38662","fieldPos":21,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"3255d12f-99b3-4b5c-a81e-824db076ade1","fieldName":"oComboBoxCountry","fieldParent":"4784561e-e6ef-4b28-e185-53cbb5c38662","fieldPos":22,"fieldType":"sap.m.ComboBox","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"170px","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"\nthis.setValue(this.getValue().trim());\n\nshowWarning();\nif (this.getSelectedKey()) {\n    this.setValueState(\"None\")\n}\n\nif (this.getSelectedKey() === \"\") {\n    this.setValue();\n}","translation":[]}]},{"fieldNo":"2056c21e-8fb3-4c73-ce13-e3dfea98a1d0","fieldName":"oVBox_Component","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":23,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"63387363-4e09-4112-f1d6-50fa2aac1f5a","fieldName":"lblCCNumber","fieldParent":"2056c21e-8fb3-4c73-ce13-e3dfea98a1d0","fieldPos":24,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"73995e1e-854a-48e7-ce89-5210c917ed61","fieldName":"oInputComponent","fieldParent":"2056c21e-8fb3-4c73-ce13-e3dfea98a1d0","fieldPos":25,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"this.setValue(this.getValue().trim());\n oEvent.getSource().setValue(oEvent.getSource().getValue().toUpperCase());","translation":[]}]},{"fieldNo":"974fcaab-aba5-4fd3-857a-7d74aa682e51","fieldName":"oVBox_Rev","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":26,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"d63d9e9b-9b7f-4cf1-8809-aeaf6cd8baba","fieldName":"lblRev","fieldParent":"974fcaab-aba5-4fd3-857a-7d74aa682e51","fieldPos":27,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"863eb7c6-13a4-4248-e7a6-398864a80745","fieldName":"oInputRev","fieldParent":"974fcaab-aba5-4fd3-857a-7d74aa682e51","fieldPos":28,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"this.setValue(this.getValue().trim());\n oEvent.getSource().setValue(oEvent.getSource().getValue().toUpperCase());","translation":[]}]},{"fieldNo":"21a6a6a9-0cfa-49d2-f280-5eace5f2a4ce","fieldName":"oVBoxBOMStatus","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":29,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"88ea8767-0a7a-4adc-86d8-a6e8ab5c4a0e","fieldName":"lblBOMStatus","fieldParent":"21a6a6a9-0cfa-49d2-f280-5eace5f2a4ce","fieldPos":30,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"ba459117-79b5-4f5f-840a-3e65c94a9629","fieldName":"cmboBOMStatus","fieldParent":"21a6a6a9-0cfa-49d2-f280-5eace5f2a4ce","fieldPos":31,"fieldType":"sap.m.ComboBox","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"selectionChange","grouping":"Events","value":"Anonymous Function","script":"// if (this.getSelectedKey() === \"Selzach, Switzerland\") {\n//     var globalStatus = xhr.responseJSON.filter(f => {\n//         return f.locationName === \"Selzach, Switzerland\"\n//     })\n//     modelcmboPTSiteStatus.setData(globalStatus);\n// } else if (this.getSelectedKey() === \"Courcelles, Belgium\") {\n//     var globalStatus = xhr.responseJSON.filter(f => {\n//         return f.locationName === \"Courcelles, Belgium\"\n//     })\n//     modelcmboPTSiteStatus.setData(globalStatus);\n// } else if (this.getSelectedKey() === \"Global\") {\n//     var globalStatus = xhr.responseJSON.filter(f => {\n//         return f.locationName === \"Global\"\n//     })\n//     modelcmboPTSiteStatus.setData(globalStatus);\n// }","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"this.setValue(this.getValue().trim());\n oEvent.getSource().setValue(oEvent.getSource().getValue().toUpperCase());","translation":[]}]},{"fieldNo":"4634b090-7596-46e3-de1f-e7bb618a8fc3","fieldName":"statusItem","fieldParent":"ba459117-79b5-4f5f-840a-3e65c94a9629","fieldPos":32,"fieldType":"sap.ui.core.Item","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{status}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{status}","script":"","translation":[]}]},{"fieldNo":"33a709c6-02c8-44a1-f67d-1f5307930ecb","fieldName":"statusItem1","fieldParent":"ba459117-79b5-4f5f-840a-3e65c94a9629","fieldPos":33,"fieldType":"sap.ui.core.Item","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{Status}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{Status}","script":"","translation":[]}]},{"fieldNo":"25a2404b-45d5-4f34-fbf7-7570fbfe6a7b","fieldName":"oVBox_GTIN","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":34,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"2fb86164-9bc9-4a90-b2f7-9eef4bdab2b5","fieldName":"lblGtin","fieldParent":"25a2404b-45d5-4f34-fbf7-7570fbfe6a7b","fieldPos":35,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"54e86d4d-f80a-4d62-ff47-20357311d8b1","fieldName":"oInputGTIN","fieldParent":"25a2404b-45d5-4f34-fbf7-7570fbfe6a7b","fieldPos":36,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]}]},{"fieldNo":"f21be8f3-a704-4754-8f6a-234829919941","fieldName":"oVBox_PT_Site","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":37,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"a21b7e6b-3f79-48ec-8ed8-1b04399a6f15","fieldName":"oLabelPTSite","fieldParent":"f21be8f3-a704-4754-8f6a-234829919941","fieldPos":38,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"9161551c-bc87-4a4c-8f05-6d5fd1e92034","fieldName":"oComboBoxPTSite","fieldParent":"f21be8f3-a704-4754-8f6a-234829919941","fieldPos":39,"fieldType":"sap.m.ComboBox","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]}]},{"fieldNo":"b89c9ae6-b8fb-409c-a44d-97b505170566","fieldName":"rsc_PTSite2_1","fieldParent":"9161551c-bc87-4a4c-8f05-6d5fd1e92034","fieldPos":40,"fieldType":"sap.ui.core.Item","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{location}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{location}","script":"","translation":[]}]},{"fieldNo":"a15224ad-ce1d-44cb-ced8-be83be32ce7e","fieldName":"oVBoxBU","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":41,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"674ffb1b-cd97-4bfe-b835-1241a81ff9ca","fieldName":"lblBU","fieldParent":"a15224ad-ce1d-44cb-ced8-be83be32ce7e","fieldPos":42,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiLargeMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"e8505399-cd3e-41e1-bfa6-8d39b29e10cd","fieldName":"oInputBU","fieldParent":"a15224ad-ce1d-44cb-ced8-be83be32ce7e","fieldPos":43,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]}]},{"fieldNo":"8acd4ec5-0d26-436c-8d50-ae8737c4c169","fieldName":"oVBoxFranchise","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":44,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"7aada9f5-309f-4f17-c926-a39ff2c222c6","fieldName":"lblFranchise","fieldParent":"8acd4ec5-0d26-436c-8d50-ae8737c4c169","fieldPos":45,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"0badbb55-efac-4dea-a997-fcb57eea1cae","fieldName":"oInputFranchise","fieldParent":"8acd4ec5-0d26-436c-8d50-ae8737c4c169","fieldPos":46,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]}]},{"fieldNo":"3f82147b-632d-40ba-cde5-dde9791d988a","fieldName":"oVBoxBOMComponent","fieldParent":"78ae83cd-d4fe-4a6c-feee-b55c7cc48460","fieldPos":47,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"bf7bc2fd-1043-496d-9e45-7296dd416cb0","fieldName":"lblBOMComponent","fieldParent":"3f82147b-632d-40ba-cde5-dde9791d988a","fieldPos":48,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"f136bf55-acdd-492c-a6ee-bfe2ccf2900b","fieldName":"chkBOMComponent","fieldParent":"3f82147b-632d-40ba-cde5-dde9791d988a","fieldPos":49,"fieldType":"sap.m.CheckBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"chkBoxStyle","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"//hide the pdf export button when display components is selected\nif(this.getSelected() === true){\noIconpdf.setVisible(false);\n}else{\n oIconpdf.setVisible(true);\n   \n}","translation":[]}]},{"fieldNo":"54a2e761-a3e3-480a-ed15-13d0283397c4","fieldName":"oBarExpanFilterBTBOM","fieldParent":"5df9696e-6e10-4ad6-d471-f43a3750e9d6","fieldPos":50,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Header","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"addContent","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f6a8318f-4923-40a0-a2d0-05d8551a7495","fieldName":"Leftversion","fieldParent":"54a2e761-a3e3-480a-ed15-13d0283397c4","fieldPos":51,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"d3d424e8-4e19-4d9e-a918-91b05ce8c828","fieldName":"header_version_label","fieldParent":"f6a8318f-4923-40a0-a2d0-05d8551a7495","fieldPos":52,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"myCustomText","script":"","translation":[]}]},{"fieldNo":"74594fbb-6d06-4a3b-9d38-851a024fd335","fieldName":"RightPTBOMButtons","fieldParent":"54a2e761-a3e3-480a-ed15-13d0283397c4","fieldPos":53,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"99966fca-4d9a-41d0-f779-b9e00773fd56","fieldName":"oButtonPTBOMCreate","fieldParent":"74594fbb-6d06-4a3b-9d38-851a024fd335","fieldPos":54,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"greenbtn ","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oIconTabBar.setSelectedKey(\"create\");\n\nvar pbObj = {\n    productNum : oComboBoxProduct.getValue(),\n    variant : cmboVariant.getValue(),\n    shipToCountry: oComboBoxCountry.getValue()\n    }\ncheckLock(pbObj,\"\");\n// oButtonFooterSave.setVisible(true);\n// oButtonFooterSubmitApproval.setVisible(true);\n// ptbomGlobalCreate()//createBtnPress();","translation":[]}]},{"fieldNo":"45ea1c2d-e477-4fa6-9f47-e7ee43a9bc80","fieldName":"oButtonPTBOMChange","fieldParent":"74594fbb-6d06-4a3b-9d38-851a024fd335","fieldPos":55,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"orangebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oButtonFooterSave.setVisible(false);\noButtonFooterSubmitApproval.setVisible(false);\nheader_version_label.setVisible(false);\noPanelCommon.setExpanded(false);\n\noIconTabBar.setSelectedKey(\"change\");\noButtonPTBOMCreate.setEnabled(false);\noButtonPTBOMView.setEnabled(false);\noButtonPTBOMDisplay.setEnabled(false);\noIconpdf.setVisible(false);\noIconexcel.setVisible(false);\noBarFooter.setVisible(false);\ninitChangeData();","translation":[]}]},{"fieldNo":"af8f43f4-0bb9-4f78-e63f-e1c1230efa9f","fieldName":"oButtonPTBOMView","fieldParent":"74594fbb-6d06-4a3b-9d38-851a024fd335","fieldPos":56,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oButtonFooterSave.setVisible(false);\noButtonFooterSubmitApproval.setVisible(false);\noPanelCommon.setExpanded(false);\nheader_version_label.setVisible(false);\n\noButtonPTBOMDisplay.setVisible(true);\noButtonPTBOMView.setVisible(false);\noButtonPTBOMCreate.setEnabled(false);\noButtonPTBOMChange.setEnabled(false);\noButtonPTBOMDisplay.setEnabled(true);\n// setting visible GTIN, BOM Status, PT Site, PT Site BOM Status, BU, Franchise \noLabelDestination.setRequired(false);\noLabelDestination.setRequired(false);\noVBoxBOMStatus.setVisible(true);\noLabelProductNumber.setRequired(false);\n\noVBoxVariant.setVisible(false);\noVBoxBOMComponent.setVisible(true);\noVBox_Component.setVisible(true);\noVBox_Rev.setVisible(true);\noBarFooter.setVisible(false);","translation":[]}]},{"fieldNo":"a88e01c4-d251-44b1-99f9-7c7862c0868a","fieldName":"oButtonPTBOMDisplay","fieldParent":"74594fbb-6d06-4a3b-9d38-851a024fd335","fieldPos":57,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oButtonFooterSave.setVisible(false);\n    oButtonFooterSubmitApproval.setVisible(false);\n oBarFooter.setVisible(false);\noPanelCommon.setExpanded(false);\nheader_version_label.setVisible(false);\noIconTabBar.setSelectedKey(\"display\");\noButtonPTBOMView.setEnabled(false);\noButtonPTBOMCreate.setEnabled(false);\noButtonPTBOMChange.setEnabled(false);\n//hide the pdf export button on diaplay initially\nif (chkBOMComponent.getSelected() === true) {\n    oIconpdf.setVisible(false);\n} else {\n    oIconpdf.setVisible(true);\n}\noIconexcel.setVisible(true);\nsap.ui.core.BusyIndicator.show(0);\nvar flag = validateEmptyFieldForDisplay(false);\nif (!flag) {\n    sap.ui.core.BusyIndicator.hide();\n    getDialog(\"Enter at least one field to search.\");\n} else {\n    var options = {\n        data: {\n            \"matlNum\": oComboBoxProduct.getValue(),\n            \"shiptoCountry\": oComboBoxCountry.getSelectedKey(),\n            \"ptBomStatus\": cmboBOMStatus.getSelectedKey(),\n            \"BOMComponent\": chkBOMComponent.getSelected(),\n            \"component\": oInputComponent.getValue(),\n            \"revision\": oInputRev.getValue(),\n            \"view\": oIconTabBar.getSelectedKey()\n        }\n    };\n    apipost_getDisplayData(options);\n}","translation":[]}]},{"fieldNo":"1335152c-4896-4caa-c930-3766fab1ab4f","fieldName":"oButtonPTBOMReset","fieldParent":"74594fbb-6d06-4a3b-9d38-851a024fd335","fieldPos":58,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oButtonFooterSave.setVisible(false);\noButtonFooterSubmitApproval.setVisible(false);\noButtonFooterSaveSite.setVisible(false);\noButtonFooterSubmitApprovalSite.setVisible(false);\n// Blocks the entire screen\nsap.ui.core.BusyIndicator.show(0);\nif (oIconTabBar.getSelectedKey() === g_display_tab || oIconTabBar.getSelectedKey() === g_change_tab) {\n    if (g_change_detact) {\n        g_button_detact = \"reset\";\n        dialog_back.open();\n        sap.ui.core.BusyIndicator.hide();\n    } else {\n        clearFilter();\n        dialog_back.close()\n    }\n\n} else {\n    clearFilter();\n}\n\noPanelPTBomItems.setVisible(true);\noPanelPTHeader.setVisible(true);\noBar.setVisible(true);\noBarFooter.setVisible(false);\nwindow.localStorage.lockedEntry = \"\"\nremoveLock(g_activeLockRecord);","translation":[]}]},{"fieldNo":"26335582-2dcb-4445-f827-fa5f64bb31b8","fieldName":"oButtonFilterExpand","fieldParent":"74594fbb-6d06-4a3b-9d38-851a024fd335","fieldPos":59,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"expand_button","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/angle-up","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"!oPanelFillter.getExpanded() ? oButtonFilterExpand.setIcon(\"sap-icon://fa-solid/angle-up\") :\n    oButtonFilterExpand.setIcon(\"sap-icon://fa-solid/angle-down\");\n    !oPanelFillter.getExpanded() ? oButtonFilterExpand.setText(\"Minimize\") :\n    oButtonFilterExpand.setText(\"Maximize\");\noPanelFillter.setExpanded(!oPanelFillter.getExpanded());","translation":[]}]},{"fieldNo":"697adcf4-f964-4752-8461-0a544f0741e3","fieldName":"oIconpdf","fieldParent":"74594fbb-6d06-4a3b-9d38-851a024fd335","fieldPos":60,"fieldType":"sap.ui.core.Icon","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"icons pdf","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-regular/file-pdf","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"if (oIconTabBar.getSelectedKey() === g_display_tab) {\n    if (!oPanelCommon.getExpanded()) {\n        genaratePDFDataDisplay(oTableDisplayPTBOM);\n    }else{\n        genaratePDFData(oTableHeader,oTableComponent);\n    }\n} else {\n    genaratePDFData(oTableHeader,oTableComponent);\n}","translation":[]}]},{"fieldNo":"597b1d21-588e-4419-e307-5f9fba7d733c","fieldName":"oIconexcel","fieldParent":"74594fbb-6d06-4a3b-9d38-851a024fd335","fieldPos":61,"fieldType":"sap.ui.core.Icon","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"icons excel","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-regular/file-excel","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"if (oIconTabBar.getSelectedKey() === g_display_tab) {\n    if (!oPanelCommon.getExpanded()) {\n        \n        downloadExcelDisplay(oTableDisplayPTBOM)\n    }else{\n        genarateExcelData(oTableHeader,oTableComponent);\n    }\n} else {\n    genarateExcelData(oTableHeader,oTableComponent);\n}","translation":[]}]},{"fieldNo":"adddcd5f-e925-45ba-ac01-dc4fd0e9fcdf","fieldName":"BodyContainer","fieldParent":"22790abc-ac37-49f4-8885-db701c5c7f09","fieldPos":62,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"BodyContainer","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"5fa2e607-a0b9-4e2f-fd79-315735651376","fieldName":"oIconTabBar","fieldParent":"adddcd5f-e925-45ba-ac01-dc4fd0e9fcdf","fieldPos":63,"fieldType":"sap.m.IconTabBar","bindingType":"u","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"icon_tab_bar","script":"","translation":[]}]},{"fieldNo":"5be9cd4e-d0ee-44eb-e617-91610701ce9a","fieldName":"display_section","fieldParent":"5fa2e607-a0b9-4e2f-fd79-315735651376","fieldPos":64,"fieldType":"sap.m.IconTabFilter","script":"","request":[],"response":[],"attributes":[{"attribute":"key","grouping":"Properties","value":"display","script":"","translation":[]}]},{"fieldNo":"a848a2b3-c952-45c9-9e84-c64063dc4d11","fieldName":"oTableDisplayPTBOM","fieldParent":"5be9cd4e-d0ee-44eb-e617-91610701ce9a","fieldPos":65,"fieldType":"sap.ui.table.Table","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"visibleRowCountMode","grouping":"Properties","value":"Interactive","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"minAutoRowCount","grouping":"Properties","value":"8","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"enableSelectAll","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"e34ea9fa-a718-42f3-eef1-3fde9e97381d","fieldName":"oBarContentPaggination","fieldParent":"5be9cd4e-d0ee-44eb-e617-91610701ce9a","fieldPos":66,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"addContent","script":"","translation":[]}]},{"fieldNo":"9388965c-2eac-429a-f207-f558578a20f3","fieldName":"Right","fieldParent":"e34ea9fa-a718-42f3-eef1-3fde9e97381d","fieldPos":67,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"c12960f6-a457-4b22-f4d3-83bb6c747ca9","fieldName":"totalDataCount","fieldParent":"9388965c-2eac-429a-f207-f558578a20f3","fieldPos":68,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"5e3b5825-a2fe-497e-c32d-e3639507e8dc","fieldName":"Middle","fieldParent":"e34ea9fa-a718-42f3-eef1-3fde9e97381d","fieldPos":69,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"8cbe2949-aa3a-42ed-e7bd-370a9b614dd8","fieldName":"oHTMLObject","fieldParent":"5e3b5825-a2fe-497e-c32d-e3639507e8dc","fieldPos":70,"fieldType":"sap.ui.core.HTML","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"9ad50dd3-0d8d-40ff-dff4-bcecd66b4459","fieldName":"oHTML","fieldParent":"8cbe2949-aa3a-42ed-e7bd-370a9b614dd8","fieldPos":71,"fieldType":"neptune.Html","script":"<div id='paginationDisplayGlobal'> </div>","request":[],"response":[],"attributes":[]},{"fieldNo":"da771fc4-f8f8-4636-c9a2-f7761cc41371","fieldName":"Left","fieldParent":"e34ea9fa-a718-42f3-eef1-3fde9e97381d","fieldPos":72,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"086998d9-c3ef-4a59-b3c6-fe6c5918de06","fieldName":"selectedRowCount","fieldParent":"da771fc4-f8f8-4636-c9a2-f7761cc41371","fieldPos":73,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"f2707435-7d90-4b8a-cad6-371ed6468dee","fieldName":"change_section","fieldParent":"5fa2e607-a0b9-4e2f-fd79-315735651376","fieldPos":74,"fieldType":"sap.m.IconTabFilter","script":"","request":[],"response":[],"attributes":[{"attribute":"key","grouping":"Properties","value":"change","script":"","translation":[]}]},{"fieldNo":"ddf25d6b-52d8-45e0-9dfb-4b0906b8d533","fieldName":"oTableChangePTBOM","fieldParent":"f2707435-7d90-4b8a-cad6-371ed6468dee","fieldPos":75,"fieldType":"sap.ui.table.Table","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"minAutoRowCount","grouping":"Properties","value":"10","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"enableSelectAll","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableCellFilter","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"5407a151-0b83-4fe6-e1a7-f12278c92885","fieldName":"create_section","fieldParent":"5fa2e607-a0b9-4e2f-fd79-315735651376","fieldPos":76,"fieldType":"sap.m.IconTabFilter","script":"","request":[],"response":[],"attributes":[{"attribute":"key","grouping":"Properties","value":"create","script":"","translation":[]}]},{"fieldNo":"401bf425-853e-4ab9-88ea-13a4ef977057","fieldName":"oPanelCommon","fieldParent":"adddcd5f-e925-45ba-ac01-dc4fd0e9fcdf","fieldPos":77,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]},{"attribute":"expandable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"eac63683-0546-49b8-a290-c3a8d9e33d82","fieldName":"oVBoxVersionDataContainer","fieldParent":"401bf425-853e-4ab9-88ea-13a4ef977057","fieldPos":78,"fieldType":"sap.m.VBox","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c5d8e8d9-6aca-42a5-97ba-38cc79131d81","fieldName":"oBar","fieldParent":"eac63683-0546-49b8-a290-c3a8d9e33d82","fieldPos":79,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Header","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"addContent","script":"","translation":[]}]},{"fieldNo":"7f707d2e-6761-4dc2-e3db-81ce6bff6332","fieldName":"Right","fieldParent":"c5d8e8d9-6aca-42a5-97ba-38cc79131d81","fieldPos":80,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"e3682426-8fe8-4037-c922-8122077aac21","fieldName":"oButtonPTBomExpand","fieldParent":"7f707d2e-6761-4dc2-e3db-81ce6bff6332","fieldPos":81,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"expand_button","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/angle-up","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"!oPanelPTHeader.getExpanded() ? oButtonPTBomExpand.setIcon(\"sap-icon://fa-solid/angle-up\") :\n    oButtonPTBomExpand.setIcon(\"sap-icon://fa-solid/angle-down\");\n    !oPanelPTHeader.getExpanded() ? oButtonPTBomExpand.setText(\"Minimize\") :\n    oButtonPTBomExpand.setText(\"Maximize\");\noPanelPTHeader.setExpanded(!oPanelPTHeader.getExpanded());","translation":[]}]},{"fieldNo":"7ff615d1-e94e-4367-c765-1239e6954d98","fieldName":"Left","fieldParent":"c5d8e8d9-6aca-42a5-97ba-38cc79131d81","fieldPos":82,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"b97e9b52-453b-42cc-a293-23256486d5d9","fieldName":"ptBoMHeaderL","fieldParent":"7ff615d1-e94e-4367-c765-1239e6954d98","fieldPos":83,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"custom_title","script":"","translation":[]}]},{"fieldNo":"c6c6309f-a3eb-4209-fb93-c9068da68e3c","fieldName":"oPanelPTHeader","fieldParent":"eac63683-0546-49b8-a290-c3a8d9e33d82","fieldPos":84,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]},{"attribute":"expanded","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"expandable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldName":"oTableHeader","fieldParent":"c6c6309f-a3eb-4209-fb93-c9068da68e3c","fieldPos":85,"fieldType":"sap.ui.table.Table","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"1","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"85374b3f-722e-4582-f12b-3eef389c5946","fieldName":"oColumnversion","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":86,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"verPTBom","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"a960fafa-2b1d-4c15-ce6f-98f97cd7f506","fieldName":"oLabelVersionHeader","fieldParent":"85374b3f-722e-4582-f12b-3eef389c5946","fieldPos":87,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{verPTBom}","script":"","translation":[]}]},{"fieldNo":"f20c89c7-7ea9-453e-aa48-92019dbdef43","fieldName":"oColumnProductCode","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":88,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"matlNum","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"8227767b-ea6f-4387-9e9e-c3656f13153b","fieldName":"oLabelproductCodeHeader","fieldParent":"f20c89c7-7ea9-453e-aa48-92019dbdef43","fieldPos":89,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{matlNum}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9abfec02-6448-4e10-c0bb-de590b8a8d39","fieldName":"oColumnVariant","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":90,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"variant","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e0c1fe3f-6955-4001-a77b-95991b40db15","fieldName":"oInputVariantHeader","fieldParent":"9abfec02-6448-4e10-c0bb-de590b8a8d39","fieldPos":91,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{variant}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"50c85392-35fe-4e86-a776-777296c580d8","fieldName":"oColumnShiptoCountry","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":92,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"shiptoCountry","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"7d2faf1c-52f3-4a4e-924a-d75dcf74720c","fieldName":"oLabelShipToCountryHeader","fieldParent":"50c85392-35fe-4e86-a776-777296c580d8","fieldPos":93,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{shiptoCountry}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"89e59f28-2893-41c8-c63b-a13835bf0088","fieldName":"oColumnBOMStatus","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":94,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"ptBomStatus","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"4d03d2b7-2f82-4527-b79b-c3b535965524","fieldName":"oLabelBOMStatusHeader","fieldParent":"89e59f28-2893-41c8-c63b-a13835bf0088","fieldPos":95,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{ptBomStatus}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"ebb7230c-6087-4773-fb80-c774f80d8b6f","fieldName":"oColumnBOMqty","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":96,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"bomQty","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"7c509b82-ee84-402e-888c-3bcf8c8626c0","fieldName":"oInputBOMqty","fieldParent":"ebb7230c-6087-4773-fb80-c774f80d8b6f","fieldPos":97,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{bomQty}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{headerBOMqty}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"var updatedVal = this.getValue();\n this.setValue(updatedVal.replace(/[^0-9]+/g, ''));","translation":[]}]},{"fieldNo":"c73d8f34-47d3-4136-ba9a-651ebbe5ddf0","fieldName":"oColumnUOM","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":98,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"uom","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"63e951de-a246-40a1-95d5-348b0b7577a2","fieldName":"lblUOM","fieldParent":"c73d8f34-47d3-4136-ba9a-651ebbe5ddf0","fieldPos":99,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{uom}","script":"","translation":[]}]},{"fieldNo":"41305fef-5230-45a9-b0ea-3d4249db1037","fieldName":"oColumnptSIte","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":100,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"rscSite","script":"","translation":[]}]},{"fieldNo":"3792d28e-1eab-4039-8575-cb8a644056fe","fieldName":"oComboBoxptSITE","fieldParent":"41305fef-5230-45a9-b0ea-3d4249db1037","fieldPos":101,"fieldType":"sap.m.ComboBox","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{rscSite}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"45ffc637-e5b0-4d43-c9e6-fe5ce2daa21f","fieldName":"rsc_PTSiteHeader","fieldParent":"3792d28e-1eab-4039-8575-cb8a644056fe","fieldPos":102,"fieldType":"sap.ui.core.Item","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{location}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{location}","script":"","translation":[]}]},{"fieldNo":"4cad97fd-b6e2-4f9c-98c8-3fe98145f082","fieldName":"oColumnplmSource","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":103,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"plmSource","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9d3e48c6-289b-4999-e330-2bb3f6c9c9be","fieldName":"oComboBoxplmSource","fieldParent":"4cad97fd-b6e2-4f9c-98c8-3fe98145f082","fieldPos":104,"fieldType":"sap.m.ComboBox","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"selectedKey","grouping":"Properties","value":"{plmSource}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{=${ptBomStatus}=== 'CREATED'? true: false}","script":"","translation":[]}]},{"fieldNo":"6c3e3d05-1177-4a3f-d8d3-4b01f13d70a6","fieldName":"oListItemPLMSource","fieldParent":"9d3e48c6-289b-4999-e330-2bb3f6c9c9be","fieldPos":105,"fieldType":"sap.ui.core.ListItem","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{description}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{ccnSourceType}","script":"","translation":[]}]},{"fieldNo":"3dcfcdae-07ee-4e52-d1ae-e8a6f27610e0","fieldName":"oColumnplmChangeControlNum","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":106,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"5b78ea6e-fb36-44a0-aa82-b11ad49c3f3f","fieldName":"oInputplmChangeCntrl","fieldParent":"3dcfcdae-07ee-4e52-d1ae-e8a6f27610e0","fieldPos":107,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"30","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{=${ptBomStatus}=== 'CREATED'? true: false}","script":"","translation":[]}]},{"fieldNo":"fa873bb1-79a0-4372-c968-1088641d47a5","fieldName":"oColumnonHold","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":108,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"80px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"ptBomOnHold","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"2790be9f-3fa7-46fe-d501-969cfda312f7","fieldName":"oCheckBoxonHold","fieldParent":"fa873bb1-79a0-4372-c968-1088641d47a5","fieldPos":109,"fieldType":"sap.m.CheckBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"checkBox","script":"","translation":[]},{"attribute":"selected","grouping":"Properties","value":"{ptBomOnHold}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{holdFlag}","script":"","translation":[]}]},{"fieldNo":"01c6d4aa-8dcc-41ca-f041-281363b57c28","fieldName":"oColumnBU","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":110,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"businessUnit","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c89a675e-a76c-492b-c17e-0df0aee3a944","fieldName":"oInputBusinessU","fieldParent":"01c6d4aa-8dcc-41ca-f041-281363b57c28","fieldPos":111,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{businessUnit}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"41288c45-5b55-46c0-becd-9bea75266147","fieldName":"oColumnfranchise","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":112,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"250px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"franchise","script":"","translation":[]}]},{"fieldNo":"e97de2fa-fa4e-440f-c9da-751ecf7fdd52","fieldName":"oInputfranchise","fieldParent":"41288c45-5b55-46c0-becd-9bea75266147","fieldPos":113,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{franchise}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"afadcdb2-8fde-4554-b4f2-aa0ee729d5eb","fieldName":"oColumnDescription","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":114,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"matDescription","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e95db781-ce09-40d9-b8ae-365b374987b8","fieldName":"oLabelDescr","fieldParent":"afadcdb2-8fde-4554-b4f2-aa0ee729d5eb","fieldPos":115,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{matDescription}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9b7cb6eb-5380-456d-d9a0-c0380bb2d682","fieldName":"oColumnRSCChangeOrderNum","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":116,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"rscChangeOrderNum","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"641cd61f-4708-4ff4-bb37-8d3816606e2f","fieldName":"oInputRSCChangeOrderNum","fieldParent":"9b7cb6eb-5380-456d-d9a0-c0380bb2d682","fieldPos":117,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{rscChangeOrderNum}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"7e971973-646e-4a3b-ec79-0f06ca0145d3","fieldName":"oColumnGtin","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":118,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"gtin","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"d4aae790-2835-4074-f248-d96ebf4764cf","fieldName":"oLabelGTINHeader","fieldParent":"7e971973-646e-4a3b-ec79-0f06ca0145d3","fieldPos":119,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{gtin}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f5742fc2-47f0-461c-f145-7493fe52b31c","fieldName":"oColumnBOMid","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":120,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"bomID","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"791370be-87de-4b90-811a-18097374b9c9","fieldName":"oInputBOMid","fieldParent":"f5742fc2-47f0-461c-f145-7493fe52b31c","fieldPos":121,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{bomID}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"02c9d6bb-1c36-4a62-fd7b-3621116c05e0","fieldName":"oColumnCreatedOn","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":122,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"createdAt","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"2f8e268a-fac0-449d-f3c1-37d22969bd43","fieldName":"oDatePickerCReatedONHeader","fieldParent":"02c9d6bb-1c36-4a62-fd7b-3621116c05e0","fieldPos":123,"fieldType":"sap.m.DatePicker","script":"","request":[],"response":[],"attributes":[{"attribute":"valueFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{createdAt}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]}]},{"fieldNo":"4794cc17-84db-49e4-9918-7bda20eb47e3","fieldName":"oColumnCreatedBy","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":124,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"createdBy","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e2ab87b9-9dc0-4a37-e091-36eadf98f197","fieldName":"oLabelCreatedBYHeader","fieldParent":"4794cc17-84db-49e4-9918-7bda20eb47e3","fieldPos":125,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{createdBy}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"731dfe25-bcb8-4bf7-9caa-b45f03989dd6","fieldName":"oColumnChangedBy","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":126,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"updatedBy","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3fb1c197-c2bb-4232-f1b6-b59410e73e6f","fieldName":"oLabelchangedBYHeader","fieldParent":"731dfe25-bcb8-4bf7-9caa-b45f03989dd6","fieldPos":127,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{updatedBy}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e92df93a-cd35-4359-fced-4127a64ca97d","fieldName":"oColumnChangedOn","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":128,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"updatedAt","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"b9418e58-e964-4048-8439-ea05cdb15e66","fieldName":"oDatePickerchangedOnHeader","fieldParent":"e92df93a-cd35-4359-fced-4127a64ca97d","fieldPos":129,"fieldType":"sap.m.DatePicker","script":"","request":[],"response":[],"attributes":[{"attribute":"valueFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{updatedAt}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]}]},{"fieldNo":"00979955-a7bb-45de-f949-ccbdfd9d70ce","fieldName":"oColumnapprovedBy","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":130,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"approvedBy","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"482090b4-cc4e-4d0d-b7d9-761f200db075","fieldName":"oLabelapprovedBYheader","fieldParent":"00979955-a7bb-45de-f949-ccbdfd9d70ce","fieldPos":131,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{approvedBy}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"68c299c2-e18a-40d4-a6a0-0e0531fe504d","fieldName":"oColumnapprovedOn","fieldParent":"babe37fb-6ae6-476e-df57-b6fe970fdf65","fieldPos":132,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"approvedOn","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3c7a3bcd-866e-4b2f-e786-e26053faa8f4","fieldName":"oDatePickerapprovedOnHeader","fieldParent":"68c299c2-e18a-40d4-a6a0-0e0531fe504d","fieldPos":133,"fieldType":"sap.m.DatePicker","script":"","request":[],"response":[],"attributes":[{"attribute":"valueFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{approvedOn}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]}]},{"fieldNo":"1d5b1a59-9ac4-4eba-bdc1-ec075dd24cf3","fieldName":"oPanelPTBomItems","fieldParent":"eac63683-0546-49b8-a290-c3a8d9e33d82","fieldPos":134,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]}]},{"fieldNo":"fd068fe3-4a08-4cf3-daea-a46cb8efe4aa","fieldName":"Component_content","fieldParent":"1d5b1a59-9ac4-4eba-bdc1-ec075dd24cf3","fieldPos":135,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Footer","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"a09faa02-0194-4ab8-9ffa-c49d4f282d21","fieldName":"Left","fieldParent":"fd068fe3-4a08-4cf3-daea-a46cb8efe4aa","fieldPos":136,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"8ebbfa80-f86e-41ed-db13-45f121f212d9","fieldName":"oLabel42","fieldParent":"a09faa02-0194-4ab8-9ffa-c49d4f282d21","fieldPos":137,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"custom_title","script":"","translation":[]}]},{"fieldNo":"aee2d452-ccad-41b8-d56b-a0a97200c6c7","fieldName":"Right","fieldParent":"fd068fe3-4a08-4cf3-daea-a46cb8efe4aa","fieldPos":138,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"ae33089f-c118-478f-c4b1-ce885fe57822","fieldName":"btnRefreshComp","fieldParent":"aee2d452-ccad-41b8-d56b-a0a97200c6c7","fieldPos":139,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"// Blocks the entire screen\nsap.ui.core.BusyIndicator.show();\n//disbale the submit for approval buton to force the user to save the Refreshed components first\noButtonFooterSubmitApproval.setEnabled(false)\nrefreshComp();\n\n","translation":[]}]},{"fieldNo":"aff58feb-27a0-41b5-ee59-8d795bf995c1","fieldName":"oVBox42","fieldParent":"1d5b1a59-9ac4-4eba-bdc1-ec075dd24cf3","fieldPos":140,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8984ae61-3399-41e3-d0a9-457f78c0b2e8","fieldName":"oTableComponent","fieldParent":"aff58feb-27a0-41b5-ee59-8d795bf995c1","fieldPos":141,"fieldType":"sap.ui.table.Table","script":"","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"8","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"7","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"4635c9d6-e0a0-480a-e6b6-1aa648687bf1","fieldName":"oBarContentAddSite","fieldParent":"1d5b1a59-9ac4-4eba-bdc1-ec075dd24cf3","fieldPos":142,"fieldType":"sap.m.Bar","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Footer","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"e2093989-d964-4ba9-9917-2b9be82d1d94","fieldName":"Left","fieldParent":"4635c9d6-e0a0-480a-e6b6-1aa648687bf1","fieldPos":143,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"37260e60-b070-469d-b897-5156224797aa","fieldName":"oLabelPTSiteExtension","fieldParent":"e2093989-d964-4ba9-9917-2b9be82d1d94","fieldPos":144,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"custom_title","script":"","translation":[]}]},{"fieldNo":"e83079f7-fe21-4614-d76d-57695827f400","fieldName":"Right","fieldParent":"4635c9d6-e0a0-480a-e6b6-1aa648687bf1","fieldPos":145,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"401fed2d-1335-4ada-c238-b4aa65553171","fieldName":"oButtonAddNewSite","fieldParent":"e83079f7-fe21-4614-d76d-57695827f400","fieldPos":146,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"configbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"//If the oTableAddSite model is undefined assiginig a model to it.\nif (oTableAddSite.getModel().getData().length === undefined) {\n    var oModelInput = new sap.ui.model.json.JSONModel();\n    oModelInput.setData([]);\n    oTableAddSite.setModel(oModelInput);\n}\n//tabLength : oTableAddSite length will be stored in it. based on it will add the rows to the table\ntabLength = oTableAddSite.getModel().getData().length;\n//if the oTableAddSite length is lesthan or equal to 1 then pushing the object to the table\nif (tabLength <= 1) {\n    oTableAddSite.getModel().getData().push({\n        \"id\": \"\",\n        \"bomID\": oTableHeader.getModel().getData()[0].bomID,\n        \"verPTBom\": oTableHeader.getModel().getData()[0].verPTBom,\n        \"rscSite\": \"\",\n        \"validStartDate\": new Date(),\n        \"validEndDate\": new Date(\"12/31/9999\"),\n        \"ptSiteBomStatus\": \"CREATED\",\n        \"ptBomOnHold\": false,\n        \"dummyID\": Math.floor(Math.random() * 1000000 + 1),\n        \"editable\": true,\n        \"valueState\": \"None\",\n        \"valueStateText\": \"\",\n        \"todayDate\": new Date()\n    });\n    oButtonFooterSave.setEnabled(true);\n}\n\n//setting the toatl number of records count to the Table title.\noTableAddSite.setTitle(lebTotal.getText()+\":\"+ oTableAddSite.getModel().getData().length);\noTableAddSite.getModel().refresh();\n//after the table got binded making a settimeout function to bind the PT Site dropdown values with the below code\n// setTimeout(function() {\n//     //making the loop throupgh out the table rows of the cell 3\n//     oTableAddSite.getRows().forEach(row => {\n//         var comboBox = row.getCells()[3];\n//         comboBox.destroyItems();\n//         modeloComboBoxPTSite.getData().forEach(data => {\n//             //For the Pt-Site extension we dont need global to be part of the dropdown values \n//             //so making a condition which are not equal to global we are binding to it.\n//             if (data.location !== \"Global\") {\n//                 var loc = new sap.ui.core.Item({\n//                     text: data.location,\n//                     key: data.location,\n//                 });\n//                 comboBox.addItem(loc);\n//             }\n//         });\n//     });\n// }, 300);\nsetTimeout(function() {\n    //making the loop throupgh out the table rows of the cell 3\n    oTableAddSite.getRows().forEach(row => {\n        var comboBox = row.getCells()[3];\n        comboBox.destroyItems();\n        // Changes as per sprint 7\n        /*\n        In PT Site Extension transaction, user should only able to select PT Site \n        from drop down list in which role he/she has logged in.\n        */\n        /*\n        if(user has access to AD group(site) || all site access){\n        only those site(s) shall be visible in the drop dwon to select the site in site extension\n            \n        }\n        */\n        if (mdlPtSiteAdGroups.getModel().getData().length > 0) {\n            var ptSiteAdGrpData = mdlPtSiteAdGroups.getModel().getData();\n            // var uniqueAdGroupsData = [...new Set(ptSiteAdGrpData.map(item => item.adGroup))];\n\n            const uniqueAdGroupsData = [...new Map(ptSiteAdGrpData.map(item => [item[\"adGroup\"], item])).values()];\n            uniqueAdGroupsData.forEach(adGrpLoc => {\n                modeloComboBoxSitePTSite.getData().forEach(data => {\n                    if ((data.location).includes(adGrpLoc.locationName)) {\n                        var loc = new sap.ui.core.Item({\n                            text: data.location,\n                            key: data.location,\n                        });\n                        //adding items to the comboBox\n                        comboBox.addItem(loc);\n                    }\n                });\n            });\n        } else {\n            // Do not do anything\n            oComboBoxSitePTSite.destroyItems();\n        }\n\n\n\n\n        // modeloComboBoxPTSite.getData().forEach(data => {\n        //     //For the Pt-Site extension we dont need global to be part of the dropdown values \n        //     //so making a condition which are not equal to global we are binding to it.\n        //     if (data.location !== \"Global\") {\n        //         var loc = new sap.ui.core.Item({\n        //             text: data.location,\n        //             key: data.location,\n        //         });\n        //         //adding items to the comboBox\n        //         comboBox.addItem(loc);\n        //     }\n        // });\n    });\n}, 300);\n","translation":[]}]},{"fieldNo":"a3d1d238-4d56-48e2-c778-fc8b5863b257","fieldName":"oIconTabFilterSite","fieldParent":"d9571df8-b678-4eb9-8420-dd01a51c75aa","fieldPos":147,"fieldType":"sap.m.IconTabFilter","script":"","request":[],"response":[],"attributes":[{"attribute":"key","grouping":"Properties","value":"SITE","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/list","script":"","translation":[]}]},{"fieldNo":"4a99fd9a-2676-4be9-fdfc-c332c05b7a74","fieldName":"oPanelSite","fieldParent":"a3d1d238-4d56-48e2-c778-fc8b5863b257","fieldPos":148,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]}]},{"fieldNo":"26dd028d-cc5f-40b1-d240-720248efaa1e","fieldName":"FilterContailerSite","fieldParent":"4a99fd9a-2676-4be9-fdfc-c332c05b7a74","fieldPos":149,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"custom_grid","script":"","translation":[]}]},{"fieldNo":"c17cec4d-0fbf-47fc-ebf9-4f5ef0d05fed","fieldName":"oPanelFillterSite","fieldParent":"26dd028d-cc5f-40b1-d240-720248efaa1e","fieldPos":150,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]},{"attribute":"expanded","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"expandable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"ad3cedaf-3962-421a-bfb0-ff24eca3cff3","fieldName":"oScrollContainerSite","fieldParent":"c17cec4d-0fbf-47fc-ebf9-4f5ef0d05fed","fieldPos":151,"fieldType":"sap.m.ScrollContainer","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filterScroll","script":"","translation":[]}]},{"fieldNo":"69ba34c1-e346-4aba-b881-1f11dcea2697","fieldName":"oGridSite","fieldParent":"ad3cedaf-3962-421a-bfb0-ff24eca3cff3","fieldPos":152,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]}]},{"fieldNo":"5e2d95ca-3a44-4cd3-a513-10bec1eb0fb0","fieldName":"vboxSitePTType","fieldParent":"69ba34c1-e346-4aba-b881-1f11dcea2697","fieldPos":153,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"3ef1f17c-742b-4a5e-ae33-1b2a6455c0e1","fieldName":"oLabelSitePTType","fieldParent":"5e2d95ca-3a44-4cd3-a513-10bec1eb0fb0","fieldPos":154,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"e6a07fad-2359-4609-d368-77ed5e804202","fieldName":"comboBoxSitePTType","fieldParent":"5e2d95ca-3a44-4cd3-a513-10bec1eb0fb0","fieldPos":155,"fieldType":"sap.m.ComboBox","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"170px","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"showWarning();\nif (this.getSelectedKey()) {\n    this.setValueState(\"None\")\n}\nvar split = oEvent.getSource().getSelectedItemId().split('-');\nvar position = parseInt(split[split.length - 1]);\ncmboVariant.setValue(oEvent.getSource().getModel().getData()[position].matlModeCd);\nif ((cmboVariant.getSelectedKey().length + 1) * 8 > 170) {\n    cmboVariant.setWidth(((cmboVariant.getSelectedKey().length + 1) * 8) + 'px');\n}\n","translation":[]}]},{"fieldNo":"bffd08cc-ed87-4a98-ccce-d8e9ecfde472","fieldName":"sitePtTypeItem","fieldParent":"e6a07fad-2359-4609-d368-77ed5e804202","fieldPos":156,"fieldType":"sap.ui.core.ListItem","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{matlNum}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{matlNum}","script":"","translation":[]}]},{"fieldNo":"e79267ff-d7d1-41a1-c944-d35799f05887","fieldName":"oVBoxSiteProductNumber","fieldParent":"69ba34c1-e346-4aba-b881-1f11dcea2697","fieldPos":157,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"155px","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3b327554-dde9-4cfc-eb56-2631d45aa6cf","fieldName":"lblSiteProductNumber","fieldParent":"e79267ff-d7d1-41a1-c944-d35799f05887","fieldPos":158,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"efb3b2e2-5e28-4a8e-eeb1-8a11d3ed253d","fieldName":"comboBoxSiteProduct","fieldParent":"e79267ff-d7d1-41a1-c944-d35799f05887","fieldPos":159,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"valueHelpRequest","grouping":"Events","value":"Anonymous Function","script":"// sap.ui.core.BusyIndicator.show(0);\n// getProducts();","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.show(0);\nthis.setValue(this.getValue().trim());\noEvent.getSource().setValue(oEvent.getSource().getValue().toUpperCase());\ngetMatDataSite(oEvent);\n","translation":[]}]},{"fieldNo":"d7c950f2-6c0e-4536-c288-18ea6c7346b7","fieldName":"oVBoxSiteVariant","fieldParent":"69ba34c1-e346-4aba-b881-1f11dcea2697","fieldPos":160,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"155px","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f60ea4ed-4cd7-4179-cd23-af60062dbf18","fieldName":"lblSiteVariant","fieldParent":"d7c950f2-6c0e-4536-c288-18ea6c7346b7","fieldPos":161,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"50a3e391-6878-4740-d0b7-6c5cc1ca4822","fieldName":"cmboSiteVariant","fieldParent":"d7c950f2-6c0e-4536-c288-18ea6c7346b7","fieldPos":162,"fieldType":"sap.m.ComboBox","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new1","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"95852c46-39a1-480b-f2c5-ea2be68e208f","fieldName":"oVBoxSiteShiptoCountry","fieldParent":"69ba34c1-e346-4aba-b881-1f11dcea2697","fieldPos":163,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"8c3a139f-a521-4801-a687-a5d65a4e79c7","fieldName":"oLabelSiteDestination","fieldParent":"95852c46-39a1-480b-f2c5-ea2be68e208f","fieldPos":164,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"c932a41b-c23b-4e7b-dfaf-0a569870613e","fieldName":"oComboBoxSiteCountry","fieldParent":"95852c46-39a1-480b-f2c5-ea2be68e208f","fieldPos":165,"fieldType":"sap.m.ComboBox","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"170px","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"this.setValue(this.getValue().trim());\nshowWarning();\nif (this.getSelectedKey()) {\n    this.setValueState(\"None\")\n}\n\nif (this.getSelectedKey() === \"\") {\n    this.setValue();\n}","translation":[]}]},{"fieldNo":"bb26234e-55ba-473f-edc3-e952d45c36ff","fieldName":"oVBoxSiteComponent","fieldParent":"69ba34c1-e346-4aba-b881-1f11dcea2697","fieldPos":166,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"eee7fa7b-2ed5-4381-cd16-8f531e151d73","fieldName":"lblCCSiteNumber","fieldParent":"bb26234e-55ba-473f-edc3-e952d45c36ff","fieldPos":167,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"f476545c-0524-47cc-bba6-52e1722a7466","fieldName":"oInputSiteComponent","fieldParent":"bb26234e-55ba-473f-edc3-e952d45c36ff","fieldPos":168,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0a8263ba-f6cb-4455-acfd-ab76ff33e3e2","fieldName":"oVBoxSiteRev","fieldParent":"69ba34c1-e346-4aba-b881-1f11dcea2697","fieldPos":169,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"41675451-deef-4787-b7ea-3c0302f745c2","fieldName":"lblSiteRev","fieldParent":"0a8263ba-f6cb-4455-acfd-ab76ff33e3e2","fieldPos":170,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"35385e66-94a4-492a-a2fb-d2751b8359db","fieldName":"inpSitetRev","fieldParent":"0a8263ba-f6cb-4455-acfd-ab76ff33e3e2","fieldPos":171,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d2f85ebf-c3ad-4679-cfad-122a96a410ae","fieldName":"oVBoxSitePTSite","fieldParent":"69ba34c1-e346-4aba-b881-1f11dcea2697","fieldPos":172,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"986e1e63-efb3-4728-ec5a-e34f14601a97","fieldName":"lblSitePTSite","fieldParent":"d2f85ebf-c3ad-4679-cfad-122a96a410ae","fieldPos":173,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"2785b43d-277c-4937-b39a-51cbd2be1152","fieldName":"oComboBoxSitePTSite","fieldParent":"d2f85ebf-c3ad-4679-cfad-122a96a410ae","fieldPos":174,"fieldType":"sap.m.ComboBox","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]}]},{"fieldNo":"680419d6-6a90-477c-d2b9-3afedf50c3fd","fieldName":"sitePTSite21","fieldParent":"2785b43d-277c-4937-b39a-51cbd2be1152","fieldPos":175,"fieldType":"sap.ui.core.Item","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{location}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{location}","script":"","translation":[]}]},{"fieldNo":"5381a8ec-33e2-42bf-dd87-c3f91063752e","fieldName":"oVBoxSitePTSiteStatus","fieldParent":"69ba34c1-e346-4aba-b881-1f11dcea2697","fieldPos":176,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"ca85684e-cf9c-4caf-f057-eb005850096f","fieldName":"lblSitePTSiteStatus","fieldParent":"5381a8ec-33e2-42bf-dd87-c3f91063752e","fieldPos":177,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"destinationLabelStyle","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"1910916e-397c-48b0-b14d-121169b42c8f","fieldName":"cmboSitePTSiteStatus","fieldParent":"5381a8ec-33e2-42bf-dd87-c3f91063752e","fieldPos":178,"fieldType":"sap.m.ComboBox","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"selectionChange","grouping":"Events","value":"Anonymous Function","script":"if (this.getSelectedKey() === \"Selzach, Switzerland\") {\n    var globalStatus = xhr.responseJSON.filter(f => {\n        return f.locationName === \"Selzach, Switzerland\"\n    })\n    modelcmboBOMStatus.setData(globalStatus);\n} else if (this.getSelectedKey() === \"Courcelles, Belgium\") {\n    var globalStatus = xhr.responseJSON.filter(f => {\n        return f.locationName === \"Courcelles, Belgium\"\n    })\n    modelcmboBOMStatus.setData(globalStatus);\n} else if (this.getSelectedKey() === \"Global\") {\n    var globalStatus = xhr.responseJSON.filter(f => {\n        return f.locationName === pt_bom_global\n    })\n    modelcmboBOMStatus.setData(globalStatus);\n}","translation":[]}]},{"fieldNo":"cc51e46f-819d-45e3-c2b4-d43001a71393","fieldName":"ptstatusItem11","fieldParent":"1910916e-397c-48b0-b14d-121169b42c8f","fieldPos":179,"fieldType":"sap.ui.core.Item","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{status}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{status}","script":"","translation":[]}]},{"fieldNo":"32cb925e-f1cb-4d3b-cb46-b909d7119916","fieldName":"ptstatusItem12","fieldParent":"1910916e-397c-48b0-b14d-121169b42c8f","fieldPos":180,"fieldType":"sap.ui.core.Item","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{Status}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{Status}","script":"","translation":[]}]},{"fieldNo":"74b7b63d-ddb6-4270-bf8e-777d8e953db4","fieldName":"oVBoxSiteBOMComponent","fieldParent":"69ba34c1-e346-4aba-b881-1f11dcea2697","fieldPos":181,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"81fffe41-9b23-456b-e0f0-c9957e73993e","fieldName":"lblSiteBOMComponent","fieldParent":"74b7b63d-ddb6-4270-bf8e-777d8e953db4","fieldPos":182,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"2b407317-b18b-4ed4-fe9d-8df37bd22b71","fieldName":"chkSiteBOMComponent","fieldParent":"74b7b63d-ddb6-4270-bf8e-777d8e953db4","fieldPos":183,"fieldType":"sap.m.CheckBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"chkBoxStyle","script":"","translation":[]}]},{"fieldNo":"51c73286-c7a6-4e54-b0c3-caba693ffdf2","fieldName":"oBarExpanFilterSiteBTBOMSite","fieldParent":"26dd028d-cc5f-40b1-d240-720248efaa1e","fieldPos":184,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Header","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"addContent","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"ca21b432-33dc-4b07-aa8c-b12d998a8f60","fieldName":"Leftversion","fieldParent":"51c73286-c7a6-4e54-b0c3-caba693ffdf2","fieldPos":185,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"92710bf9-6c85-4c71-e15c-44def4ce89f7","fieldName":"headerVersionLabel","fieldParent":"ca21b432-33dc-4b07-aa8c-b12d998a8f60","fieldPos":186,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"myCustomText","script":"","translation":[]}]},{"fieldNo":"beeb5495-11fc-4cb5-888b-4c22f605e33f","fieldName":"RightIfuButtons","fieldParent":"51c73286-c7a6-4e54-b0c3-caba693ffdf2","fieldPos":187,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"7a850aed-0a81-4066-e908-31f469abe62a","fieldName":"btnSiteExtension","fieldParent":"beeb5495-11fc-4cb5-888b-4c22f605e33f","fieldPos":188,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oButtonFooterSaveSite.setVisible(false);\noButtonFooterSubmitApprovalSite.setVisible(false);\ng_change_detact = false;\noMessagePageEmpty.setVisible(false);\nsap.ui.core.BusyIndicator.show(0);\nptSiteIconTabBar.setSelectedKey(\"site\");\nbtnSiteDisplay.setVisible(false);\nbtnSiteChange.setEnabled(false);\nbtnSiteView.setEnabled(false);\noIconpdf.setVisible(false);\noIconexcel.setVisible(false);\noPanelSiteHeaderCommon.setExpanded(false);\noBarFooter.setVisible(false);\noPanelPTSiteHeader.setExpanded(false);\n\n/*when user changes the selection criteria the lock placed on record opened earlier shall be removed*/\nif (g_activeLockRecord &&\n    Object.keys(g_activeLockRecord).length) {\n        window.localStorage.lockedEntry = \"\"\n    removeLock(g_activeLockRecord)\n}\n\nvar flag = validateRequiredFieldSite(false);\nif (flag) {\n    sap.ui.core.BusyIndicator.hide();\n    getDialog(oLabelMadetoryFields.getText())\n} else {\n    ptSiteIconTabBar.setSelectedKey(\"site\");\n\n    var options = {\n        data: {\n            searchdata: {\n                matlNum: comboBoxSiteProduct.getValue(),\n                shiptoCountry: oComboBoxSiteCountry.getSelectedKey()\n            },\n            setting: {\n                flag: \"create_data\",\n                create: true\n            }\n        }\n    };\n\n    apigetSiteData(options);\n}","translation":[]}]},{"fieldNo":"74d099c2-f9c3-45f8-b925-67ce892f8359","fieldName":"btnSiteChange","fieldParent":"beeb5495-11fc-4cb5-888b-4c22f605e33f","fieldPos":189,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"orangebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"\noButtonFooterSaveSite.setVisible(false);\noButtonFooterSubmitApprovalSite.setVisible(false);\ng_change_detact = false;\nptSiteIconTabBar.setSelectedKey(\"site_change\");\nbtnSiteExtension.setEnabled(false);\nbtnSiteView.setEnabled(false);\nbtnSiteDisplay.setVisible(false);\noMessagePageEmpty.setVisible(false);\noIconSitepdf.setVisible(false);\noIconSiteexcel.setVisible(false);\noPanelSiteHeaderCommon.setExpanded(false);\noBarFooter.setVisible(false);\n/*when user changes the selection criteria the lock placed on record opened earlier shall be removed*/\nif (g_activeLockRecord &&\n    Object.keys(g_activeLockRecord).length) {\n        window.localStorage.lockedEntry = \"\"\n    removeLock(g_activeLockRecord)\n}\nvar flag = validateRequiredFieldSite(false);\nif (flag) {\n    sap.ui.core.BusyIndicator.hide();\n    getDialog(oLabelMadetoryFields.getText());\n} else {\n\n    var options = {\n        data: {\n            searchdata: {\n                matlNum: comboBoxSiteProduct.getValue(),\n                shiptoCountry: oComboBoxSiteCountry.getSelectedKey()\n            },\n            setting: {\n                flag: \"create_data\",\n                create: false\n            }\n        }\n    };\n\n    apigetSiteData(options);\n    sap.ui.core.BusyIndicator.show(0);\n}","translation":[]}]},{"fieldNo":"103571e6-5872-4e1c-eced-e087468b4b17","fieldName":"btnSiteView","fieldParent":"beeb5495-11fc-4cb5-888b-4c22f605e33f","fieldPos":190,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oButtonFooterSaveSite.setVisible(false);\noButtonFooterSubmitApprovalSite.setVisible(false);\ng_change_detact = false;\nptSiteIconTabBar.setSelectedKey(\"site_display\");\noPanelSiteHeaderCommon.setExpanded(false);\noMessagePageEmpty.setVisible(false);\nheaderVersionLabel.setVisible(false);\nbtnSiteDisplay.setVisible(true);\nbtnSiteView.setVisible(false);\nbtnSiteExtension.setEnabled(false);\nbtnSiteView.setEnabled(false);\noBarFooter.setVisible(false);\nbtnSiteChange.setEnabled(false);\nbtnSiteDisplay.setEnabled(true);\nlblSiteProductNumber.setRequired(false);\noLabelSiteDestination.setRequired(false);\noVBoxSiteVariant.setVisible(true);\noVBoxSiteComponent.setVisible(true);\noVBoxSiteRev.setVisible(true);\noVBoxSitePTSite.setVisible(true);\noVBoxSitePTSiteStatus.setVisible(true);\noVBoxSiteBOMComponent.setVisible(true);\noVBoxSiteVariant.setVisible(false);","translation":[]}]},{"fieldNo":"32e4e84c-d55d-44b5-d4f9-8614267c7747","fieldName":"btnSiteDisplay","fieldParent":"beeb5495-11fc-4cb5-888b-4c22f605e33f","fieldPos":191,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"\noButtonFooterSaveSite.setVisible(false);\noButtonFooterSubmitApprovalSite.setVisible(false);\ng_change_detact = false;\noPanelSiteHeaderCommon.setExpanded(false);\noBarFooter.setVisible(false);\n\nsap.ui.core.BusyIndicator.show(0);\nvar flag = validateEmptyFieldForDisplaySite(false);\nif (!flag) {\n    sap.ui.core.BusyIndicator.hide();\n    getDialog(\"Enter at least one field to search.\")\n} else {\n    var options = {\n        data: {\n            \"matlNum\": comboBoxSiteProduct.getValue(),\n            \"shiptoCountry\": oComboBoxSiteCountry.getSelectedKey(),\n            // \"variant\": cmboSiteVariant.getValue(),\n            // \"ptType\": \"\",\n            \"rscSite\": oComboBoxSitePTSite.getValue(),\n            \"ptSiteBomStatus\": cmboSitePTSiteStatus.getSelectedKey(),\n            \"BOMComponent\": chkSiteBOMComponent.getSelected(),\n            \"component\": oInputSiteComponent.getValue(),\n            \"revision\": inpSitetRev.getValue(),\n            \"view\": ptSiteIconTabBar.getSelectedKey(),\n            \"table\": true\n        }\n    };\n    sap.ui.core.BusyIndicator.show(0);\n    ptSiteIconTabBar.setBusy(true);\n    oIconTabBar.setBusy(true);\n    apipost_getDisplayData(options);\n}","translation":[]}]},{"fieldNo":"9e63630f-eca8-4dff-a27a-3c9594356e0d","fieldName":"btnSiteReset","fieldParent":"beeb5495-11fc-4cb5-888b-4c22f605e33f","fieldPos":192,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oButtonFooterSaveSite.setVisible(false);\noButtonFooterSubmitApprovalSite.setVisible(false);\nwindow.localStorage.lockedEntry = \"\"\nremoveLock(g_activeLockRecord);\nresetPTSite();","translation":[]}]},{"fieldNo":"5f2166a1-e687-4b1c-81b2-e2e8491fbd49","fieldName":"btnSiteExpand","fieldParent":"beeb5495-11fc-4cb5-888b-4c22f605e33f","fieldPos":193,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"expand_button","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/angle-up","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"!oPanelFillter.getExpanded() ? oButtonFilterExpand.setIcon(\"sap-icon://fa-solid/angle-up\") :\n    oButtonFilterExpand.setIcon(\"sap-icon://fa-solid/angle-down\");\n    !oPanelFillter.getExpanded() ? oButtonFilterExpand.setText(\"Minimize\") :\n    oButtonFilterExpand.setText(\"Maximize\");\noPanelFillter.setExpanded(!oPanelFillter.getExpanded());","translation":[]}]},{"fieldNo":"ed006586-81b1-4d49-e0d7-59542e7beeab","fieldName":"oIconSitepdf","fieldParent":"beeb5495-11fc-4cb5-888b-4c22f605e33f","fieldPos":194,"fieldType":"sap.ui.core.Icon","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"icons pdf","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-regular/file-pdf","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"if (ptSiteIconTabBar.getSelectedKey() === \"site_display\") {\n    if (!oPanelSiteHeaderCommon.getExpanded()) {\n        genaratePDFDataDisplay(oTableDisplayPTBOMSite);\n    }else{\n        genaratePDFData(oTablePTSiteHeader,oTableSiteComponent,oTableAddSite);\n    }\n} else {\n    genaratePDFData(oTablePTSiteHeader,oTableSiteComponent,oTableAddSite);\n}","translation":[]}]},{"fieldNo":"083302b9-ce74-43d0-a887-1bd014871eda","fieldName":"oIconSiteexcel","fieldParent":"beeb5495-11fc-4cb5-888b-4c22f605e33f","fieldPos":195,"fieldType":"sap.ui.core.Icon","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"icons excel","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-regular/file-excel","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"20px","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"if (ptSiteIconTabBar.getSelectedKey() === \"site_display\") {\n    if (!oPanelSiteHeaderCommon.getExpanded()) {\n        downloadExcelDisplay(oTableDisplayPTBOMSite);\n    }else{\n        genarateExcelData(oTablePTSiteHeader,oTableSiteComponent,oTableAddSite);\n    }\n} else {\n    genarateExcelData(oTablePTSiteHeader,oTableSiteComponent,oTableAddSite);\n}","translation":[]}]},{"fieldNo":"69e9fd8f-9691-49ed-e88c-ba97875b29ab","fieldName":"BodyContainerSite","fieldParent":"4a99fd9a-2676-4be9-fdfc-c332c05b7a74","fieldPos":196,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"BodyContainer","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"2cbd3bd7-6858-40c1-de2d-f30d49c0978c","fieldName":"ptSiteIconTabBar","fieldParent":"69e9fd8f-9691-49ed-e88c-ba97875b29ab","fieldPos":197,"fieldType":"sap.m.IconTabBar","bindingType":"u","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"icon_tab_bar","script":"","translation":[]}]},{"fieldNo":"f1c251d0-f342-4495-b96a-74b7281da8d5","fieldName":"site_extension_section","fieldParent":"2cbd3bd7-6858-40c1-de2d-f30d49c0978c","fieldPos":198,"fieldType":"sap.m.IconTabFilter","script":"","request":[],"response":[],"attributes":[{"attribute":"key","grouping":"Properties","value":"site","script":"","translation":[]}]},{"fieldNo":"01e12046-5265-43ec-f04d-e8f3ae614e39","fieldName":"oTableSiteExtensionPTBOM","fieldParent":"f1c251d0-f342-4495-b96a-74b7281da8d5","fieldPos":199,"fieldType":"sap.ui.table.Table","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"minAutoRowCount","grouping":"Properties","value":"10","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"enableSelectAll","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableCellFilter","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"b71e5645-4757-4d2e-e608-ce3dbbe33c01","fieldName":"siteDisplaySection","fieldParent":"2cbd3bd7-6858-40c1-de2d-f30d49c0978c","fieldPos":200,"fieldType":"sap.m.IconTabFilter","script":"","request":[],"response":[],"attributes":[{"attribute":"key","grouping":"Properties","value":"site_display","script":"","translation":[]}]},{"fieldNo":"3fefd745-7c5f-4aaa-e4bc-cfd982a1c2ea","fieldName":"oTableDisplayPTBOMSite","fieldParent":"b71e5645-4757-4d2e-e608-ce3dbbe33c01","fieldPos":201,"fieldType":"sap.ui.table.Table","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"visibleRowCountMode","grouping":"Properties","value":"Interactive","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"minAutoRowCount","grouping":"Properties","value":"8","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"enableSelectAll","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"169928bd-1dc9-4daf-9107-ffd06db3cc2e","fieldName":"oBarContentSitePaggination","fieldParent":"b71e5645-4757-4d2e-e608-ce3dbbe33c01","fieldPos":202,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"addContent","script":"","translation":[]}]},{"fieldNo":"ff4e23b4-30d3-4520-b213-13c420edc7aa","fieldName":"Right","fieldParent":"169928bd-1dc9-4daf-9107-ffd06db3cc2e","fieldPos":203,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"b8ef69a0-c2a8-4110-e899-fbb79ea5d4d0","fieldName":"totaSitelDataCount","fieldParent":"ff4e23b4-30d3-4520-b213-13c420edc7aa","fieldPos":204,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"3ea8a0ca-a326-4371-96f6-5cdd591f7d5b","fieldName":"Middle","fieldParent":"169928bd-1dc9-4daf-9107-ffd06db3cc2e","fieldPos":205,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"ec232a61-8a5e-45c1-82ef-fdc8117903d4","fieldName":"oHTMLSiteObject","fieldParent":"3ea8a0ca-a326-4371-96f6-5cdd591f7d5b","fieldPos":206,"fieldType":"sap.ui.core.HTML","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"aa11ac2f-dd40-4439-d61b-ec6af9882b0a","fieldName":"oHTML","fieldParent":"ec232a61-8a5e-45c1-82ef-fdc8117903d4","fieldPos":207,"fieldType":"neptune.Html","script":"<div id='paginationDisplaySite'> </div>","request":[],"response":[],"attributes":[]},{"fieldNo":"20663873-6293-4a8b-bd2f-8b83654cc4fe","fieldName":"Left","fieldParent":"169928bd-1dc9-4daf-9107-ffd06db3cc2e","fieldPos":208,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"c6bdea2f-b61b-4c6e-8189-fdeb8bd5c2e2","fieldName":"selectedSiteRowCount","fieldParent":"20663873-6293-4a8b-bd2f-8b83654cc4fe","fieldPos":209,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"1dcdb640-5c6e-42f7-d42b-0377519f81e9","fieldName":"siteChangeSection","fieldParent":"2cbd3bd7-6858-40c1-de2d-f30d49c0978c","fieldPos":210,"fieldType":"sap.m.IconTabFilter","script":"","request":[],"response":[],"attributes":[{"attribute":"key","grouping":"Properties","value":"site_change","script":"","translation":[]}]},{"fieldNo":"57816d7d-4c6c-4520-fe74-2cd355ea03fb","fieldName":"oTableChangePTBOMSite","fieldParent":"1dcdb640-5c6e-42f7-d42b-0377519f81e9","fieldPos":211,"fieldType":"sap.ui.table.Table","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"minAutoRowCount","grouping":"Properties","value":"10","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"enableSelectAll","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableCellFilter","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f5194c27-58fb-4d53-966e-bbfb91ea493d","fieldName":"sitecreateSection","fieldParent":"2cbd3bd7-6858-40c1-de2d-f30d49c0978c","fieldPos":212,"fieldType":"sap.m.IconTabFilter","script":"","request":[],"response":[],"attributes":[{"attribute":"key","grouping":"Properties","value":"create","script":"","translation":[]}]},{"fieldNo":"097a88d9-880c-4bb1-9f18-d714c6679b4a","fieldName":"oPanelSiteHeaderCommon","fieldParent":"69e9fd8f-9691-49ed-e88c-ba97875b29ab","fieldPos":213,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]},{"attribute":"expandable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"13a0c17b-c8f1-4564-a31c-292e771a1672","fieldName":"oVBoxSiteVersionDataContainer","fieldParent":"097a88d9-880c-4bb1-9f18-d714c6679b4a","fieldPos":214,"fieldType":"sap.m.VBox","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"5540106f-f483-41ae-9c51-aa9f0cd2ef3d","fieldName":"oPanelPTSiteHeader","fieldParent":"13a0c17b-c8f1-4564-a31c-292e771a1672","fieldPos":215,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]},{"attribute":"expandable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9141e46f-5900-4038-bb98-137d7e799f64","fieldName":"oBarSite","fieldParent":"5540106f-f483-41ae-9c51-aa9f0cd2ef3d","fieldPos":216,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Header","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"addContent","script":"","translation":[]}]},{"fieldNo":"ae26fdde-58b9-4bed-9e28-47b9fca9384d","fieldName":"Right","fieldParent":"9141e46f-5900-4038-bb98-137d7e799f64","fieldPos":217,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"8a541348-91dc-41c9-a6a9-730872eed8ae","fieldName":"btnSitePTBomExpand","fieldParent":"ae26fdde-58b9-4bed-9e28-47b9fca9384d","fieldPos":218,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"expand_button","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/angle-up","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"!oPanelPTHeader.getExpanded() ? oButtonPTBomExpand.setIcon(\"sap-icon://fa-solid/angle-up\") :\n    oButtonPTBomExpand.setIcon(\"sap-icon://fa-solid/angle-down\");\n    !oPanelPTHeader.getExpanded() ? oButtonPTBomExpand.setText(\"Minimize\") :\n    oButtonPTBomExpand.setText(\"Maximize\");\noPanelPTHeader.setExpanded(!oPanelPTHeader.getExpanded());","translation":[]}]},{"fieldNo":"02b482ad-9108-4d09-9781-ceb588878d40","fieldName":"Left","fieldParent":"9141e46f-5900-4038-bb98-137d7e799f64","fieldPos":219,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"8c02989d-16d6-4905-e476-be0719b28ffe","fieldName":"ptBoMSiteHeaderL","fieldParent":"02b482ad-9108-4d09-9781-ceb588878d40","fieldPos":220,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"custom_title","script":"","translation":[]}]},{"fieldNo":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldName":"oTablePTSiteHeader","fieldParent":"5540106f-f483-41ae-9c51-aa9f0cd2ef3d","fieldPos":221,"fieldType":"sap.ui.table.Table","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"1","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"8f54d077-433d-436b-8482-89fa6031402f","fieldName":"oColumnSiteversion","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":222,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"verPTBom","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"ec9afeaf-ee10-45e7-e516-a8c62be8146a","fieldName":"oLabelSiteVersionHeader","fieldParent":"8f54d077-433d-436b-8482-89fa6031402f","fieldPos":223,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{verPTBom}","script":"","translation":[]}]},{"fieldNo":"25c10eb7-5f31-4b50-ecd4-c3daf73da1c8","fieldName":"oColumnSiteProductCode","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":224,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"matlNum","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e070fcab-b23b-4b47-96e6-a9d93fc18dfc","fieldName":"oLabelSiteProductCodeHeader","fieldParent":"25c10eb7-5f31-4b50-ecd4-c3daf73da1c8","fieldPos":225,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{matlNum}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"6978c8a0-6689-4a29-dc8c-8f8ca2ee4e76","fieldName":"oColumnSiteVariant","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":226,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"variant","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"27ae7219-9a7b-43ba-8a7a-645e99dbefd5","fieldName":"oInputSiteVariantHeader","fieldParent":"6978c8a0-6689-4a29-dc8c-8f8ca2ee4e76","fieldPos":227,"fieldType":"sap.m.Input","script":"","request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{variant}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"4eaf2f11-f792-48fa-ad79-394787c1a1ad","fieldName":"oColumnSiteShiptoCountry","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":228,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"shiptoCountry","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e1d59ada-a08e-4c6c-8195-81e87d830b07","fieldName":"oLabelSiteShipToCountryHeader","fieldParent":"4eaf2f11-f792-48fa-ad79-394787c1a1ad","fieldPos":229,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{shiptoCountry}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"34c80e3f-bc87-4651-f141-35441072aaab","fieldName":"oColumnSiteBOMStatus","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":230,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"ptSiteBomStatus","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"d361797a-2ec4-43ab-83da-387f7f751009","fieldName":"oLabelSiteBOMStatusHeader","fieldParent":"34c80e3f-bc87-4651-f141-35441072aaab","fieldPos":231,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{ptBomStatus}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"63dc7efe-07d2-45a5-e4b8-841e7149c254","fieldName":"oColumnSiteBOMqty","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":232,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"bomQty","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"fa7dcfe1-9872-4662-dc43-b7af420e598e","fieldName":"oInputSiteBOMqty","fieldParent":"63dc7efe-07d2-45a5-e4b8-841e7149c254","fieldPos":233,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{bomQty}","script":"","translation":[]}]},{"fieldNo":"6eee307f-47cb-44aa-a300-da6d6841f5ef","fieldName":"oColumnSiteUOM","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":234,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"uom","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3cd7ae84-d919-47b5-aea8-2f42a0fd64b4","fieldName":"oComboBoxSiteUOMHeader","fieldParent":"6eee307f-47cb-44aa-a300-da6d6841f5ef","fieldPos":235,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{uom}","script":"","translation":[]}]},{"fieldNo":"4ca87fe6-4568-4b7d-d9c0-30c46fc38d8a","fieldName":"oColumnSiteptSIte","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":236,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"rscSite","script":"","translation":[]}]},{"fieldNo":"60ab6991-2aaa-44e0-f5ab-d7e9f0f0286e","fieldName":"oComboBoxSiteptSITE","fieldParent":"4ca87fe6-4568-4b7d-d9c0-30c46fc38d8a","fieldPos":237,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{rscSite}","script":"","translation":[]}]},{"fieldNo":"28176319-f396-4e0d-9626-00ada45a3b05","fieldName":"oColumnSiteBOMStatusGlobal","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":238,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"ptSiteBomStatus","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"dd615918-93da-47f5-92df-1aca2afc0452","fieldName":"oLabelSiteBOMStatusHeaderGlobal","fieldParent":"28176319-f396-4e0d-9626-00ada45a3b05","fieldPos":239,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{ptSiteBomStatus}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3ebfda5e-d853-413a-d973-73e56e4d77f3","fieldName":"oColumnSiteplmSource","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":240,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"plmSource","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"801b3341-5489-4be8-ba58-9caa61d7156c","fieldName":"oComboBoxSiteplmSource","fieldParent":"3ebfda5e-d853-413a-d973-73e56e4d77f3","fieldPos":241,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{plmSource}","script":"","translation":[]}]},{"fieldNo":"597ea870-a21d-4bb9-8234-6e7dccc6cc59","fieldName":"oColumnSiteStartDateHeader","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":242,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"plmSource","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"b13149b6-c8bd-4662-cead-576f39611c76","fieldName":"oDatePickerSiteStartDateHeader","fieldParent":"597ea870-a21d-4bb9-8234-6e7dccc6cc59","fieldPos":243,"fieldType":"sap.m.DatePicker","script":"","request":[],"response":[],"attributes":[{"attribute":"valueStateText","grouping":"Properties","value":"{valueStateText}","script":"","translation":[]},{"attribute":"valueState","grouping":"Properties","value":"{valueState}","script":"","translation":[]},{"attribute":"valueFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"minDate","grouping":"Properties","value":"{todayDate}","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{editable}","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"dateValue","grouping":"Properties","value":"{validStartDate}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"\nvar lineItemDate = \"\";\nvar endDateVal = new Date(oEvent.oSource.getBindingContext().getObject().validEndDate);\nif (!this.getDateValue()) {\n    this.setDateValue(new Date());\n}\n\nif (this.isValidValue()) {\n    if (this.getDateValue() > endDateVal) {\n        getDialog(oLabelafterToday.getText());\n        this.setDateValue(lineItemDate)//(new Date()); //this.getDateValue()); //        \n        oEvent.getSource().getModel().refresh();\n    }\n    var selectedDate = this.getDateValue().getDate();\n    if (lineItemDate === \"\") {\n        lineItemDate = this.getDateValue();\n    }\n    var dbEffectiveDate = lineItemDate.getDate();\n    var todaysDate = new Date().getDate();\n    if ((selectedDate <= dbEffectiveDate && selectedDate < todaysDate)) {\n        getDialog(oLabelafterToday.getText())\n        this.setDateValue(new Date());\n        oEvent.getSource().getModel().refresh();\n    } else if (selectedDate > dbEffectiveDate && selectedDate <= todaysDate) {\n        this.setDateValue(this.getDateValue());\n        oEvent.getSource().getModel().refresh();\n    } else if (selectedDate >= todaysDate) {\n        this.setDateValue(this.getDateValue());\n        oEvent.getSource().getModel().refresh();\n    }\n    lineItemDate = \"\";\n} else {\n    getDialog(oLabelinvalidDate.getText());\n    this.setValue(printDateString(this.getDateValue()));\n    this.setDateValue(this.getDateValue());\n    oEvent.getSource().getModel().refresh();\n}\n\n","translation":[]}]},{"fieldNo":"8ce852eb-22bb-4351-c46a-376c55e53814","fieldName":"oColumnSiteEndDateHeader","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":244,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"03bea654-3940-4827-8b43-92a8ddc5d212","fieldName":"oDatePickerSiteEndDateHeader","fieldParent":"8ce852eb-22bb-4351-c46a-376c55e53814","fieldPos":245,"fieldType":"sap.m.DatePicker","script":"","request":[],"response":[],"attributes":[{"attribute":"minDate","grouping":"Properties","value":"{todayDate}","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{editable}","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"dateValue","grouping":"Properties","value":"{validEndDate}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"var startDateVal = new Date(oEvent.oSource.getBindingContext().getObject().validStartDate);\nvar current = new Date();\ncurrentHours = current.getHours();\ncurrentMinutes = current.getMinutes();\ncurrentSeconds = current.getSeconds();\nif (!this.getDateValue()) {\n    this.setDateValue(new Date(9999, 11, 31, currentHours, currentMinutes, currentSeconds));     \n}\nif (this.isValidValue()) {\n    if (this.getDateValue() < startDateVal) {\n        getDialog(oLabeldatePrior.getText())\n        this.setDateValue(new Date(9999, 11, 31, currentHours, currentMinutes, currentSeconds));     \n        oEvent.getSource().getModel().refresh();\n    }\n} else {\n    getDialog(oLabelinvalidDate.getText())\n    this.setValue(printDateString(this.getDateValue()));\n    this.setDateValue(this.getDateValue());\n    oEvent.getSource().getModel().refresh();\n}\n\nif (this.isValidValue()) {\n    if (this.getDateValue() < startDateVal) {\n        getDialog(oLabeldatePrior.getText())\n        this.setDateValue(new Date(9999, 11, 31, currentHours, currentMinutes, currentSeconds)); //this.getDateValue()); //        \n        oEvent.getSource().getModel().refresh();\n    }\n\n} else {\n    getDialog(oLabelinvalidDate.getText());\n    this.setValue(printDateString(this.getDateValue()));\n    this.setDateValue(this.getDateValue());\n    oEvent.getSource().getModel().refresh();\n}","translation":[]}]},{"fieldNo":"647ded2b-7e78-4eb0-f140-4e57f8526a58","fieldName":"oColumnplmSiteChangeControlNum","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":246,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"ec559bf9-c337-44f1-b8db-878566763990","fieldName":"oInputplmSiteChangeCntrl","fieldParent":"647ded2b-7e78-4eb0-f140-4e57f8526a58","fieldPos":247,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"69665c37-507c-4941-857b-85e41eacb6fc","fieldName":"oColumnSiteGtin","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":248,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"gtin","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"7f005e22-03d5-4928-dbd1-216ede03f2a2","fieldName":"oLabelSiteGTINHeader","fieldParent":"69665c37-507c-4941-857b-85e41eacb6fc","fieldPos":249,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{gtin}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"b0fa6566-7e7a-49ef-c70a-7b836957d399","fieldName":"oColumnSiteonHold","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":250,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"80px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"ptBomOnHold","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"883fd694-6a51-4bbb-ada8-506bde4d145d","fieldName":"oCheckBoxSiteonHold","fieldParent":"b0fa6566-7e7a-49ef-c70a-7b836957d399","fieldPos":251,"fieldType":"sap.m.CheckBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"checkBox","script":"","translation":[]},{"attribute":"selected","grouping":"Properties","value":"{ptBomOnHold}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{holdFlag}","script":"","translation":[]}]},{"fieldNo":"9476554b-5d22-42d7-f02e-41bfa4f4e4f8","fieldName":"oColumnSiteBU","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":252,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"businessUnit","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3d3bf39f-b15f-4cb0-affa-e66223e79a2f","fieldName":"oInputSiteBusinessU","fieldParent":"9476554b-5d22-42d7-f02e-41bfa4f4e4f8","fieldPos":253,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{businessUnit}","script":"","translation":[]}]},{"fieldNo":"a08d8040-a1e6-40e1-db46-c4252281ba2a","fieldName":"oColumnSitefranchise","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":254,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"250px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"franchise","script":"","translation":[]}]},{"fieldNo":"d20e8609-a8a2-479f-fe82-ad2d08f4a1e0","fieldName":"oInputSitefranchise","fieldParent":"a08d8040-a1e6-40e1-db46-c4252281ba2a","fieldPos":255,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{franchise}","script":"","translation":[]}]},{"fieldNo":"feb2918e-1bda-48cd-ec01-2053d7e96ee4","fieldName":"oColumnSiteDescription","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":256,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"filterProperty","grouping":"Properties","value":"matDescription","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c4e5efb4-0da6-488c-bec8-575fb07e91fb","fieldName":"oLabelSiteDescr","fieldParent":"feb2918e-1bda-48cd-ec01-2053d7e96ee4","fieldPos":257,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{matDescription}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"a6c11cfe-28cc-4b5c-de42-b53d2f5ebd5e","fieldName":"oColumnSiteRSCChangeOrderNum","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":258,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"rscChangeOrderNum","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e4aed085-4cf8-49f4-f78c-70ed6bb80a40","fieldName":"oInputSiteRSCChangeOrderNum","fieldParent":"a6c11cfe-28cc-4b5c-de42-b53d2f5ebd5e","fieldPos":259,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{rscChangeOrderNum}","script":"","translation":[]}]},{"fieldNo":"cfb61470-0658-426f-e1d7-1f5e66e65392","fieldName":"oColumnSiteBOMid","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":260,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"bomID","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"fd80beaf-14ac-4a87-f21e-1bc38cae2e84","fieldName":"oInputSiteBOMid","fieldParent":"cfb61470-0658-426f-e1d7-1f5e66e65392","fieldPos":261,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{bomID}","script":"","translation":[]}]},{"fieldNo":"fe11037c-1fc2-464a-9596-46e2bf2e5dff","fieldName":"oColumnSiteCreatedOn","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":262,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"createdAt","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e6afced2-2169-4510-f848-ed91c2ecd8a8","fieldName":"oDatePickerSiteCReatedONHeader","fieldParent":"fe11037c-1fc2-464a-9596-46e2bf2e5dff","fieldPos":263,"fieldType":"sap.m.DatePicker","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"dateValue","grouping":"Properties","value":"{createdAt}","script":"","translation":[]}]},{"fieldNo":"c9eb76df-b466-4a46-b444-09bec508a093","fieldName":"oColumnSiteCreatedBy","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":264,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"createdBy","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"d99370bd-e615-4568-a09c-b1d556d9c77d","fieldName":"oLabelSiteCreatedBYHeader","fieldParent":"c9eb76df-b466-4a46-b444-09bec508a093","fieldPos":265,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{createdBy}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"fed1ed29-d52d-4309-9bc8-823c9d6b0310","fieldName":"oColumnSiteChangedBy","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":266,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"updatedBy","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"71bd9450-1bd1-4e0b-b574-96380c1a59f9","fieldName":"oLabelSitechangedBYHeader","fieldParent":"fed1ed29-d52d-4309-9bc8-823c9d6b0310","fieldPos":267,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{updatedBy}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f60e34e3-d794-4316-c49b-f9d967a2bec0","fieldName":"oColumnSiteChangedOn","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":268,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"updatedAt","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e12cb61a-b138-46a3-b43c-5aadde5b4d2e","fieldName":"oDatePickerSitechangedOnHeader","fieldParent":"f60e34e3-d794-4316-c49b-f9d967a2bec0","fieldPos":269,"fieldType":"sap.m.DatePicker","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"dateValue","grouping":"Properties","value":"{updatedAt}","script":"","translation":[]}]},{"fieldNo":"4fe94e21-0e45-45e2-937a-4b79a8cd05cc","fieldName":"oColumnSiteapprovedBy","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":270,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"approvedBy","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"900d2810-0ef3-4a1b-eb03-68d60f68751a","fieldName":"oLabelSiteapprovedBYheader","fieldParent":"4fe94e21-0e45-45e2-937a-4b79a8cd05cc","fieldPos":271,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{approvedBy}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"cbcf1e77-93c4-4941-df49-6b5b862fde0a","fieldName":"oColumnSiteapprovedOn","fieldParent":"82900b2d-1217-40e3-c623-8e1e78c6fe2b","fieldPos":272,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"140px","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"approvedOn","script":"","translation":[]},{"attribute":"autoResizable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"6968fbf7-c249-48a6-94a9-8389289ca127","fieldName":"oLabelSiteapprovedONheader","fieldParent":"cbcf1e77-93c4-4941-df49-6b5b862fde0a","fieldPos":273,"fieldType":"sap.m.DatePicker","script":"","request":[],"response":[],"attributes":[{"attribute":"valueFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{approvedOn}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]}]},{"fieldNo":"c7c832eb-c317-4122-f3ed-e8465a8a32d3","fieldName":"oLabelSiteapprovedONheader","fieldParent":"cbcf1e77-93c4-4941-df49-6b5b862fde0a","fieldPos":274,"fieldType":"sap.m.Text","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{approvedOn}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"919cde29-8978-44cb-f891-63f0abf0e395","fieldName":"oPanelPTSiteBomItems","fieldParent":"13a0c17b-c8f1-4564-a31c-292e771a1672","fieldPos":275,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]},{"attribute":"expanded","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"11de85e4-d812-4a5e-f42c-851c32a2462f","fieldName":"siteComponentContent","fieldParent":"919cde29-8978-44cb-f891-63f0abf0e395","fieldPos":276,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Footer","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"c12cfcc5-e1e6-4017-d7db-5dbdd0f3843b","fieldName":"Left","fieldParent":"11de85e4-d812-4a5e-f42c-851c32a2462f","fieldPos":277,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"0a5235d4-0350-469d-a0c7-5310484eb907","fieldName":"oLabelSite42","fieldParent":"c12cfcc5-e1e6-4017-d7db-5dbdd0f3843b","fieldPos":278,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"custom_title","script":"","translation":[]}]},{"fieldNo":"e9dbb15a-adf3-4cdd-8ab9-cd46b9ea6617","fieldName":"Right","fieldParent":"11de85e4-d812-4a5e-f42c-851c32a2462f","fieldPos":279,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"0397c965-ccca-4761-8929-73f1cb8ecbfa","fieldName":"oVBoxSiteCompTable","fieldParent":"919cde29-8978-44cb-f891-63f0abf0e395","fieldPos":280,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"942148c9-b784-4264-c994-2cea69e8d687","fieldName":"oTableSiteComponent","fieldParent":"0397c965-ccca-4761-8929-73f1cb8ecbfa","fieldPos":281,"fieldType":"sap.ui.table.Table","script":"","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"8","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"7","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"6c9e59ae-38a1-4895-cb1c-4caa385e4fe9","fieldName":"oPanelSiteAdd","fieldParent":"919cde29-8978-44cb-f891-63f0abf0e395","fieldPos":282,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"filter_expand_panel","script":"","translation":[]},{"attribute":"expandable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"1bd295cd-c92d-4ee6-a440-2235e359a955","fieldName":"oBarContentPTAddSite","fieldParent":"6c9e59ae-38a1-4895-cb1c-4caa385e4fe9","fieldPos":283,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Footer","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"fef8af67-2c5c-4365-8841-75eb2f5393ab","fieldName":"Left","fieldParent":"1bd295cd-c92d-4ee6-a440-2235e359a955","fieldPos":284,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"ea9a9d2e-eaf2-481f-bb7f-3567760c3a63","fieldName":"oLabelSitePTSiteExtension","fieldParent":"fef8af67-2c5c-4365-8841-75eb2f5393ab","fieldPos":285,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"custom_title","script":"","translation":[]}]},{"fieldNo":"f3a2833e-8aab-4a9a-d577-c93e46da12ab","fieldName":"Right","fieldParent":"1bd295cd-c92d-4ee6-a440-2235e359a955","fieldPos":286,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"47de4120-3d08-4a03-a094-f5a84b998d18","fieldName":"oButtonAddNewPTSite","fieldParent":"f3a2833e-8aab-4a9a-d577-c93e46da12ab","fieldPos":287,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"\n//If the oTableAddSite model is undefined assiginig a model to it.\nif (oTableAddSite.getModel().getData().length === undefined) {\n    var oModelInput = new sap.ui.model.json.JSONModel();\n    oModelInput.setData([]);\n    oTableAddSite.setModel(oModelInput);\n}\n//tabLength : oTableAddSite length will be stored in it. based on it will add the rows to the table\ntabLength = oTableAddSite.getModel().getData().length;\n//if the oTableAddSite length is lesthan or equal to 1 then pushing the object to the table\nif (tabLength <= 1) {\n    oTableAddSite.getModel().getData().push({\n        \"id\": \"\",\n        \"bomID\": oTablePTSiteHeader.getModel().getData()[0].bomID,\n        \"verPTBom\": oTablePTSiteHeader.getModel().getData()[0].verPTBom,\n        \"rscSite\": \"\",\n        \"validStartDate\": new Date(),\n        \"validEndDate\": new Date(\"12/31/9999\"),\n        \"ptSiteBomStatus\": \"CREATED\",\n        \"ptBomOnHold\": false,\n        \"dummyID\": Math.floor(Math.random() * 1000000 + 1),\n        \"editable\": true, //date editing\n        \"siteFlag\" : true, //for the site editing\n        \"holdFlag\" : false, //for hold flag editing\n        \"valueState\": \"None\",\n        \"valueStateText\": \"\",\n        \"todayDate\": new Date()\n    });\n    oButtonFooterSaveSite.setEnabled(true);\n}else{\n    getDialog(lblNoNewSites.getText());\n}\n\n//setting the toatl number of records count to the Table title.\noTableAddSite.setTitle(lebTotal.getText()+\":\"+oTableAddSite.getModel().getData().length);\noTableAddSite.getModel().refresh();\n//after the table got binded making a settimeout function to bind the PT Site dropdown values with the below code\nsetTimeout(function() {\n    //making the loop throupgh out the table rows of the cell 3\n    oTableAddSite.getRows().forEach(row => {\n        var comboBox = row.getCells()[3];\n        comboBox.destroyItems();\n        // Changes as per sprint 7\n        /*\n        In PT Site Extension transaction, user should only able to select PT Site \n        from drop down list in which role he/she has logged in.\n        */\n        /*\n        if(user has access to AD group(site) || all site access){\n        only those site(s) shall be visible in the drop dwon to select the site in site extension\n            \n        }\n        */\n        if (mdlPtSiteAdGroups.getModel().getData().length > 0) {\n            var ptSiteAdGrpData = mdlPtSiteAdGroups.getModel().getData();\n            // var uniqueAdGroupsData = [...new Set(ptSiteAdGrpData.map(item => item.adGroup))];\n\n            const uniqueAdGroupsData = [...new Map(ptSiteAdGrpData.map(item => [item[\"adGroup\"], item])).values()];\n            uniqueAdGroupsData.forEach(adGrpLoc => {\n                modeloComboBoxSitePTSite.getData().forEach(data => {\n                    if ((data.location).includes(adGrpLoc.locationName)) {\n                        var loc = new sap.ui.core.Item({\n                            text: data.location,\n                            key: data.location,\n                        });\n                        //adding items to the comboBox\n                        comboBox.addItem(loc);\n                    }\n                });\n            });\n        } else {\n            // Do not do anything\n            oComboBoxSitePTSite.destroyItems();\n        }\n    });\n}, 300);","translation":[]}]},{"fieldNo":"ebf5653a-f199-4177-991d-17c7a64cd08c","fieldName":"oVBoxAddSite","fieldParent":"6c9e59ae-38a1-4895-cb1c-4caa385e4fe9","fieldPos":288,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"beb060b2-65eb-4ee1-e769-5ba75af10ba1","fieldName":"oTableAddSite","fieldParent":"ebf5653a-f199-4177-991d-17c7a64cd08c","fieldPos":289,"fieldType":"sap.ui.table.Table","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"4b5c5a26-b3cd-408e-fb84-9132a344c612","fieldName":"oColumnSiteActions","fieldParent":"beb060b2-65eb-4ee1-e769-5ba75af10ba1","fieldPos":290,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"f1dc251e-dae4-460c-beee-4c8a7d86ba79","fieldName":"oHBoxSiteActions","fieldParent":"4b5c5a26-b3cd-408e-fb84-9132a344c612","fieldPos":291,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"f0357fac-3d96-4909-ebc6-d7543e77da6b","fieldName":"oIconDeleteSite","fieldParent":"f1dc251e-dae4-460c-beee-4c8a7d86ba79","fieldPos":292,"fieldType":"sap.ui.core.Icon","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{=${id} === '' ? true: false}","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://delete","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.show(0);\nvar index = parseInt(oEvent.getSource().getBindingContext().sPath.split(\"/\")[1]);\nvar rowdata = oTableAddSite.getModel().getData()[index];\nvar keyValueArray = [];\n\nif (rowdata.id) {\n    sap.ui.core.BusyIndicator.hide();\n} else {\n    keyValueArray.push(rowdata.dummyID);\n    ModelData.Delete(oTableAddSite, \"dummyID\", keyValueArray[0], \"EQ\");\n\n    oTableAddSite.getModel().refresh();\n    oTableAddSite.setTitle(lebTotal.getText()+\":\"+oTableAddSite.getModel().getData().length );\n    // showMessageToast(oLabeldeleteSite.getText());\n    getDialog(oLabeldeleteSite.getText());\n\n    var buttonEditable = oTableAddSite.getModel().getData().find(function(data) {\n        if (data.ptSiteBomStatus === g_createStatusData[0].status) {\n            return true;\n        }\n    });\n\n    if (buttonEditable) {\n        oButtonFooterSubmitApproval.setEnabled(true);\n    } else {\n        oButtonFooterSave.setEnabled(false);\n        oButtonFooterSubmitApproval.setEnabled(false);\n    }\n    sap.ui.core.BusyIndicator.hide();\n}","translation":[]}]},{"fieldNo":"dfabd0de-9354-47e9-eed6-efda608f42aa","fieldName":"oColumnSiteBomId","fieldParent":"beb060b2-65eb-4ee1-e769-5ba75af10ba1","fieldPos":293,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"bomID","script":"","translation":[]}]},{"fieldNo":"437cfd22-44fc-43d9-fbd0-270b69937dbc","fieldName":"oTextSiteBomId","fieldParent":"dfabd0de-9354-47e9-eed6-efda608f42aa","fieldPos":294,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{bomID}","script":"","translation":[]}]},{"fieldNo":"fec396f0-ccb5-48c5-94f2-6573160d40f3","fieldName":"oColumnSiteVersion","fieldParent":"beb060b2-65eb-4ee1-e769-5ba75af10ba1","fieldPos":295,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"verPTBom","script":"","translation":[]}]},{"fieldNo":"3b5c29d4-8bf0-4301-fbaf-f5c51578aa82","fieldName":"oTextSiteVersion","fieldParent":"fec396f0-ccb5-48c5-94f2-6573160d40f3","fieldPos":296,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{verPTBom}","script":"","translation":[]}]},{"fieldNo":"f383ccb7-7b37-46f8-f613-8edc185dba40","fieldName":"oColumnSitePTSite","fieldParent":"beb060b2-65eb-4ee1-e769-5ba75af10ba1","fieldPos":297,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"rscSite","script":"","translation":[]}]},{"fieldNo":"82285d6c-b044-4bce-e377-d7fb7f0faa2a","fieldName":"oComboBoxSitePTSite1","fieldParent":"f383ccb7-7b37-46f8-f613-8edc185dba40","fieldPos":298,"fieldType":"sap.m.ComboBox","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{rscSite}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"selectedKey","grouping":"Properties","value":"{rscSite}","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{siteFlag}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"// var index  = parseInt(oEvent.getSource().getParent().getBindingContext().sPath.split('/')[1]);\n// var value = this.getValue();\n// oEvent.getSource().getParent().getModel().getData()[index].location = value;\n// oEvent.getSource().getParent().getModel().refresh();","translation":[]}]},{"fieldNo":"db37b95f-d90f-40b8-fb66-dccef1500288","fieldName":"rsc_PTSite1","fieldParent":"82285d6c-b044-4bce-e377-d7fb7f0faa2a","fieldPos":299,"fieldType":"sap.ui.core.Item","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{location}","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"{location}","script":"","translation":[]}]},{"fieldNo":"1473973b-631f-4f26-991b-0e05bffd59b3","fieldName":"oColumnSiteStartDate","fieldParent":"beb060b2-65eb-4ee1-e769-5ba75af10ba1","fieldPos":300,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"validStartDate","script":"","translation":[]}]},{"fieldNo":"44622c97-1061-4100-b8c2-8802571d28e5","fieldName":"oDatePickerSiteStartDate","fieldParent":"1473973b-631f-4f26-991b-0e05bffd59b3","fieldPos":301,"fieldType":"sap.m.DatePicker","script":"","request":[],"response":[],"attributes":[{"attribute":"valueStateText","grouping":"Properties","value":"{valueStateText}","script":"","translation":[]},{"attribute":"valueState","grouping":"Properties","value":"{valueState}","script":"","translation":[]},{"attribute":"valueFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"minDate","grouping":"Properties","value":"{todayDate}","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{editable}","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"dateValue","grouping":"Properties","value":"{validStartDate}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"var lineItemDate = \"\";\nvar endDateVal = new Date(oEvent.oSource.getBindingContext().getObject().validEndDate);\nif (!this.getDateValue()) {\n    this.setDateValue(new Date());\n}\n\nif (this.isValidValue()) {\n    if (this.getDateValue() > endDateVal) {\n        getDialog(oLabelafterToday.getText());\n        this.setDateValue(new Date());        \n        oEvent.getSource().getModel().refresh();\n    }\n    var selectedDate = this.getDateValue().getDate();\n    if (lineItemDate === \"\") {\n        lineItemDate = this.getDateValue();\n    }\n    var dbEffectiveDate = lineItemDate.getDate();\n    var todaysDate = new Date().getDate();\n    if ((selectedDate <= dbEffectiveDate && selectedDate < todaysDate)) {\n        getDialog(oLabelafterToday.getText())\n        this.setDateValue(lineItemDate);\n        oEvent.getSource().getModel().refresh();\n    } else if (selectedDate > dbEffectiveDate && selectedDate <= todaysDate) {\n        this.setDateValue(this.getDateValue());\n        oEvent.getSource().getModel().refresh();\n    } else if (selectedDate >= todaysDate) {\n        this.setDateValue(this.getDateValue());\n        oEvent.getSource().getModel().refresh();\n    }\n    lineItemDate = \"\";\n} else {\n    getDialog(oLabelinvalidDate.getText());\n    this.setValue(printDateString(this.getDateValue()));\n    this.setDateValue(this.getDateValue());\n    oEvent.getSource().getModel().refresh();\n}\n\noTableAddSite.getModel().refresh();","translation":[]}]},{"fieldNo":"e43c962b-66fc-48c7-a4a2-27a61c19eed0","fieldName":"oColumnSiteEndDate","fieldParent":"beb060b2-65eb-4ee1-e769-5ba75af10ba1","fieldPos":302,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"validEndDate","script":"","translation":[]}]},{"fieldNo":"ee19157a-40a3-4a6e-aa9d-c86e1de1e056","fieldName":"oDatePickerSiteEndDate","fieldParent":"e43c962b-66fc-48c7-a4a2-27a61c19eed0","fieldPos":303,"fieldType":"sap.m.DatePicker","script":"","request":[],"response":[],"attributes":[{"attribute":"valueFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"input_class_new","script":"","translation":[]},{"attribute":"minDate","grouping":"Properties","value":"{todayDate}","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{editable}","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MMM dd, YYYY","script":"","translation":[]},{"attribute":"dateValue","grouping":"Properties","value":"{validEndDate}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"var startDateVal = new Date(oEvent.oSource.getBindingContext().getObject().validStartDate);\nvar current = new Date();\ncurrentHours = current.getHours();\ncurrentMinutes = current.getMinutes();\ncurrentSeconds = current.getSeconds();\nif (!this.getDateValue()) {\n    this.setDateValue(new Date(9999, 11, 31, currentHours, currentMinutes, currentSeconds)); //this.getDateValue()); //        \n}\nif (this.isValidValue()) {\n    if (this.getDateValue() < startDateVal) {\n        getDialog(oLabeldatePrior.getText())\n        this.setDateValue(new Date(9999, 11, 31, currentHours, currentMinutes, currentSeconds)); //this.getDateValue()); //        \n        oEvent.getSource().getModel().refresh();\n    }\n} else {\n    getDialog(oLabelinvalidDate.getText())\n    this.setValue(printDateString(this.getDateValue()));\n    this.setDateValue(this.getDateValue());\n    oEvent.getSource().getModel().refresh();\n}\n\nif (this.isValidValue()) {\n    if (this.getDateValue() < startDateVal) {\n        getDialog(oLabeldatePrior.getText())\n        this.setDateValue(new Date(9999, 11, 31, currentHours, currentMinutes, currentSeconds)); //this.getDateValue()); //        \n        oEvent.getSource().getModel().refresh();\n    }\n\n} else {\n    getDialog(oLabelinvalidDate.getText());\n    this.setValue(printDateString(this.getDateValue()));\n    this.setDateValue(this.getDateValue());\n    oEvent.getSource().getModel().refresh();\n}","translation":[]}]},{"fieldNo":"da495048-24e1-4e69-f46f-ab30c4d1880a","fieldName":"oColumnSiteStatus","fieldParent":"beb060b2-65eb-4ee1-e769-5ba75af10ba1","fieldPos":304,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"ptSiteBomStatus","script":"","translation":[]}]},{"fieldNo":"55d8915e-1b92-4baf-961b-774ad5d56cf6","fieldName":"oTextSiteStatus","fieldParent":"da495048-24e1-4e69-f46f-ab30c4d1880a","fieldPos":305,"fieldType":"sap.m.Text","script":"","request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{ptSiteBomStatus}","script":"","translation":[]}]},{"fieldNo":"73896796-f72f-4af6-8428-8dc77e898f64","fieldName":"oColumnSiteHold","fieldParent":"beb060b2-65eb-4ee1-e769-5ba75af10ba1","fieldPos":306,"fieldType":"sap.ui.table.Column","script":"","request":[],"response":[],"attributes":[{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"ptBomOnHold","script":"","translation":[]}]},{"fieldNo":"5cfd6edc-35d4-4ba9-d0ea-ce15de2881eb","fieldName":"oCheckBoxSiteHold","fieldParent":"73896796-f72f-4af6-8428-8dc77e898f64","fieldPos":307,"fieldType":"sap.m.CheckBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"checkBox","script":"","translation":[]},{"attribute":"selected","grouping":"Properties","value":"{ptBomOnHold}","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{holdFlag}","script":"","translation":[]}]},{"fieldNo":"791f9bc5-cb61-4b46-d6c2-6b6b0ec2dd79","fieldName":"oMessagePageEmpty","fieldParent":"d238ec7e-bc49-448b-8a3e-6d9fb725e83e","fieldPos":308,"fieldType":"sap.m.MessagePage","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"showHeader","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"bb8ad8a0-4f54-49ad-90e6-72a118854cf5","fieldName":"oBarFooter","fieldParent":"d238ec7e-bc49-448b-8a3e-6d9fb725e83e","fieldPos":309,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"footerClass","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setFooter","script":"","translation":[]}]},{"fieldNo":"84f52a77-7cc3-42bf-d874-5827ffc86f8a","fieldName":"Left","fieldParent":"bb8ad8a0-4f54-49ad-90e6-72a118854cf5","fieldPos":310,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"2612c0ca-d0f7-4f4a-d62b-7cd2946a4e3d","fieldName":"oButtonFooterCancel","fieldParent":"84f52a77-7cc3-42bf-d874-5827ffc86f8a","fieldPos":311,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n    g_change_detact = false;\n    oBarFooter.setVisible(false);\n    ptSiteIconTabBar.setExpanded(true);\n    oPanelSiteHeaderCommon.setExpanded(false);\n    oButtonFooterSubmitApproval.setEnabled(false);\n    if (ptSiteIconTabBar.getSelectedKey() === \"site_display\") {\n        if (chkSiteBOMComponent.getSelected() === true) {\n            oIconSitepdf.setVisible(false);\n        } else {\n            oIconSitepdf.setVisible(true);\n        }\n        oIconSiteexcel.setVisible(true);\n    }else{\n        oIconSitepdf.setVisible(false);\n        oIconSiteexcel.setVisible(false);\n    }\n    \n} else {\n\n    if (oIconTabBar.getSelectedKey() === g_display_tab || oIconTabBar.getSelectedKey() === g_change_tab) {\n        if (g_change_detact) {\n            g_button_detact = \"cancel\";\n            dialog_back.open()\n        } else {\n            cancelBtnActions()\n            oIconpdf.setVisible(false);\n            oIconexcel.setVisible(false);\n            dialog_back.close();\n        }\n\n    } else if (oIconTabBar.getSelectedKey() === g_create_tab) {\n        // Cancel button to work as reset\n        clearFilter();\n        window.localStorage.lockedEntry = \"\"\n        //clear the user lock only on create on the current button press\n        removeLock(g_activeLockRecord);\n    } else if (oIconTabBar.getSelectedKey() === g_site_tab) {\n        oButtonSiteExtension.firePress();\n        oPanelPTBomItems.setVisible(false);\n        oPanelPTHeader.setVisible(false);\n        oBar.setVisible(false);\n    }\n    //   oTableComponent.setVisible(false);\n}","translation":[]}]},{"fieldNo":"edcc5446-d668-4c01-b77d-a56e27b88f51","fieldName":"Right","fieldParent":"bb8ad8a0-4f54-49ad-90e6-72a118854cf5","fieldPos":312,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"f69dbeb2-cb4b-4ec3-b2d7-ae2e297ebc39","fieldName":"oButtonFooterSave","fieldParent":"edcc5446-d668-4c01-b77d-a56e27b88f51","fieldPos":313,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":" if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n     // Checking if Data is presnt in the SiteExtention Table, only then check duplicates, if not present allow to save\n     if (oTableAddSite.getModel().getData().length > 0) {\n         // Checking if duplicate sites are entered\n         if (oTableAddSite.getModel().getData().length > 1) {\n             for (var i = 0; i < oTableAddSite.getModel().getData().length; i++) {\n                 data = oTableAddSite.getModel().getData()[i];\n                 for (var j = i + 1; j < oTableAddSite.getModel().getData().length; j++) {\n                     if (oTableAddSite.getModel().getData()[j][\"rscSite\"] === data[\"rscSite\"]) {\n                         getDialog(lblduplicateSites.getText());\n\n                     } else {\n                         saveSiteData();\n                     }\n                 }\n             }\n         } else {\n             saveSiteData();\n         }\n     } else {\n         getDialog(lblNoSites.getText())\n\n     }\n\n } else {\n     dialog_save.open();\n\n }","translation":[]}]},{"fieldNo":"334f5b9e-7cf3-456e-fdc3-2c053b3786df","fieldName":"oButtonFooterSubmitApproval","fieldParent":"edcc5446-d668-4c01-b77d-a56e27b88f51","fieldPos":314,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"greenbtn ","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"// In GLOBAL Only Check if any component status is not in effective/ approved status then open dialog showing the components\n// In SITE Extension directly go for submit for approval\n\nif (oIconTabBarPTBOM.getSelectedKey() === \"GLOBAL\") {\n    var approved_status = oTableComponent.getModel().getData();\n    var compApproved = approved_status.filter(data => {\n        return (data.componentStatus != g_effectiveStatusData[0].status && data.componentStatus != g_approveStatusData[0].status)\n    });\n    oLabelPendingComp.setVisible(true);\n    oLabelPendingCompSite.setVisible(false);\n    oButtonPendingCompYes.setVisible(true);\n    oTextPendingComponents.setVisible(true);\n\n    // if even one component is present, show message else allow submit for approval dialog to open\n    if (compApproved.length > 0) {\n        // bind the table with the oTableComponent data and then open the dialog \n        var itemData = oTableComponent.getModel().getData();\n        compApproved.forEach((item, i) => {\n            item.itemNo = i + 1;\n        });\n        oTablePendingComp.removeAllColumns();\n        oTablePendingComp.addColumn(new sap.ui.table.Column({\n            width: \"4rem\",\n            label: new sap.m.Label({\n                text: lblserialNO.getText()\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Label({\n                text: \"{itemNo}\",\n            }).addStyleClass(\"input_class_new\"),\n            hAlign: \"Center\",\n            filterProperty: \"itemNo\"\n\n        }));\n        oTablePendingComp.addColumn(new sap.ui.table.Column({\n            width: \"8rem\",\n            label: new sap.m.Label({\n                text: lblCompType.getText(),\n                wrapping: true,\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Label({\n                text: \"{componentType}\"\n            }),\n\n            hAlign: \"Center\",\n            filterProperty: \"componentType\",\n            sortProperty: \"componentType\",\n        }));\n\n        oTablePendingComp.addColumn(new sap.ui.table.Column({\n            width: \"8rem\",\n            label: new sap.m.Label({\n                text: lblCompContrlNum.getText(),\n                wrapping: true,\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Label({\n                text: \"{component}\"\n            }),\n\n            hAlign: \"Center\",\n            filterProperty: \"component\",\n            sortProperty: \"component\",\n        }));\n        oTablePendingComp.addColumn(new sap.ui.table.Column({\n            width: \"4rem\",\n            label: new sap.m.Label({\n                text: lblRevision.getText()\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Label({\n                text: \"{revision}\",\n            }),\n            hAlign: \"Center\",\n            filterProperty: \"revision\",\n            sortProperty: \"revision\",\n        }));\n        oTablePendingComp.addColumn(new sap.ui.table.Column({\n            width: \"10rem\",\n            label: new sap.m.Label({\n                text: lblStatus.getText()\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Label({\n                text: \"{componentStatus}\",\n            }),\n            hAlign: \"Center\",\n            filterProperty: \"componentStatus\"\n\n        }));\n        var oModel = new sap.ui.model.json.JSONModel();\n        oModel.setData(compApproved);\n        oTablePendingComp.setModel(oModel);\n\n        oTablePendingComp.bindRows(\"/\");\n\n        oTablePendingComp.setTitle(\"Total (\" + oTablePendingComp.getModel().getData().length + \")\");\n        oTablePendingComp.setVisibleRowCount(oTablePendingComp.getModel().getData().length);\n\n        diaPendingComp.open();\n\n    } else {\n        // open submit for approval dialog\n        diaSubmit.open();\n    }\n} else if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n    oButtonPendingCompYes.setVisible(false);\n    oTextPendingComponents.setVisible(false);\n\n    diaSubmit.open();\n}","translation":[]}]},{"fieldNo":"452d1e04-fe82-45e3-f548-3ad71a5644ef","fieldName":"oButtonFooterSaveSite","fieldParent":"edcc5446-d668-4c01-b77d-a56e27b88f51","fieldPos":315,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n    var siteData = oTableAddSite.getModel().getData();\n    var siteExistFlag = true;\n    for (var i = 0; i < siteData.length; i++) {\n        if (siteData[i].rscSite === \"\") {\n            siteExistFlag = false;\n        } \n          }\n    if (!siteExistFlag) {\n        getDialog(\"You did not select any site from drop down\");\n        return;\n    }\n    //   Checking if Data is presnt in the SiteExtention Table, only then check duplicates, if not present allow to save\n    if (oTableAddSite.getModel().getData().length > 0) {\n        // Checking if duplicate sites are entered\n        if (oTableAddSite.getModel().getData().length > 1) {\n            for (var i = 0; i < oTableAddSite.getModel().getData().length; i++) {\n                data = oTableAddSite.getModel().getData()[i];\n                for (var j = i + 1; j < oTableAddSite.getModel().getData().length; j++) {\n                    if (oTableAddSite.getModel().getData()[j][\"rscSite\"] === data[\"rscSite\"]) {\n                        getDialog(lblduplicateSites.getText());\n                    } else {\n                        saveSiteData();\n                    }\n                }\n            }\n        } else {\n            saveSiteData();\n        }\n    } else {\n        getDialog(lblNoNewSites.getText());\n    }\n\n} else {\n\n    /*\n        Checking for the duplicate values while saving\n        if no duplicates present, then check if any component is in approved status\n        if present, show message and do not save else open dialog for saving bom\n    */\n    var duplicate = false;\n    for (var j = 0; j < oTableComponent.getModel().getData().length; j++) {\n        for (var k = j + 1; k < oTableComponent.getModel().getData().length; k++) {\n            if (oTableComponent.getModel().getData()[j].componentType === oTableComponent.getModel().getData()[k].componentType && oTableComponent.getModel().getData()[j].component === oTableComponent.getModel().getData()[k].component) {\n                if (oTableComponent.getModel().getData()[j].checkSource) {\n                    if (oTableComponent.getModel().getData()[j].revision === oTableComponent.getModel().getData()[k].revision) {\n                        getDialog(oLabelFileUploadedSuccess.getText());\n                        duplicate = true;\n                        break;\n                    } else {\n                        // do nothing\n                    }\n                } else {\n                    getDialog(oLabelCombinationExists.getText());\n                    duplicate = true;\n                    break;\n                }\n            }\n        }\n    }\n\n    // if duplicate\n    if (duplicate) {\n        getDialog(oLabelCombinationExists.getText());\n    } else {\n        dialog_save.open();\n    }\n\n}","translation":[]}]},{"fieldNo":"dde055eb-51c5-4e25-ea31-2c5413df801c","fieldName":"oButtonFooterSubmitApprovalSite","fieldParent":"edcc5446-d668-4c01-b77d-a56e27b88f51","fieldPos":316,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"greenbtn ","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"// In GLOBAL Only Check if any component status is not in effective/ approved status then open dialog showing the components\n// In SITE Extension directly go for submit for approval\n\nif (oIconTabBarPTBOM.getSelectedKey() === \"GLOBAL\") {\n    var approved_status = oTableComponent.getModel().getData();\n    var compApproved = approved_status.filter(data => {\n        return (data.componentStatus != g_effectiveStatusData[0].status && data.componentStatus != g_approveStatusData[0].status)\n    });\n\n    oLabelPendingComp.setVisible(true);\n    oLabelPendingCompSite.setVisible(false);\n    oButtonPendingCompYes.setVisible(true);\n    oTextPendingComponents.setVisible(true);\n\n    // if even one component is present, show message else allow submit for approval dialog to open\n    if (compApproved.length > 0) {\n        // bind the table with the oTableComponent data and then open the dialog \n        var itemData = oTableComponent.getModel().getData();\n        compApproved.forEach((item, i) => {\n            item.itemNo = i + 1;\n        });\n        oTablePendingComp.removeAllColumns();\n        oTablePendingComp.addColumn(new sap.ui.table.Column({\n            width: \"4rem\",\n            label: new sap.m.Label({\n                text: lblserialNO.getText()\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Label({\n                text: \"{itemNo}\",\n            }).addStyleClass(\"input_class_new\"),\n            hAlign: \"Center\",\n            filterProperty: \"itemNo\"\n\n        }));\n        oTablePendingComp.addColumn(new sap.ui.table.Column({\n            width: \"8rem\",\n            label: new sap.m.Label({\n                text: lblCompType.getText(),\n                wrapping: true,\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Label({\n                text: \"{componentType}\"\n            }),\n\n            hAlign: \"Center\",\n            filterProperty: \"componentType\",\n            sortProperty: \"componentType\",\n        }));\n\n        oTablePendingComp.addColumn(new sap.ui.table.Column({\n            width: \"8rem\",\n            label: new sap.m.Label({\n                text: lblCompContrlNum.getText(),\n                wrapping: true,\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Label({\n                text: \"{component}\"\n            }),\n\n            hAlign: \"Center\",\n            filterProperty: \"component\",\n            sortProperty: \"component\",\n        }));\n        oTablePendingComp.addColumn(new sap.ui.table.Column({\n            width: \"4rem\",\n            label: new sap.m.Label({\n                text: lblRevision.getText()\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Label({\n                text: \"{revision}\",\n            }),\n            hAlign: \"Center\",\n            filterProperty: \"revision\",\n            sortProperty: \"revision\",\n        }));\n        oTablePendingComp.addColumn(new sap.ui.table.Column({\n            width: \"10rem\",\n            label: new sap.m.Label({\n                text: lblStatus.getText()\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Label({\n                text: \"{componentStatus}\",\n            }),\n            hAlign: \"Center\",\n            filterProperty: \"componentStatus\"\n\n        }));\n        var oModel = new sap.ui.model.json.JSONModel();\n        oModel.setData(compApproved);\n        oTablePendingComp.setModel(oModel);\n\n        oTablePendingComp.bindRows(\"/\");\n\n        oTablePendingComp.setTitle(\"Total (\" + oTablePendingComp.getModel().getData().length + \")\");\n        diaPendingComp.open();\n    } else {\n        // open submit for approval dialog\n        diaSubmit.open();\n    }\n} else if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n        sap.ui.core.BusyIndicator.show();\n\n    oButtonPendingCompYes.setVisible(false);\n    oTextPendingComponents.setVisible(false);\n    if (ptSiteIconTabBar.getSelectedKey() === \"site_change\") {\n        var itemData = oTableSiteComponent.getModel().getData();\n        var headerData = oTablePTSiteHeader.getModel().getData();\n\n        var options = {\n            data: {\n                action: \"CHANGE\",\n                itemData,\n                headerData\n            }\n        };\n\n        apipost_ptSite_submit_validation(options);\n    } else {\n        var headerData = oTablePTSiteHeader.getModel().getData();\n        var itemData = oTableSiteComponent.getModel().getData();\n        var siteHeaderData = oTableAddSite.getModel().getData();\n        var options = {\n            data: {\n                action: \"CREATE\",\n                itemData,\n                headerData,\n                siteHeaderData\n            }\n\n        };\n\n        apipost_ptSite_submit_validation(options);\n\n    }\n}","translation":[]}]},{"fieldNo":"110d13f4-7bd8-415d-a66e-a57cd2295560","fieldName":"PTSiteExtension","fieldParent":99999,"fieldPos":317,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"f773a1d6-7ce2-470d-e8ac-179907068fe7","fieldName":"API","fieldParent":"110d13f4-7bd8-415d-a66e-a57cd2295560","fieldPos":318,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"c49879e1-42cd-4d14-da75-c29872613e42","fieldName":"post_ptSite_submit_validation","fieldParent":"f773a1d6-7ce2-470d-e8ac-179907068fe7","fieldPos":319,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"38134195-2619-4018-c99a-1a983ae7296e","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"    sap.ui.core.BusyIndicator.hide();\n\nif (xhr.responseJSON.msgCode === 1) {\n    buildComponentTable(xhr.responseJSON.siteItems)\n    // bind the table with the oTableComponent data and then open the dialog \n    var compApproved = xhr.responseJSON.notEffectiveData;\n    compApproved.forEach((item, i) => {\n        item.itemNo = i + 1;\n    });\n    oLabelPendingComp.setVisible(false);\n    oLabelPendingCompSite.setVisible(true);\n    oTablePendingComp.removeAllColumns();\n    oTablePendingComp.addColumn(new sap.ui.table.Column({\n        width: \"4rem\",\n        label: new sap.m.Label({\n            text: lblserialNO.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Label({\n            text: \"{itemNo}\",\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"itemNo\"\n\n    }));\n    oTablePendingComp.addColumn(new sap.ui.table.Column({\n        width: \"8rem\",\n        label: new sap.m.Label({\n            text: lblCompType.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Label({\n            text: \"{componentType}\"\n        }),\n\n        hAlign: \"Center\",\n        filterProperty: \"componentType\",\n        sortProperty: \"componentType\",\n    }));\n\n    oTablePendingComp.addColumn(new sap.ui.table.Column({\n        width: \"8rem\",\n        label: new sap.m.Label({\n            text: lblCompContrlNum.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Label({\n            text: \"{component}\"\n        }),\n\n        hAlign: \"Center\",\n        filterProperty: \"component\",\n        sortProperty: \"component\",\n    }));\n    oTablePendingComp.addColumn(new sap.ui.table.Column({\n        width: \"4rem\",\n        label: new sap.m.Label({\n            text: lblRevision.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Label({\n            text: \"{revision}\",\n        }),\n        hAlign: \"Center\",\n        filterProperty: \"revision\",\n        sortProperty: \"revision\",\n    }));\n    oTablePendingComp.addColumn(new sap.ui.table.Column({\n        width: \"10rem\",\n        label: new sap.m.Label({\n            text: lblStatus.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Label({\n            text: \"{componentStatus}\",\n        }),\n        hAlign: \"Center\",\n        filterProperty: \"componentStatus\"\n\n    }));\n    var oModel = new sap.ui.model.json.JSONModel();\n    oModel.setData(compApproved);\n    oTablePendingComp.setModel(oModel);\n\n    oTablePendingComp.bindRows(\"/\");\n\n    oTablePendingComp.setTitle(\"Total (\" + oTablePendingComp.getModel().getData().length + \")\");\n    diaPendingComp.open();\n} else {\n    //else binding APPROVED and EFFECTIVE components data \n    buildComponentTable(xhr.responseJSON.siteItems)\n    diaSubmit.open();\n\n}","translation":[]}]},{"fieldNo":"9b3d836b-cdd3-449b-8c34-64a3775518aa","fieldName":"getSiteData","fieldParent":"f773a1d6-7ce2-470d-e8ac-179907068fe7","fieldPos":320,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"626633eb-c6d9-40de-d70a-e66e5a601c2d","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"\nvar XHR = xhr.responseJSON;\n\nvar pbObj = {\n    productNum: comboBoxSiteProduct.getValue(),\n    variant: cmboSiteVariant.getValue(),\n    shipToCountry: oComboBoxSiteCountry.getValue()\n}\noButtonFooterCancel.setVisible(true);\n//pass the response to render it onto the UI if record not locked bt loggedin user\ncheckLock(pbObj, xhr.responseJSON);","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status);","translation":[]}]},{"fieldNo":"faf9082f-0310-4b2a-b6c5-ac8e339b298c","fieldName":"JS","fieldParent":"110d13f4-7bd8-415d-a66e-a57cd2295560","fieldPos":321,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"f78356b3-a69e-4b2b-8460-c6b49fca9a0e","fieldName":"PtSiteFunction","fieldParent":"faf9082f-0310-4b2a-b6c5-ac8e339b298c","fieldPos":322,"fieldType":"neptune.Script","script":"/*Starting the validation with flags which we get from the script success\nwe check if user is creating the dtaa or changing or viewing the data depnding on the flag we \nbuild the UI.*/\nfunction ptSiteResponseValidation(XHR) {\n    sap.ui.core.BusyIndicator.hide();\n    /*The flag create_data will call when user search for pt site extention*/\n    if (XHR.flag === \"create_data\") {\n        /*if there is data it go and build the data in table.\n        this will go in two places this condition givs us two set of data \n        one is from pt bom header one is from pt site header if both data is \n        empty then its go to else part*/\n        if (XHR.headerData) {\n            var oTable = XHR.create ? oTableSiteExtensionPTBOM : oTableChangePTBOMSite;\n            ptSiteIconTabBar.setVisible(true);\n            ptSiteIconTabBar.setExpanded(true);\n            buildSearchTableData(XHR.headerData, oTable);\n        } else {\n            /*here its check what message to show depending on msgCode\n            if msgCode is 1 then it show no data found this basicaly show for change mode. else \n            it show pt bom is not approved.\n            */\n            if (XHR.msgCode === 1) {\n                getDialog(oLabelsiteNotFound.getText());\n            } else if (XHR.msgCode === 2) {\n                getDialog(oLabelSiteNotApproved.getText());\n            }\n            ptSiteIconTabBar.setVisible(false);\n            ptSiteIconTabBar.setExpanded(false);\n        }\n    }\n    /*This inner_data will call when user click on pencil icon on pt site extention as well as change mode.*/\n    else if (XHR.flag === \"inner_data\") {\n\n        if (ptSiteIconTabBar.getSelectedKey() === \"site\") {\n            oPanelSiteAdd.setExpanded(true);\n            oPanelPTSiteHeader.setExpanded(true);\n            oColumnSiteBOMStatusGlobal.setVisible(false);\n            oColumnSiteonHold.setVisible(false);\n            sap.ui.core.BusyIndicator.hide(0);\n            oButtonFooterSaveSite.setVisible(true);\n            // Added to make Start and end dates as visible false in the create mode of site Extension\n            oColumnSiteStartDateHeader.setVisible(false);\n            oColumnSiteEndDateHeader.setVisible(false);\n            // Added\n            oButtonFooterSubmitApprovalSite.setVisible(true);\n        } else {\n            if (ptSiteIconTabBar.getSelectedKey() === \"site_display\") {\n                oButtonFooterSaveSite.setVisible(false);\n                oButtonFooterSubmitApprovalSite.setVisible(false);\n                XHR.response.rsc_ptbom_header[0].holdFlag = false;\n\n            } else {\n\n                oColumnSiteptSIte.setVisible(true);\n                oColumnSiteStartDateHeader.setVisible(true);\n                oColumnSiteEndDateHeader.setVisible(true);\n                oColumnSiteBOMStatusGlobal.setVisible(true);\n                oColumnSiteonHold.setVisible(true);\n                oButtonFooterSubmitApprovalSite.setEnabled(true);\n            }\n            oPanelSiteAdd.setExpanded(false);\n            oPanelPTSiteHeader.setExpanded(true);\n            sap.ui.core.BusyIndicator.hide(0);\n        }\n        showPTSiteData(XHR.response);\n    }\n    /*This will call when user save something in pt site extention*/\n    else if (XHR.flag === \"save_update_data\") {\n        getDialog(lblsiteDetailsSaved.getText())\n        oButtonFooterSubmitApprovalSite.setEnabled(true);\n        // PTSITE status based editablility for the fields\n        XHR.rsc_ptbom_site_header.forEach(item => {\n            if (item.ptSiteBomStatus === g_createStatusData[0].status) {\n                item.editable = true;\n                item.siteFlag = false;\n                item.holdFlag = false;\n                item.deleteFlag = false;\n                item.validStartDate = new Date(Number(item.validStartDate));\n                item.validEndDate = new Date(Number(item.validEndDate));\n\n            } else if (item.ptSiteBomStatus === g_approveStatusData[0].status ||\n                item.ptSiteBomStatus === g_effectiveStatusData[0].status) {\n                item.editable = true;\n                item.siteFlag = false;\n                item.holdFlag = true;\n                item.deleteFlag = false;\n                item.validStartDate = new Date(Number(item.validStartDate));\n                item.validEndDate = new Date(Number(item.validEndDate));\n            } else if (item.ptSiteBomStatus === g_submitForApprovalStatusData[0].status ||\n                item.ptSiteBomStatus === \"OBSOLETE\") {\n                item.editable = false;\n                item.siteFlag = false;\n                item.holdFlag = false;\n                item.deleteFlag = false;\n                item.validStartDate = new Date(Number(item.validStartDate));\n                item.validEndDate = new Date(Number(item.validEndDate));\n            }\n        });\n        oTableAddSite.getModel().setData(XHR.rsc_ptbom_site_header);\n        oTableAddSite.getModel().refresh();\n\n        sap.ui.core.BusyIndicator.hide(0);\n    }\n}\n\n/*This function will clear all fields when click on reset in pt site extention*/\nfunction resetPTSite() {\n    g_change_detact = false;\n    for (var i = 0; i < oGridSite.mAggregations.items.length - 1; i++) {\n        var view = oGridSite.mAggregations.items[i].mAggregations.items[1];\n        view.setSelectedKey(null);\n        view.setValue(\"\")\n        view.setValueState(\"None\");\n    }\n    oButtonFooterCancel.setVisible(false);\n    btnSiteExtension.setEnabled(true);\n    btnSiteChange.setEnabled(true);\n    btnSiteView.setEnabled(true);\n    btnSiteView.setVisible(true);\n    btnSiteDisplay.setVisible(false);\n    oButtonFooterSubmitApprovalSite.setEnabled(false);\n    ptSiteIconTabBar.setExpanded(false);\n    oPanelSiteHeaderCommon.setExpanded(false);\n    lblSiteProductNumber.setRequired(true);\n    oLabelSiteDestination.setRequired(true);\n    oVBoxSiteVariant.setVisible(true);\n    oVBoxSiteComponent.setVisible(false);\n    oVBoxSiteRev.setVisible(false);\n    oVBoxSitePTSite.setVisible(false);\n    oVBoxSitePTSiteStatus.setVisible(false);\n    oVBoxSiteBOMComponent.setVisible(false);\n    oIconSitepdf.setVisible(false);\n    oIconSiteexcel.setVisible(false);\n}\n/*Checking the validation for mandatory fields*/\nfunction validateRequiredFieldSite(flag) {\n    if (flag === undefined) {\n        flag = false;\n    }\n    for (var i = 0; i < oGridSite.mAggregations.items.length - 1; i++) {\n        if (oGridSite.mAggregations.items[i].mAggregations.items[0].getRequired()) {\n            if (\n                oGridSite.mAggregations.items[i].mAggregations.items[1].getValue() === \"\") {\n                flag = true;\n                oGridSite.mAggregations.items[i].mAggregations.items[1].setValueState(\"Error\");\n            } else {\n                oGridSite.mAggregations.items[i].mAggregations.items[1].setValueState(\"None\");\n            }\n        }\n    }\n\n    return flag;\n}\n/*Checking the validation for site display checking if user atleast have any field or not.*/\nfunction validateEmptyFieldForDisplaySite(flag) {\n    if (flag === undefined) {\n        flag = false;\n    }\n    for (var i = 0; i < oGridSite.mAggregations.items.length - 1; i++) {\n        if (\n            oGridSite.mAggregations.items[i].mAggregations.items[1].getValue() !== \"\") {\n            flag = true;\n            return flag;\n        }\n    }\n    return flag;\n}\n\n/*Building the table for site and change mode */\nfunction buildSearchTableData(data, oTable) {\n\n    oTable.removeAllColumns();\n    var iconItem = [];\n    iconItem.push(new sap.ui.core.Icon({\n        press: function(oEvent) {\n            var rowIndex = parseInt(oEvent.getSource().getBindingContext().sPath.split(\"/\")[1]);\n            var data = oEvent.getSource().getModel().getData()[rowIndex];\n            sap.ui.core.BusyIndicator.show();\n            g_change_detact = true;\n            if (ptSiteIconTabBar.getSelectedKey() === \"site\") {\n\n                var options = {\n                    data: {\n                        searchdata: {\n                            bomID: data.bomID,\n                            verPTBom: data.verPTBom,\n                        },\n                        setting: {\n                            flag: \"inner_data\"\n                        }\n                    }\n                };\n                apigetSiteData(options);\n            } else if (ptSiteIconTabBar.getSelectedKey() === \"site_change\") {\n\n                var options = {\n                    data: {\n                        searchdata: {\n                            bomID: data.bomID,\n                            verPTBom: data.verPTBom,\n                            rscSite: data.rscSite\n                        },\n                        setting: {\n                            flag: \"inner_data\"\n                        }\n                    }\n                };\n                apigetSiteData(options);\n            }\n        }\n    }).bindProperty(\"src\", {\n        parts: [\"ptSiteBomStatus\"],\n        formatter: function(ptSiteBomStatus) {\n            if (ptSiteBomStatus !== undefined || ptSiteBomStatus !== null || ptSiteBomStatus !== \"\") {\n                if (ptSiteIconTabBar.getSelectedKey() === \"site\") {\n                    return \"sap-icon://edit\";\n                } else {\n                    //---------START----------\n                    /*JIRA: AFSR-5887\n                     *Bug : PT Site Extension Change Screen shows View Green Circle Button not Edit\n                     *Update By: Suman Dey\n                     *Update on : 06/06/2021\n                     */\n                    if (ptSiteBomStatus === g_submitForApprovalStatusData[0].status) {\n                        return \"sap-icon://fa-regular/eye\";\n                    } else {\n                        return \"sap-icon://edit\";\n                    }\n                    //---------END----------\n                }\n            }\n        }\n    }).addStyleClass(\"greenicon sapUiTinyMarginTop\"));\n\n    oTable.addColumn(new sap.ui.table.Column({\n        width: \"67px\",\n        label: new sap.m.Label({\n            text: lblaction.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.HBox({\n            items: iconItem\n        }),\n    }));\n\n    oTable.addColumn(new sap.ui.table.Column({\n        width: \"6rem\",\n        label: new sap.m.Label({\n            text: lblVersion.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n            text: \"{verPTBom}\"\n        }),\n        hAlign: \"Center\",\n        filterProperty: \"verPTBom\",\n        sortProperty: \"verPTBom\",\n    }));\n\n    oTable.addColumn(new sap.ui.table.Column({\n        width: \"180px\",\n        label: new sap.m.Label({\n            text: \"PT BOM Global Status\",\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.HBox({\n                justifyContent: \"Center\",\n                width: \"100%\"\n            })\n            .addItem(new sap.m.Text({\n                    text: \"{ptBomStatus}\"\n                })\n                .addStyleClass('sapUiTinyMarginBegin')),\n        hAlign: \"Center\",\n        filterProperty: \"ptBomStatus\",\n        sortProperty: \"ptBomStatus\",\n    }));\n\n    if (ptSiteIconTabBar.getSelectedKey() === \"site_change\") {\n        oTable.addColumn(new sap.ui.table.Column({\n            width: \"180px\",\n            label: new sap.m.Label({\n                text: \"PT Site Status\",\n                wrapping: true,\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.HBox({\n                    justifyContent: \"Center\",\n                    width: \"100%\"\n                })\n                .addItem(new sap.m.Text({\n                        text: \"{ptSiteBomStatus}\"\n                    })\n                    .addStyleClass('sapUiTinyMarginBegin')),\n            hAlign: \"Center\",\n            filterProperty: \"ptSiteBomStatus\",\n            sortProperty: \"ptSiteBomStatus\",\n        }));\n\n        oTable.addColumn(new sap.ui.table.Column({\n            width: \"10rem\",\n            label: new sap.m.Label({\n                text: \"PT Site\",\n                wrapping: true,\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Text({\n                text: \"{rscSite}\",\n            }).addStyleClass(\"input_class_new\"),\n            hAlign: \"Center\",\n            filterProperty: \"ptBomItemInstruction\"\n\n        }));\n\n\n    } else if (ptSiteIconTabBar.getSelectedKey() === \"site\") {\n        oTable.addColumn(new sap.ui.table.Column({\n            width: \"10rem\",\n            label: new sap.m.Label({\n                text: \"Site#1\",\n                wrapping: true,\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Text({\n                text: \"{site_one}\",\n            }).addStyleClass(\"input_class_new\"),\n            hAlign: \"Center\",\n            filterProperty: \"site_one\"\n\n        }));\n        oTable.addColumn(new sap.ui.table.Column({\n            width: \"10rem\",\n            label: new sap.m.Label({\n                text: \"Site#2\",\n                wrapping: true,\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.Text({\n                text: \"{site_two}\",\n            }).addStyleClass(\"input_class_new\"),\n            hAlign: \"Center\",\n            filterProperty: \"site_two\"\n\n        }));\n    }\n\n    var oModel = new sap.ui.model.json.JSONModel();\n    oModel.setData(data);\n    oTable.setModel(oModel);\n    oTable.bindRows(\"/\");\n    oTable.setTitle(\"Total (\" + oTable.getModel().getData().length + \")\");\n    oTable.setVisibleRowCount(oTable.getModel().getData().length + 2);\n}\n\n/*When user click on edit button it open the site details and show the data in UI.*/\nfunction showPTSiteData(data) {\n\n    oIconSitepdf.setVisible(true);\n    oIconSiteexcel.setVisible(true);\n\n    oButtonFooterSaveSite.setEnabled((ptSiteIconTabBar.getSelectedKey() !== \"site\" && data.rsc_ptbom_site_header.length === 2));\n\n    oBarFooter.setVisible(true);\n    ptSiteIconTabBar.setExpanded(false);\n    oPanelSiteHeaderCommon.setExpanded(true);\n    data.rsc_ptbom_header[0].validStartDate = new Date(Number(data.rsc_ptbom_header[0].validStartDate));\n    data.rsc_ptbom_header[0].validEndDate = new Date(Number(data.rsc_ptbom_header[0].validEndDate));\n    data.rsc_ptbom_header[0].createdAt = new Date(Number(data.rsc_ptbom_header[0].createdAt));\n    data.rsc_ptbom_header[0].updatedAt = new Date(Number(data.rsc_ptbom_header[0].updatedAt));\n    data.rsc_ptbom_header[0].approvedOn = (data.rsc_ptbom_header[0].approvedOn === null || data.rsc_ptbom_header[0].approvedOn === \"\") ? \"\" : dateTime(Number(data.rsc_ptbom_header[0].approvedOn));\n    data.rsc_ptbom_header[0].todayDate = new Date();\n    /*\n               Pseudocode: Based on the PTSITE status modulate the editable fields\n               CREATED : PT Site Effective Start Date, PT Site Effective END Date, \n                           save btn, Submit for Approval btn\n               APPROVED : PT Site Effective Start Date, PT Site Effective END Date\n                           save btn\n               SUB Approval : Nothing and no btns\n               EFFECTIVE/OBSOLETE: Nothing and no btns\n               \n           */\n    if (ptSiteIconTabBar.getSelectedKey() === \"site\" || ptSiteIconTabBar.getSelectedKey() === \"site_change\") {\n        if (data.rsc_ptbom_header[0].ptSiteBomStatus === g_createStatusData[0].status) {\n            data.rsc_ptbom_header[0].editable = true; //Start and End Dates editability\n            oButtonFooterSaveSite.setVisible(true); //save btn \n            oButtonFooterSaveSite.setEnabled(true);\n            oButtonFooterSubmitApprovalSite.setVisible(true); //submit for approval btn\n            oButtonFooterSubmitApprovalSite.setEnabled(true);\n            data.rsc_ptbom_header[0].holdFlag = false; // On Hold CheckBox editability\n        } else if (data.rsc_ptbom_header[0].ptSiteBomStatus === g_approveStatusData[0].status ||\n            data.rsc_ptbom_header[0].ptSiteBomStatus === g_effectiveStatusData[0].status) {\n            data.rsc_ptbom_header[0].editable = true; //Start and End Dates editability\n            oButtonFooterSaveSite.setVisible(true); //save btn \n            oButtonFooterSaveSite.setEnabled(true);\n            data.rsc_ptbom_header[0].holdFlag = true; // On Hold CheckBox editability\n            oButtonFooterSubmitApprovalSite.setVisible(false); //submit for approval btn\n        } else if (data.rsc_ptbom_header[0].ptSiteBomStatus === g_submitForApprovalStatusData[0].status ||\n            data.rsc_ptbom_header[0].ptSiteBomStatus === \"OBSOLETE\") {\n            data.rsc_ptbom_header[0].editable = false; //Start and End Dates editability\n            oButtonFooterSaveSite.setVisible(false); //save btn \n            oButtonFooterSubmitApprovalSite.setVisible(false); //submit for approval btn\n            data.rsc_ptbom_header[0].holdFlag = false; // On Hold CheckBox editability\n        }\n    }\n\n\n\n    data.rsc_ptbom_site_header.forEach(i => {\n        i.validStartDate = new Date(Number(i.validStartDate));\n        i.validEndDate = new Date(Number(i.validEndDate));\n        i.createdAt = new Date(Number(i.createdAt));\n        i.updatedAt = new Date(Number(i.updatedAt));\n        i.approvedOn = new Date(Number(i.approvedOn));\n\n        // adding code for editability of site, dates and onHold flag in the add site table\n        if (ptSiteIconTabBar.getSelectedKey() === \"site\" || ptSiteIconTabBar.getSelectedKey() === \"site_change\") {\n            i.siteFlag = i.ptSiteBomStatus === g_approveStatusData[0].status ? false : i.ptSiteBomStatus === g_createStatusData[0].status ? false :\n                i.ptSiteBomStatus === g_effectiveStatusData[0].status ? false :\n                i.ptSiteBomStatus === g_submitForApprovalStatusData[0].status ? false : false;\n            i.editable = i.ptSiteBomStatus === g_approveStatusData[0].status ? true : i.ptSiteBomStatus === g_createStatusData[0].status ? true :\n                i.ptSiteBomStatus === g_effectiveStatusData[0].status ? false :\n                i.ptSiteBomStatus === g_submitForApprovalStatusData[0].status ? false : false;\n            i.holdFlag = i.ptSiteBomStatus === g_approveStatusData[0].status ? true : i.ptSiteBomStatus === g_createStatusData[0].status ? false :\n                i.ptSiteBomStatus === g_effectiveStatusData[0].status ? false :\n                i.ptSiteBomStatus === g_submitForApprovalStatusData[0].status ? false : false;\n            i.deleteFlag = false;\n        }\n    });\n\n\n    modeloTableAddSite.setData(data.rsc_ptbom_site_header);\n    modeloTablePTSiteHeader.setData(data.rsc_ptbom_header);\n\n    setTimeout(function() {\n        //making the loop throupgh out the table rows of the cell 3\n        oTableAddSite.getRows().forEach(row => {\n            var comboBox = row.getCells()[3];\n            comboBox.destroyItems();\n            // Changes as per sprint 7\n            /*\n            In PT Site Extension transaction, user should only able to select PT Site \n            from drop down list in which role he/she has logged in.\n            */\n            /*\n            if(user has access to AD group(site) || all site access){\n            only those site(s) shall be visible in the drop dwon to select the site in site extension\n                \n            }\n            */\n            if (mdlPtSiteAdGroups.getModel().getData().length > 0) {\n                var ptSiteAdGrpData = mdlPtSiteAdGroups.getModel().getData();\n                // var uniqueAdGroupsData = [...new Set(ptSiteAdGrpData.map(item => item.adGroup))];\n\n                const uniqueAdGroupsData = [...new Map(ptSiteAdGrpData.map(item => [item[\"adGroup\"], item])).values()];\n                uniqueAdGroupsData.forEach(adGrpLoc => {\n                    modeloComboBoxSitePTSite.getData().forEach(data => {\n                        if ((data.location).includes(adGrpLoc.locationName)) {\n                            var loc = new sap.ui.core.Item({\n                                text: data.location,\n                                key: data.location,\n                            });\n                            //adding items to the comboBox\n                            comboBox.addItem(loc);\n                        }\n                    });\n                });\n            } else {\n                // Do not do anything\n                oComboBoxSitePTSite.destroyItems();\n            }\n\n        });\n    }, 300);\n    buildComponentTable(data.rsc_ptbom_item);\n}\n\n/*Building the component table data*/\nfunction buildComponentTable(data) {\n    oTableSiteComponent.removeAllColumns();\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"6rem\",\n        label: new sap.m.Label({\n            text: lblserialNO.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Label({\n            text: \"{itemNo}\",\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"itemNo\"\n\n    }));\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"10rem\",\n        label: new sap.m.Label({\n            text: lblCompType.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n            text: \"{componentType}\",\n        }),\n\n        hAlign: \"Center\",\n        filterProperty: \"componentType\",\n        sortProperty: \"componentType\",\n    }));\n\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"10rem\",\n        label: new sap.m.Label({\n            text: lblCompContrlNum.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n            text: \"{component}\",\n        }),\n\n        hAlign: \"Center\",\n        filterProperty: \"component\",\n        sortProperty: \"component\",\n    }));\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"7rem\",\n        label: new sap.m.Label({\n            text: lblRevision.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n            text: \"{revision}\",\n        }),\n        hAlign: \"Center\",\n        filterProperty: \"revision\",\n        sortProperty: \"revision\",\n    }));\n\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"13rem\",\n        label: new sap.m.Label({\n            text: oLabelPDFURL.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Link({\n            text: \"{refLink}\", //\"{refLink}\",\n            visible: true,\n            press: function(oEvent) {\n                pdfLinkClickEventHandeler(oEvent);\n            }\n        }).bindProperty(\"text\", {\n            parts: [\"refLink\"],\n            formatter: function(refLink) {\n                if (typeof refLink === \"object\") {\n                    if (refLink !== null && refLink !== undefined) {\n                        // returning the file name from the refLink object\n                        return refLink.name;\n                    } else {\n                        return \"\";\n                    }\n                } else {\n                    if (refLink !== null && refLink !== undefined) {\n                        var split = refLink.split('/');\n                        return split[split.length - 1];\n                    } else {\n                        return \"\";\n                    }\n                }\n            }\n        }),\n        hAlign: \"Center\",\n        filterProperty: \"refLink\"\n    }));\n\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"8rem\",\n        label: new sap.m.Label({\n            text: lblcopmQty.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Input({\n            editable: false,\n            value: \"{qty}\",\n            liveChange: function(oEvent) {\n                var updatedVal = this.getValue();\n                this.setValue(updatedVal.replace(/[^0-9]+/g, ''));\n            },\n            valueState: \"{qtyValueState}\"\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"qty\",\n        sortProperty: \"qty\",\n    }));\n\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"5rem\",\n        label: new sap.m.Label({\n            text: lblBaseUoM.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n                text: \"{uom}\",\n            })\n            // User should not be able to type anything\n            .addEventDelegate({\n                onAfterRendering: function(oEvent) {\n                    setTimeout(function() {\n                        $(\".stopTyping\").find(\"input\").attr(\"readonly\", true);\n                    }, 10);\n\n                }\n            })\n            .addStyleClass(\"input_class_new stopTyping\"),\n        hAlign: \"Center\",\n        filterProperty: \"uom\"\n    }));\n\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"6rem\",\n        label: new sap.m.Label({\n            text: lblStatus.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Input({\n            editable: false,\n            value: \"{componentStatus}\",\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"componentStatus\"\n\n    }));\n\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"140px\",\n        label: new sap.m.Label({\n            text: lblEffStartDate.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n            text: {\n                path: \"validStartDate\",\n                formatter: function(t) {\n                    var newT = \"\";\n                    try {\n                        if (t && t !== \"\")\n                            newT = dateTime(t); //parseFloat(t).toFixed(2);\n                    } catch (err) {}\n                    if (t)\n                        newT = dateTime(t);\n                    return newT;\n                }\n            }\n        }),\n        hAlign: \"Center\",\n        filterProperty: \"validStartDate\",\n        sortProperty: \"validStartDate\",\n    }));\n\n\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"140px\",\n        label: new sap.m.Label({\n            text: lblEffEndDate.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n            text: {\n                path: \"validEndDate\",\n                formatter: function(t) {\n                    var newT = \"\";\n                    try {\n                        if (t && t !== \"\")\n                            newT = dateTime(t); //parseFloat(t).toFixed(2);\n                    } catch (err) {}\n                    if (t)\n                        newT = dateTime(t);\n                    return newT;\n                }\n            }\n        }),\n        hAlign: \"Center\",\n        filterProperty: \"validEndDate\",\n        sortProperty: \"validEndDate\",\n    }));\n\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"10rem\",\n        label: new sap.m.Label({\n            text: \"Alternate Reference Number\", //lblInstruction.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.TextArea({\n            editable: false,\n            value: \"{altRefNumber}\",\n            maxLength: 500,\n            rows: 1,\n            visible: true\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"altRefNumber\"\n\n    }));\n\n    oTableSiteComponent.addColumn(new sap.ui.table.Column({\n        width: \"10rem\",\n        label: new sap.m.Label({\n            text: lblInstruction.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.TextArea({\n            editable: false,\n            value: \"{ptBomItemInstruction}\",\n            maxLength: 500,\n            rows: 1,\n            visible: true\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"ptBomItemInstruction\"\n\n    }));\n\n\n\n\n    var oModel = new sap.ui.model.json.JSONModel();\n    oModel.setData(data);\n    oTableSiteComponent.setModel(oModel);\n\n    oTableSiteComponent.bindRows(\"/\");\n\n    oTableSiteComponent.setTitle(\"Total (\" + oTableSiteComponent.getModel().getData().length + \")\");\n\n    oTableSiteComponent.setVisible(true);\n}\n\n/*Calling this function to save or update the site details.*/\nfunction saveSiteData() {\n\n    if (ptSiteIconTabBar.getSelectedKey() === \"site\") {\n        if (oTableSiteComponent.getModel().getData().length !== 0) {\n            sap.ui.core.BusyIndicator.show();\n            var options = {\n                data: {\n                    saveUpdateData: {\n                        header: oTablePTSiteHeader.getModel().getData()[0],\n                        siteData: oTableAddSite.getModel().getData(),\n                        components: oTableSiteComponent.getModel().getData()\n                    },\n                    setting: {\n                        flag: \"save_update_data\",\n                        create: true\n                    }\n                }\n            };\n            sap.ui.core.BusyIndicator.show(0);\n            apigetSiteData(options);\n        } else {\n\n        }\n    } else if (ptSiteIconTabBar.getSelectedKey() === \"site_change\") {\n        sap.ui.core.BusyIndicator.show();\n        var options = {\n            data: {\n                saveUpdateData: {\n                    header: oTablePTSiteHeader.getModel().getData()[0],\n                },\n                setting: {\n                    flag: \"save_update_data\",\n                    create: false\n                }\n            }\n        };\n        sap.ui.core.BusyIndicator.show(0);\n        apigetSiteData(options);\n    }\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"d220fe3d-7cf5-432d-bac2-8f2587a1b463","fieldName":"siteExtension","fieldParent":99999,"fieldPos":323,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e7bd0f47-5afb-45b0-db99-ec82d4a2a55d","fieldName":"updateSiteExtension","fieldParent":"d220fe3d-7cf5-432d-bac2-8f2587a1b463","fieldPos":324,"fieldType":"neptune.Script","script":"/**\n * Name: updateSiteExtension\n * Description: Function for Insert / Update the PT-Site Extension Data into the PT-BOM header table \n * and retrieves the data that what the user has inserted/updated\n * Created By :  Jaya Prakash Gundlapalli  \n * Created At: 12/14/2020\n * CR:   \n */\nasync function updateSiteExtension(action, ptSiteHeaders, ptBomHeader) {\n    var options = {\n        data: {\n            action: action,\n            siteData: ptSiteHeaders,\n            ptBomHeader: ptBomHeader,\n            ptbomItems: oTableComponent.getModel().oData ? oTableComponent.getModel().oData : []\n        }\n    };\n\n    var updateSiteData = await apiupdatePTSiteData(options);\n    //Checking if this has the response or not\n    if (updateSiteData.siteData) {\n        oTableAddSite.getModel().setData([]);\n        dialog_save.close();\n        //If it has the response we are running a loop to converting the validStartDate & validEndDate\n        // to the date object and making the fields as non editable with a flag\n        updateSiteData.siteData.forEach(data => {\n            data.validStartDate = new Date(parseInt(data.validStartDate));\n            data.validEndDate = new Date(parseInt(data.validEndDate));\n            data.valueState = \"None\";\n            data.valueStateText = \"\";\n            data.todayDate = new Date();\n            if (data.ptSiteBomStatus === g_approveStatusData[0].status) {\n                data.editable = true;\n            } else if (data.ptSiteBomStatus === g_createStatusData[0].status) {\n                data.editable = true;\n            } else {\n                data.editable = false;\n            }\n            data.dummyID = Math.floor(Math.random() * 1000000 + 1);\n        });\n\n        //finding the created status record to make the Submit forapproval button enabled\n        var buttonEditable = updateSiteData.siteData.find(function(data) {\n            if (data.ptSiteBomStatus === g_createStatusData[0].status) {\n                return true;\n            }\n        });\n\n        if (buttonEditable) {\n            oButtonFooterSubmitApproval.setEnabled(true);\n        } else {\n            var saveEditable = updateSiteData.siteData.filter(function(data) {\n                if (data.ptSiteBomStatus === g_approveStatusData[0].status) {\n                    return true;\n                }\n            });\n            if (saveEditable) {\n                oButtonFooterSave.setEnabled(true);\n            } else {\n                oButtonFooterSave.setEnabled(false);\n                oButtonFooterSubmitApproval.setEnabled(false);\n            }\n        }\n        //Setting the response to the table\n        oTableAddSite.getModel().setData(updateSiteData.siteData);\n        oTableAddSite.getModel().refresh();\n        //setting the toatl number of records count to the Table title.\n        oTableAddSite.setTitle(lebTotal.getText()+\":\"+oTableAddSite.getModel().getData().length);\n\n        if (updateSiteData.msgCode === 3) {\n            getDialog(oLabelSiteUpdated.getText());\n        }\n\n        sap.ui.core.BusyIndicator.hide();\n    }\n    sap.ui.core.BusyIndicator.hide();\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"acbfcfc4-0175-4a33-cf0c-ef530bf780c6","fieldName":"updatePTSiteData","fieldParent":"d220fe3d-7cf5-432d-bac2-8f2587a1b463","fieldPos":325,"fieldType":"neptune.restapi","restSource":"6070f76b-f913-43df-a7fb-f02473bba2c5","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status);","translation":[]}]},{"fieldNo":"b52a86ec-a576-4032-92c9-6a0bbde18466","fieldName":"workflow","fieldParent":99999,"fieldPos":326,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"86518d5a-dc63-4f97-95a1-b03f3b2515f2","fieldName":"approversList","fieldParent":"b52a86ec-a576-4032-92c9-6a0bbde18466","fieldPos":327,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"bf558a72-0692-4dc4-8c84-fd4737846fbc","fieldName":"updatePtBomGlobalStatus","fieldParent":"b52a86ec-a576-4032-92c9-6a0bbde18466","fieldPos":328,"fieldType":"neptune.restapi","restSource":"ee2b9113-ac96-4226-a0a6-305032f5dd90","restOperation":"dcf9c9de-50d8-4984-ea5e-38026b69d662","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"getDialog(oLabelSubmitForApproval.getText());\ndiaSubmit.close();\nvar pt_site = oComboBoxPTSite.getModel().getData();\noButtonFooterSave.setEnabled(false);\noButtonFooterSubmitApproval.setEnabled(false);\nbuildHeaderData(xhr.responseJSON.entity, \"pt_type\", pt_site, xhr.responseJSON.entity.ptBomStatus, true);\nxhr.responseJSON.entity.headerBOMqty = false\n\nsap.ui.core.BusyIndicator.hide();\n\n\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status);","translation":[]}]},{"fieldNo":"d4236a3d-f624-4c7c-d4e0-d3e455555b74","fieldName":"getApproverList","fieldParent":"b52a86ec-a576-4032-92c9-6a0bbde18466","fieldPos":329,"fieldType":"neptune.restapi","restSource":"ee2b9113-ac96-4226-a0a6-305032f5dd90","restOperation":"d6f5ce47-8562-4919-ca11-846e258aaa4c","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status);","translation":[]}]},{"fieldNo":"7c929f35-ea98-4195-f626-af6df589d0f5","fieldName":"oRestAPIUpdatePTBOMStatus","fieldParent":"b52a86ec-a576-4032-92c9-6a0bbde18466","fieldPos":330,"fieldType":"neptune.restapi","restSource":"ee2b9113-ac96-4226-a0a6-305032f5dd90","restOperation":"cc425c15-daa1-478b-a071-4e6a9ae3d354","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"getDialog(oLabelSubmitForApproval.getText());\n\nvar pt_site = oComboBoxPTSite.getModel().getData();\n//If the Selected key is Site Extension it will updates the PT-BOM status and gets the response back to bing the PT-Site extension table data the workflow \nif (xhr.responseJSON.entity) {\n    oTableAddSite.getModel().setData([]);\n\n    xhr.responseJSON.entity.forEach(data => {\n        data.validStartDate = new Date(parseInt(data.validStartDate));\n        data.validEndDate = new Date(parseInt(data.validEndDate));\n        data.valueState = \"None\";\n        data.valueStateText = \"\";\n        if (data.ptSiteBomStatus === g_approveStatusData[0].status) {\n            data.editable = true;\n            data.holdFlag = true;\n            data.siteFlag = false;\n        } else if (data.ptSiteBomStatus === g_createStatusData[0].status) {\n            data.editable = true;\n            data.holdFlag = false;\n            data.siteFlag = false;\n        } else {\n            data.editable = false;\n            data.holdFlag = false;\n            data.siteFlag = false;\n        }\n        data.dummyID = Math.floor(Math.random() * 1000000 + 1);\n    });\n    var buttonEditable = xhr.responseJSON.entity.find(function(data) {\n        if (data.ptSiteBomStatus === g_createStatusData[0].status) {\n            return true;\n        }\n    });\n    \n    if (ptSiteIconTabBar.getSelectedKey() === \"site\") {\n        // var dataDb = xhr.responseJSON.entity;\n        // xhr.responseJSON.entity.forEach(item=>{\n        //     item.ptSiteBomStatus = \"SUBMITTED FOR APPROVAL\";\n        // });\n        oTableAddSite.getModel().setData(xhr.responseJSON.entity);\n        oTableAddSite.getModel().refresh();\n    } else {\n        var siteName = oTablePTSiteHeader.getModel().getData()[0].rscSite;\n        var header = xhr.responseJSON.entity.filter(data => {\n            if (data.rscSite === siteName) {\n                // data.ptSiteBomStatus = \"SUBMITTED FOR APPROVAL\"\n                return true;\n            }\n        });\n        oTablePTSiteHeader.getModel().setData(header);\n    }\n\n    if (buttonEditable) {\n        oButtonFooterSubmitApproval.setEnabled(true);\n    } else {\n        // oButtonFooterSave.setEnabled(false);\n        oButtonFooterSaveSite.setEnabled(false);\n        // oButtonFooterSubmitApproval.setEnabled(false);\n        oButtonFooterSubmitApprovalSite.setEnabled(false);\n    }\n\n}","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nhandleErrors(xhr, status);","translation":[]}]},{"fieldNo":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldName":"PTBOMFields","fieldParent":99999,"fieldPos":331,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"fea2adb3-6c59-4bbc-873a-a937b637fb18","fieldName":"lblAltRefNum","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":332,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"78ba307f-aab4-468e-8785-2e05592b0676","fieldName":"lblBOMLevel","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":333,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0097597a-2e11-46f5-e3ab-b130271ea578","fieldName":"exportDisplayFileName","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":334,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e525f1bd-3170-49dc-bbb0-c657c33085d0","fieldName":"lblNotCreatedStatus","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":335,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ee26654f-8c33-4b67-a429-87284af4d590","fieldName":"lblComEffStart","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":336,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"be162913-96a2-4507-ec95-17fc5cff4b77","fieldName":"lblCompEffEndDate","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":337,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"f6aece37-2e20-48aa-936d-35b2d3d4c3c7","fieldName":"lblCompNotEffective","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":338,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"808c72c7-8b05-4d5f-ee44-70d75795a537","fieldName":"oLabelFileUploadedSuccess","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":339,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4b99a5ca-ccff-466e-8c73-006d36e93044","fieldName":"oLabelCombinationExists","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":340,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0a2de9c9-46e2-424f-93d8-32684f199806","fieldName":"lblcreateNoComponentsMessage","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":341,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d5e0fb68-dad8-4008-96e3-1d0999dc36a9","fieldName":"lblcreateNewRevisionMessage","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":342,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"7ac29628-a91c-4cc4-b019-0f8e6ff4b35a","fieldName":"lblcreateExistBOMMessage","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":343,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ea43ffee-1375-453d-8336-d617e7b8a986","fieldName":"oLabel7","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":344,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"72e11f7e-90f0-4cb7-a811-2bfcb6a80a4b","fieldName":"lblbomStatus","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":345,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"6a5f0759-139d-4c45-e25c-897394e1bbb8","fieldName":"lblptSiteBomStatus","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":346,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"409993f1-dbbb-4bab-a228-e091a8c927db","fieldName":"lblplmSource","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":347,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"187b42cf-b230-45c0-fc05-11f550d4d12d","fieldName":"lblplmChangeCon","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":348,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"7c866438-be77-49a1-80e0-1ff5643943c6","fieldName":"lblonhold","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":349,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ced71b49-f8a4-465a-b2fa-7f2d5845e5d1","fieldName":"lblbu","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":350,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"79944e64-0214-4850-e101-188833298a58","fieldName":"lblfranchise","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":351,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ca972fa8-c9c0-4356-c00d-5aa5377c49ac","fieldName":"lblrscChangeOrder","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":352,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8f93c102-005f-4be0-a2de-b742f8fbc3cd","fieldName":"lblcreatedOn","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":353,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"776cd897-ffbf-41fe-9a62-c2ce8f8a7ee3","fieldName":"lblcreatedBy","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":354,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"5b117cc7-570c-49ad-cf1a-ba361a59d09f","fieldName":"lblapprovedOn","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":355,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"28de3829-a635-4920-f52b-dc6825d75900","fieldName":"lblapprovedBy","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":356,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e3020be9-f2b2-4174-d49e-e5a2e7a52f34","fieldName":"lblchangedBy","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":357,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"db997330-f158-4491-9247-93c70484c7c2","fieldName":"lblchangedOn","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":358,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"748ff336-4d1d-4d21-e804-ed07ca0c9f07","fieldName":"lblrejectedBy","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":359,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"fae90e90-7653-4ef8-e505-d1771ffb96f3","fieldName":"lblrejectedOn","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":360,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"9f6bf27a-5508-48a9-f5b5-cf7e84df4083","fieldName":"lblreasonReject","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":361,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"bb2da685-6ee9-49ae-d6f9-f63bc127f4ba","fieldName":"lblaction","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":362,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d4bca2ac-ec77-4485-dbd3-0b10dd1bb7f2","fieldName":"lblserialNO","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":363,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"3351631e-6440-47f5-9334-3a0290f1e0df","fieldName":"lblcopmQty","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":364,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0bd2581a-99cf-43a8-888f-bf9e154270a1","fieldName":"lbluoMOnly","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":365,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"5b60ecfb-a557-43f0-9ae2-c7aeac963d34","fieldName":"lblstatusOnly","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":366,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"44bc2948-f96b-4946-89e7-42902e38ea68","fieldName":"lblcompSource","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":367,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"7ddcd761-65a6-4278-9ff6-2549db445333","fieldName":"oLabel6","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":368,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"df347c95-2691-4deb-de9c-3bb5dcad387e","fieldName":"oLabelProDescription","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":369,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"bde70051-9ddb-459b-889e-f87db7185f1b","fieldName":"lblQty","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":370,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"9dc6ac86-d424-459e-882f-573a975e1c6e","fieldName":"lblRevision","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":371,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"94133eb6-a929-45d1-de26-00bd3bca4ef1","fieldName":"lblCompContrlNum","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":372,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4c6c4ef4-5ae7-4b0f-ce03-1f4fa5217120","fieldName":"lblCompType","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":373,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"f70be371-05bb-46e9-e9ac-24f15cf72422","fieldName":"lblEffEndDate","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":374,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"cc0cd384-d61c-4ca5-d51e-b18fcc46d412","fieldName":"lblComponents","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":375,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"9bbae0be-3624-4e83-a504-2c4891be2ce2","fieldName":"lblEffStartDate","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":376,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"76eac1a1-96c0-426e-f5e2-2909c86574af","fieldName":"lblPTSite","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":377,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"fb313bef-542a-49d3-f384-719063dc797c","fieldName":"lblVariantCode","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":378,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0327eac9-03c9-452b-9889-2167c8bd2764","fieldName":"lblBomID","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":379,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"494bd8d1-ce3b-4d6b-c380-abacb0aa9976","fieldName":"lblVersionDesc","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":380,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"072ad071-3575-431f-b24a-9e695bf96336","fieldName":"lblVersion","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":381,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"5587beb7-58ae-42fc-e4cc-6d21d44c12fe","fieldName":"tabHeaderPB","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":382,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"c697dd40-0c9f-489f-dc07-97e840f02067","fieldName":"lblProductCode","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":383,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"7a79947e-cf25-407f-a8fe-c723cde17ef0","fieldName":"lblGTIN","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":384,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"701b5c54-e992-49b8-c6d1-6f8319fbf4a2","fieldName":"lblStatus","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":385,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ebe18768-8b8d-4009-c065-ac4b5d1aac94","fieldName":"lblStatusGlobal","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":386,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"608f13a7-752d-4a99-9dc0-5800fd5e94a1","fieldName":"lblInstruction","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":387,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"18486c5d-b136-4565-bb98-f73d9b786be5","fieldName":"lblBOMqty","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":388,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"7fe3b1e0-5fb3-4b52-d1dd-4bfb46281ead","fieldName":"lblBaseUoM","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":389,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"6e280fb5-6f23-450e-8646-b819abe2414c","fieldName":"lblCustomer","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":390,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"82bd37a9-f799-4582-d954-bd29e47656a7","fieldName":"exportPTBOMname","fieldParent":"a24f04d8-ed83-484e-9fbe-a342d1dd4cd8","fieldPos":391,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"3b2d5a1c-8cb1-46b7-e880-f882ef4c51af","fieldName":"Locking","fieldParent":99999,"fieldPos":392,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e71631b9-ec8b-470f-d985-dd70b394197e","fieldName":"lockAPIs","fieldParent":"3b2d5a1c-8cb1-46b7-e880-f882ef4c51af","fieldPos":393,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"652af0a6-c4cd-42fe-f57b-3d285de0d2cc","fieldName":"oRestCheckLock","fieldParent":"e71631b9-ec8b-470f-d985-dd70b394197e","fieldPos":394,"fieldType":"neptune.restapi","restSource":"2553048d-59dc-4b2c-b5ba-3eff399d2127","restOperation":"1647d476-e430-44b5-cd10-a280b0245fb5","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"//  var data = xhr.responseJSON;\n//  if (data.length > 0) { //lock exist\n//      //show message \n//      showLockMessage(data[0]);\n\n\n//  } else {\n//      let createPbObj = {\n//          productNum: oComboBoxProduct.getValue(),\n//          variant: cmboVariant.getValue(),\n//          shipToCountry: oComboBoxCountry.getValue()\n//      }\n//      applyLock(createPbObj);\n\n//  }","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"// notBusy()\nhandleErrors(xhr, status)","translation":[]}]},{"fieldNo":"10ad2293-0a3f-4c48-e478-48e659eca559","fieldName":"oRestApplyLock","fieldParent":"e71631b9-ec8b-470f-d985-dd70b394197e","fieldPos":395,"fieldType":"neptune.restapi","restSource":"2553048d-59dc-4b2c-b5ba-3eff399d2127","restOperation":"168351d3-e74d-43e4-ca4b-b0089438171b","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"// notBusy()\nhandleErrors(xhr, status)","translation":[]}]},{"fieldNo":"00ae9e34-1e2c-42fb-a180-36451d4727f0","fieldName":"oRestRemoveLock","fieldParent":"e71631b9-ec8b-470f-d985-dd70b394197e","fieldPos":396,"fieldType":"neptune.restapi","restSource":"2553048d-59dc-4b2c-b5ba-3eff399d2127","restOperation":"8b460b36-0d94-4ebe-8ed1-909f6f439989","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"// ;\n// notBusy()\nhandleErrors(xhr, status)","translation":[]}]},{"fieldNo":"245d5b1c-98a8-499a-ddef-9cd886ae59b6","fieldName":"LockScripts","fieldParent":"3b2d5a1c-8cb1-46b7-e880-f882ef4c51af","fieldPos":397,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"f04a607c-b3ff-4eba-f01e-34ede4e64cec","fieldName":"LockingJS","fieldParent":"245d5b1c-98a8-499a-ddef-9cd886ae59b6","fieldPos":398,"fieldType":"neptune.Script","script":"/**\r\n * Name: LockingJS\r\n * Description: Function to setup locking on TO Number for the current user editing.\r\n * Created By : Swapnil Dharawat  \r\n * Created At: 09/25/2019\r\n * CR:  \r\n */\r\n\r\nvar g_activeLockRecord = {};\r\nvar g_TODetail = '';\r\n\r\n/*Event listener on close of tab or browser */\r\nwindow.onbeforeunload = function(event) {\r\n    removeLock(g_activeLockRecord);\r\n      window.localStorage.lockedEntry = \"\"\r\n};\r\n\r\nasync function applyLock(pbObj, responseData) {\r\n\r\n    if (pbObj === undefined || pbObj === \"\") {\r\n        return;\r\n    }\r\n\r\n    var options = {\r\n        data: [{\r\n            \"OBJ_NAME\": \"PTBOM\",\r\n            \"OBJ_VALUE\": JSON.stringify(pbObj),\r\n            \"LOCKED_BY\": AppCache.userInfo.username\r\n        }]\r\n    };\r\n    g_activeLockRecord = pbObj;\r\n    sessionStorage.setItem(\"g_activeLockRecord\", g_activeLockRecord);\r\n    window.localStorage.lockedEntry = JSON.stringify(pbObj);\r\n    var applyLockResponse = await apioRestApplyLock(options);\r\n    /*on applying lock, the data retrieval shall be processed with respect to change/create mode*/\r\n    if (oIconTabBarPTBOM.getSelectedKey() === \"GLOBAL\") {\r\n        //Create\r\n        if (oIconTabBar.getSelectedKey() === g_create_tab) {\r\n            oButtonFooterSave.setVisible(true);\r\n            oButtonFooterSubmitApproval.setVisible(true);\r\n            ptbomGlobalCreate();\r\n\r\n        } else if (oIconTabBar.getSelectedKey() === g_change_tab) {\r\n            //change\r\n            var oTable = oTableChangePTBOM;\r\n            var flag = oIconTabBar.getSelectedKey() === g_change_tab ? false : true;\r\n            oMessagePageEmpty.setVisible(false);\r\n            buildSearchVersionTable(oTable, responseData, flag);\r\n            oIconTabBar.setExpanded(true);\r\n            oIconTabBar.setVisible(true);\r\n            oBarFooter.setVisible(false);\r\n        }\r\n\r\n\r\n    } else if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\r\n\r\n        ptSiteResponseValidation(responseData);\r\n\r\n    }\r\n}\r\n\r\n/*remove lock if any captured*/\r\nfunction removeLock(compNum) {\r\n\r\n    if (compNum === undefined || (Object.keys(compNum) && Object.keys(compNum).length === 0)) {\r\n        return;\r\n    }\r\n\r\n    var val = JSON.stringify({\r\n        OBJ_VALUE: compNum\r\n    });\r\n\r\n    var options = {\r\n        parameters: {\r\n            where: encodeURIComponent(val)\r\n        }\r\n    };\r\n    g_activeLockRecord = {};\r\n    AppCache.hideGlobalAjaxError = true;\r\n    apioRestRemoveLock(options);\r\n}\r\n\r\n/*param- responseData holds the bom search results if any exists*/\r\nasync function checkLock(pbObj, responseData) {\r\n\r\n    if (pbObj === undefined || pbObj === \"\") {\r\n        return;\r\n    }\r\n\r\n    var objVal = JSON.stringify({\r\n        OBJ_VALUE: pbObj\r\n    });\r\n\r\n\r\n    var options = {\r\n        parameters: {\r\n            \"where\": objVal\r\n        }\r\n    };\r\n\r\n    var checkLockResponse = await apioRestCheckLock(options);\r\n\r\n    if (checkLockResponse.length > 0) { //lock exist\r\n        //show message \r\n        showLockMessage(checkLockResponse[0], responseData);\r\n\r\n    } else {\r\n        /*if no lock exists, then apply lock with logged in user*/\r\n        var createPbObj = {};\r\n        if (oIconTabBarPTBOM.getSelectedKey() === \"GLOBAL\") {\r\n            createPbObj = {\r\n                productNum: oComboBoxProduct.getValue(),\r\n                variant: cmboVariant.getValue(),\r\n                shipToCountry: oComboBoxCountry.getValue()\r\n            }\r\n\r\n            applyLock(createPbObj, responseData);\r\n\r\n        } else if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\r\n            //if data exists for combination\r\n            if (responseData.msgCode === undefined) {\r\n                createPbObj = {\r\n                    productNum: comboBoxSiteProduct.getValue(),\r\n                    variant: cmboSiteVariant.getValue(),\r\n                    shipToCountry: oComboBoxSiteCountry.getValue()\r\n                }\r\n                applyLock(createPbObj, responseData);\r\n            } else { // if data doesn't exist the error message shall be shown on UI\r\n                ptSiteResponseValidation(responseData);\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n/*show locked message if another user has logged in*/\r\nfunction showLockMessage(res, responseData) {\r\n    if (res.updatedBy.toUpperCase() !== g_username.toUpperCase()) {\r\n\r\n        var mss = res.OBJ_VALUE + ' ' + lblLockedByUser.getText() + ' ' + res.updatedBy;\r\n        lblLockEntryDetails.setText(mss)\r\n        diaLockEntries.open();\r\n        sap.ui.core.BusyIndicator.hide();\r\n\r\n    } else {\r\n        /*if the same user who has locked the record has logged in */\r\n        g_activeLockRecord = res.OBJ_VALUE;\r\n\r\n        if (oIconTabBarPTBOM.getSelectedKey() === \"GLOBAL\") {\r\n            //Create\r\n            if (oIconTabBar.getSelectedKey() === g_create_tab) {\r\n                oButtonFooterSave.setVisible(true);\r\n                oButtonFooterSubmitApproval.setVisible(true);\r\n                ptbomGlobalCreate();\r\n\r\n            } else if (oIconTabBar.getSelectedKey() === g_change_tab) {\r\n                //change\r\n                var oTable = oTableChangePTBOM;\r\n                var flag = oIconTabBar.getSelectedKey() === g_change_tab ? false : true;\r\n                oMessagePageEmpty.setVisible(false);\r\n                buildSearchVersionTable(oTable, responseData, flag);\r\n                oIconTabBar.setExpanded(true);\r\n                oIconTabBar.setVisible(true);\r\n                oBarFooter.setVisible(false);\r\n            }\r\n\r\n\r\n        } else if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\r\n\r\n            ptSiteResponseValidation(responseData);\r\n\r\n        }\r\n    }\r\n\r\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"9229565a-70b1-4f84-b866-5327c69992ea","fieldName":"LabelMessages","fieldParent":99999,"fieldPos":399,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"99142e94-e7ef-4651-e9e7-9afe741b0666","fieldName":"lblNoComponentsAfterDelete","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":400,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"de6d70cf-5ff0-44cb-aa5f-796830779670","fieldName":"lblErrorRetrievingDoc","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":401,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d7d0be22-ff8c-4f45-8d0f-e7067233bb93","fieldName":"lblLockedByUser","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":402,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"9d70090d-e5fa-4908-8da2-664ae4ae0fd8","fieldName":"lblsiteDetailsSaved","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":403,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"5ad08283-3d5d-4774-eee0-deec2db92b17","fieldName":"lblNoSites","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":404,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"6ce38174-d01c-4db7-8d96-6353520d4460","fieldName":"lblduplicateSites","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":405,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"1fab54dc-2787-4472-d73d-de4c1b194a8c","fieldName":"lblNoNewSites","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":406,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"48612fc5-560d-4aa3-c09f-290811d60a19","fieldName":"lblDateValidationMsg","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":407,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"dfc828e0-1881-4594-9bc5-c600c31f8c36","fieldName":"oLabeldatePrior","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":408,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4304e6ac-d0e4-41a6-893f-ad05d46db510","fieldName":"oLabelinvalidDate","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":409,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"62cc59bd-6959-4924-bb5d-839d22a87650","fieldName":"oLabelafterToday","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":410,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"a5eab1aa-7208-47e9-f9ef-34011c52e0f2","fieldName":"oLabeldeleteSite","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":411,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"f13c3421-fa92-4c74-cf29-41693ca47507","fieldName":"oLabelSiteNotApproved","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":412,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"99a188ba-83ac-4860-b3fd-559536d533d3","fieldName":"oLabelsiteNotFound","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":413,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"fa0a0222-05a7-4c8e-9992-7b53d2316200","fieldName":"oLabelSiteUpdated","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":414,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"fbfe7586-4be2-47e9-87e8-1b268b560a96","fieldName":"oLabelSubmitForApproval","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":415,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"9269d7f1-3833-4ebf-ef1a-779ca9f50127","fieldName":"oLabelPTSiteCantbeSame","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":416,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"9440b836-d41e-46f2-ab91-f074de3d4034","fieldName":"oLabelInvalidProductCode","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":417,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"a9ed9deb-f30a-42dd-b532-1a334792db24","fieldName":"oLabelMissingTranslations","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":418,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"458969af-6c4a-4959-9581-41e051c6b14b","fieldName":"tableColumnLabel","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":419,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"f8272e53-8efd-46c7-cae5-7a319cea0b49","fieldName":"oLabelPDFURL","fieldParent":"458969af-6c4a-4959-9581-41e051c6b14b","fieldPos":420,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d20cdade-25d6-4ecf-ccc4-db1296f01637","fieldName":"oFolderErrorMsg","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":421,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"969e7bd1-17e6-4efc-8d0b-f4147743160c","fieldName":"oLabelGenericMsg","fieldParent":"d20cdade-25d6-4ecf-ccc4-db1296f01637","fieldPos":422,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"3271566e-9314-4c2b-e955-f3279b599b09","fieldName":"oLabel504Msg","fieldParent":"d20cdade-25d6-4ecf-ccc4-db1296f01637","fieldPos":423,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4bb70185-ac9a-4c72-8e6d-e158020bd175","fieldName":"oLabel503Msg","fieldParent":"d20cdade-25d6-4ecf-ccc4-db1296f01637","fieldPos":424,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"5cf8709c-b178-406d-cb8c-25b729935e69","fieldName":"oLabel502Msg","fieldParent":"d20cdade-25d6-4ecf-ccc4-db1296f01637","fieldPos":425,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"efcbdd90-85ca-47b8-df58-5172c6e4b021","fieldName":"oLabel500Msg","fieldParent":"d20cdade-25d6-4ecf-ccc4-db1296f01637","fieldPos":426,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"29dcb1fa-52c0-4908-8f9c-390254022ca8","fieldName":"oLabel401Msg","fieldParent":"d20cdade-25d6-4ecf-ccc4-db1296f01637","fieldPos":427,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"1df5c640-0913-485e-edbd-96a5ba0cb1ed","fieldName":"lebTotal","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":428,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"289ee458-80eb-46bd-ac67-b1ddece4b798","fieldName":"oLabelPDFTitle","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":429,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"db8f1d8f-0975-4545-d17f-91c7ea61f2a3","fieldName":"labWelcome","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":430,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"333d3485-f266-46dd-9271-2de3b709a912","fieldName":"oLabelNothingFoundBlankChange","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":431,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"cbb15c79-91e5-465e-f6f3-b558ef3e0949","fieldName":"oLabelNothingApprovedDisplayBlank","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":432,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"f82e2927-3a58-437a-a418-339c436bbf62","fieldName":"oLabelTillDateLessThenStartDate","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":433,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"a5b2ce38-5879-4c32-f7be-26b74f353690","fieldName":"oLabelbtnCancel","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":434,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e1ba29de-ea7c-4bfd-b615-cdbf1439804d","fieldName":"oLabelPTBOMUpdate","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":435,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d4b0d5fc-6362-4952-8f28-2c64efb80d08","fieldName":"oLabelComponentNotExists","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":436,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"3eb789ac-0c76-4c10-8e2f-3177d03f9166","fieldName":"oLabelPTBOMCreateExists","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":437,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"03680de7-d097-4be5-8886-17d02086e80c","fieldName":"oLabelMadetoryFields","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":438,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"726c9cda-331f-42c6-ef28-c0968cfbe16c","fieldName":"oLabelPTBOMCreate","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":439,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8abbbe0d-0f6f-4fc4-9f66-0c4de8f05339","fieldName":"oLabelNoComponentText","fieldParent":"9229565a-70b1-4f84-b866-5327c69992ea","fieldPos":440,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldName":"Dialogs","fieldParent":99999,"fieldPos":441,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0bbb0120-ff47-41e8-d3ef-a73836952fe2","fieldName":"diaLockEntries","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":442,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"verticalScrolling","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialog","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://message-information","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"64ec88d9-c3d0-48b2-a2f2-caec38abcdd9","fieldName":"oBarLockEntries","fieldParent":"0bbb0120-ff47-41e8-d3ef-a73836952fe2","fieldPos":443,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"6f7c45b5-3b1b-4afc-8233-ce595b878a7c","fieldName":"Middle","fieldParent":"64ec88d9-c3d0-48b2-a2f2-caec38abcdd9","fieldPos":444,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"5ab6ab1c-4e7b-4e12-9f62-3c45533fec5e","fieldName":"lblLockEntryTitle","fieldParent":"6f7c45b5-3b1b-4afc-8233-ce595b878a7c","fieldPos":445,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]}]},{"fieldNo":"92d8aa91-7699-4b8a-ce33-1fee897f7d49","fieldName":"Right","fieldParent":"64ec88d9-c3d0-48b2-a2f2-caec38abcdd9","fieldPos":446,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"95f50605-f208-4371-bbd4-952a4bae654e","fieldName":"btncloseLockEntryDia","fieldParent":"92d8aa91-7699-4b8a-ce33-1fee897f7d49","fieldPos":447,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"diaLockEntries.close();","script":"diaLockEntries.close();","translation":[]}]},{"fieldNo":"b6c76841-980e-4a75-ab61-704576d15bb1","fieldName":"oVBoxLockEntry","fieldParent":"0bbb0120-ff47-41e8-d3ef-a73836952fe2","fieldPos":448,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"a06e6f74-b493-4eb0-fe31-8ea8fe6c3c94","fieldName":"lblLockEntryDetails","fieldParent":"b6c76841-980e-4a75-ab61-704576d15bb1","fieldPos":449,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMargin","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]},{"attribute":"wrapping","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"50824cf6-6b5a-4b7e-b42d-ae4e7dc9d1ca","fieldName":"diaCommon","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":450,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"a7c954c2-852c-43e3-afee-3d0a1ad1d9c1","fieldName":"oBarSubHeader","fieldParent":"50824cf6-6b5a-4b7e-b42d-ae4e7dc9d1ca","fieldPos":451,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"b0c321f9-5734-4d6a-a34c-69e02f657df5","fieldName":"Right","fieldParent":"a7c954c2-852c-43e3-afee-3d0a1ad1d9c1","fieldPos":452,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"102bfa46-b397-46a2-85a6-4ffebb6bd256","fieldName":"btnDiaCommonClose","fieldParent":"b0c321f9-5734-4d6a-a34c-69e02f657df5","fieldPos":453,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"diaCommon.close();\n","translation":[]}]},{"fieldNo":"1eecc2f6-1f72-4e16-ba5c-cb4c4c6b8717","fieldName":"Middle","fieldParent":"a7c954c2-852c-43e3-afee-3d0a1ad1d9c1","fieldPos":454,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"c3f5ccfb-fa1b-44e2-d5ab-1407a7a1979a","fieldName":"oLabeldiaCommon","fieldParent":"1eecc2f6-1f72-4e16-ba5c-cb4c4c6b8717","fieldPos":455,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new ","script":"","translation":[]}]},{"fieldNo":"8b7e9e3a-849d-4000-ab69-95c9138275d1","fieldName":"oVBoxCommonMsg","fieldParent":"50824cf6-6b5a-4b7e-b42d-ae4e7dc9d1ca","fieldPos":456,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"21947353-aa45-4bc1-fc38-0f46579623b8","fieldName":"oLabelCommonMess","fieldParent":"8b7e9e3a-849d-4000-ab69-95c9138275d1","fieldPos":457,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"38bc2ffb-06fd-495c-ae99-8dd8affd1c89","fieldName":"oDialog","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":458,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"8640460b-cb4a-4c2a-a053-69ac3796b101","fieldName":"diaLabelMissing","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":459,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"horizontalScrolling","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"contentWidth","grouping":"Properties","value":"40rem","script":"","translation":[]}]},{"fieldNo":"a95ff02b-ac8b-40e0-c8af-fd06c188ce10","fieldName":"oPanelLabelMissing","fieldParent":"8640460b-cb4a-4c2a-a053-69ac3796b101","fieldPos":460,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"pan","script":"","translation":[]}]},{"fieldNo":"ede4d4b5-33b3-42b0-af56-0d96bfdd5a51","fieldName":"oVBoxLabelMissing","fieldParent":"a95ff02b-ac8b-40e0-c8af-fd06c188ce10","fieldPos":461,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]}]},{"fieldNo":"7c845f7f-50fa-43b3-c5f9-5d0bedc0b997","fieldName":"oMessageStrip","fieldParent":"ede4d4b5-33b3-42b0-af56-0d96bfdd5a51","fieldPos":462,"fieldType":"sap.m.MessageStrip","script":"","request":[],"response":[],"attributes":[{"attribute":"type","grouping":"Properties","value":"Warning","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"labMissing","script":"","translation":[]},{"attribute":"showIcon","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"1a0dea1a-8163-4caa-ffdf-97e5f376ed47","fieldName":"oFlexBoxLabelMissing","fieldParent":"ede4d4b5-33b3-42b0-af56-0d96bfdd5a51","fieldPos":463,"fieldType":"sap.m.FlexBox","script":"","request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"End","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"3792eb2d-c5e6-4ec7-85e6-19e1dfbb0f2b","fieldName":"oVBoxLabelMiss","fieldParent":"1a0dea1a-8163-4caa-ffdf-97e5f376ed47","fieldPos":464,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"c981a26b-2539-4d67-d35f-72e5252e963a","fieldName":"oHBoxLabMissing","fieldParent":"3792eb2d-c5e6-4ec7-85e6-19e1dfbb0f2b","fieldPos":465,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"3d0d71a7-b0aa-47fa-e61b-511592a5a887","fieldName":"rejectNo","fieldParent":"c981a26b-2539-4d67-d35f-72e5252e963a","fieldPos":466,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"diaLabelMissing.close();\n","translation":[]}]},{"fieldNo":"51d654cf-e7e7-40ef-cd32-8ca1690a9a46","fieldName":"diaPendingComp","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":467,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"contentWidth","grouping":"Properties","value":"580px","script":"","translation":[]}]},{"fieldNo":"445a7b69-bd94-4f1b-882c-2c9bb481b9df","fieldName":"oBarContentPendingComp","fieldParent":"51d654cf-e7e7-40ef-cd32-8ca1690a9a46","fieldPos":468,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"53d3c4ee-db23-454b-c35f-9f1cd7b035e3","fieldName":"Right","fieldParent":"445a7b69-bd94-4f1b-882c-2c9bb481b9df","fieldPos":469,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"4d81c7f3-4a64-431e-a4ef-2144a0d68e57","fieldName":"btnClosePendingComp","fieldParent":"53d3c4ee-db23-454b-c35f-9f1cd7b035e3","fieldPos":470,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"diaPendingComp.close();","translation":[]}]},{"fieldNo":"ceb1c9d0-d844-44ef-842a-47f2d3fd19c4","fieldName":"Middle","fieldParent":"445a7b69-bd94-4f1b-882c-2c9bb481b9df","fieldPos":471,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"c3092128-1fae-49f9-c0c6-4d8d12ea3060","fieldName":"oLabelPendingComp","fieldParent":"ceb1c9d0-d844-44ef-842a-47f2d3fd19c4","fieldPos":472,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"8fa2b748-4806-4115-bfab-2c9458c1d7fc","fieldName":"oLabelPendingCompSite","fieldParent":"ceb1c9d0-d844-44ef-842a-47f2d3fd19c4","fieldPos":473,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"Below Components have not reached Effective Status - Not Used","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"4cd36be7-4615-442a-da36-91d28b24d927","fieldName":"oPanelPendingComp","fieldParent":"51d654cf-e7e7-40ef-cd32-8ca1690a9a46","fieldPos":474,"fieldType":"sap.m.Panel","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"91a9f2a8-df49-4e6c-865e-eb3a5feafeb9","fieldName":"oVBoxPendingComp","fieldParent":"4cd36be7-4615-442a-da36-91d28b24d927","fieldPos":475,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"6b7aa859-d2e2-4293-b307-c704b69d840e","fieldName":"oTablePendingComp","fieldParent":"91a9f2a8-df49-4e6c-865e-eb3a5feafeb9","fieldPos":476,"fieldType":"sap.ui.table.Table","bindingType":"h","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"dc5c61e6-5e5c-4463-c880-040f208fca69","fieldName":"oTextPendingComponents","fieldParent":"91a9f2a8-df49-4e6c-865e-eb3a5feafeb9","fieldPos":477,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"textAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiLargeMarginTop","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]},{"attribute":"wrapping","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"437e1255-9f7f-4c3b-a667-d84c61762b01","fieldName":"oBarFooterPendingComp","fieldParent":"91a9f2a8-df49-4e6c-865e-eb3a5feafeb9","fieldPos":478,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"bar","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Header","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"addContent","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"50001341-d41b-4871-9db0-f1de1d4a93c3","fieldName":"RightPendingComp","fieldParent":"437e1255-9f7f-4c3b-a667-d84c61762b01","fieldPos":479,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"e5cc3214-026f-4b1c-cb1d-b14c5da2e38a","fieldName":"oButtonPendingCompYes","fieldParent":"50001341-d41b-4871-9db0-f1de1d4a93c3","fieldPos":480,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"var pendingItems = oTablePendingComp.getModel().getData(); //Storing pending components data\nvar headerData = oTableHeader.getModel().getData(); // Storing header data\nvar approvedData = oTableComponent.getModel().getData(); //Storing components data\n\n/**\n * Filtering components status APPROVED or EFFECTIVE.If data exists deleting components where there status is not reached to APPROVED or EFFECTIVE\n * else showing error message \"PT BOM cannot be created as there are no components\"\n */\nvar compApproved = approvedData.filter(data => {\n    return (data.componentStatus === g_effectiveStatusData[0].status || data.componentStatus === g_approveStatusData[0].status)\n});\n\nif (compApproved.length > 0) {\n    var options = {\n        data: {\n            pendingItems,\n            headerData\n        }\n    };\n\n    apipost_delete_pending_GlobalComponents(options);\n} else {\n    getDialog(lblNoComponentsAfterDelete.getText());\n    diaPendingComp.close();\n\n}","translation":[]}]},{"fieldNo":"92c4d3b2-6306-4516-d554-73a3e1026740","fieldName":"oButtonPendingComp","fieldParent":"50001341-d41b-4871-9db0-f1de1d4a93c3","fieldPos":481,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"redbtn ","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"diaPendingComp.close();","script":"diaPendingComp.close();","translation":[]}]},{"fieldNo":"dc817300-ce62-4c40-bdfd-5e5d439c036c","fieldName":"oDialogBOMDetails","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":482,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialog","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f77d9dbd-7a1e-47c0-8f80-a611bbd2c219","fieldName":"oFlexBoxBOMDetails","fieldParent":"dc817300-ce62-4c40-bdfd-5e5d439c036c","fieldPos":483,"fieldType":"sap.m.FlexBox","script":"","request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"End","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"20debfe8-dac5-4f48-adbe-0efba60642a7","fieldName":"oHBoxBOMDetails","fieldParent":"f77d9dbd-7a1e-47c0-8f80-a611bbd2c219","fieldPos":484,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"1b554945-3d13-4cc6-d963-3c1f33cf1d9f","fieldName":"close","fieldParent":"20debfe8-dac5-4f48-adbe-0efba60642a7","fieldPos":485,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"oDialogBOMDetails.close();","script":"oDialogBOMDetails.close();","translation":[]}]},{"fieldNo":"a516c96d-70f4-4958-c664-f2881b30aeda","fieldName":"diaSubmit","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":486,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialog","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3fbc7b82-bc04-4590-bf07-a99ca2a92e15","fieldName":"oBarSumbitCustomHeader","fieldParent":"a516c96d-70f4-4958-c664-f2881b30aeda","fieldPos":487,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"3c7e2049-49a4-485d-8cf5-4cbafd5bec6f","fieldName":"SumbitRight","fieldParent":"3fbc7b82-bc04-4590-bf07-a99ca2a92e15","fieldPos":488,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"7c680521-2762-4296-9eea-19a208e86bf6","fieldName":"btnCloseSumbit","fieldParent":"3c7e2049-49a4-485d-8cf5-4cbafd5bec6f","fieldPos":489,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"diaSubmit.close();","translation":[]}]},{"fieldNo":"6f54aeec-0174-4861-eb1d-d53e1d6f7e40","fieldName":"SumbitMiddle","fieldParent":"3fbc7b82-bc04-4590-bf07-a99ca2a92e15","fieldPos":490,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"9011a4d9-c871-4b7c-cd84-151f2dffd981","fieldName":"oLabelSumbitHeader","fieldParent":"6f54aeec-0174-4861-eb1d-d53e1d6f7e40","fieldPos":491,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"7f83dc32-04ac-4914-8b60-f1ae140179a9","fieldName":"oVBox_SumbitForApp1","fieldParent":"a516c96d-70f4-4958-c664-f2881b30aeda","fieldPos":492,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"renderType","grouping":"Properties","value":"Div","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"c1676ebf-6a7a-4ceb-a6fe-2a71da9730ec","fieldName":"oLabel_SumbitForApp","fieldParent":"7f83dc32-04ac-4914-8b60-f1ae140179a9","fieldPos":493,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"textAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiLargeMarginTop","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"768743a9-8ca6-4ddd-c58a-eee69cbeda5c","fieldName":"oHBox_SumbitForApp","fieldParent":"7f83dc32-04ac-4914-8b60-f1ae140179a9","fieldPos":494,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTopBottom","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"c0ba5dda-ec76-429c-cf8e-8555b0f822dc","fieldName":"oButtonSumbitForApp","fieldParent":"768743a9-8ca6-4ddd-c58a-eee69cbeda5c","fieldPos":495,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.show(0);\n//If the Selected key is Site Extension it will trigger the workflow \nif (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n\n    // Calling the api to update the status from created to Submitted for approval\n    // and also make an entry into the approval history table for the approval\n    // Changed to custom workflow\n    key = oTableAddSite.getModel().getData();\n    var statusArr = []\n    // check which transaction(create/change)\n    if (ptSiteIconTabBar.getSelectedKey() === \"site\") {\n        \n        key.forEach(data => {\n            if (data.ptSiteBomStatus === g_createStatusData[0].status) {\n                statusArr.push(data);\n            }\n        })\n    } else if (ptSiteIconTabBar.getSelectedKey() === \"site_change\") {\n        \n        var site = oTablePTSiteHeader.getModel().getData()[0].rscSite\n        key.forEach(data => {\n            if (data.ptSiteBomStatus === g_createStatusData[0].status && data.rscSite === site) {\n                statusArr.push(data);\n            }\n        })\n    }\n    // checking if the status is CREATED and specific site(in change mode) only then allow for SUBMITTED FOR APPROVAL status change\n    if (statusArr.length > 0) {\n        var options = {\n            data: {\n                subMitData: statusArr,\n                approverIds: 1\n            }\n        };\n        apioRestAPIUpdatePTBOMStatus(options);\n        diaSubmit.close();\n    } else {\n        diaSubmit.close();\n        getDialog(lblNotCreatedStatus.getText())\n    }\n\n    sap.ui.core.BusyIndicator.hide();\n} else {\n    //Else will be triggered for the Global Workflow TO Change the status\n    var ptBOMHeader = oTableHeader.getModel().getData();\n    // Use this script in your App or from external systems\n    /**\n     * Name: BOM_WORKFLOW_API\n     * Description: \n     * \n     * Path: /ptBomGlobalUpdate\n     * Method: POST\n     * \n     */\n    var options = {\n        data: {\n            subMitData: ptBOMHeader,\n            approverIds: 2\n        }\n    };\n\n    apiupdatePtBomGlobalStatus(options);\n\n}\n\n","translation":[]}]},{"fieldNo":"e17c089c-65e2-4c9e-f218-c06f4643f0b1","fieldName":"oDialogDeleteAlert","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":496,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialog","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"981b36fe-926b-4459-c461-cecfeb5ee5d2","fieldName":"oBarDeleteCustomHeader","fieldParent":"e17c089c-65e2-4c9e-f218-c06f4643f0b1","fieldPos":497,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"66a68f57-60fa-4f30-ba4e-af5b8c650fd4","fieldName":"DeleteRight","fieldParent":"981b36fe-926b-4459-c461-cecfeb5ee5d2","fieldPos":498,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"59f89693-0323-46c9-b07c-b0d61f936c16","fieldName":"btnCloseDelete","fieldParent":"66a68f57-60fa-4f30-ba4e-af5b8c650fd4","fieldPos":499,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oDialogDeleteAlert.close();","translation":[]}]},{"fieldNo":"d9c40548-4a82-4c62-b13d-0b0f4cb2618d","fieldName":"DeleteMiddle","fieldParent":"981b36fe-926b-4459-c461-cecfeb5ee5d2","fieldPos":500,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"a6539171-f24a-42a4-f267-d63f634f8750","fieldName":"oLabelDeleteHeader","fieldParent":"d9c40548-4a82-4c62-b13d-0b0f4cb2618d","fieldPos":501,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"b69ae5aa-5626-432e-8187-69a77a69e985","fieldName":"oVBoxDelete","fieldParent":"e17c089c-65e2-4c9e-f218-c06f4643f0b1","fieldPos":502,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"25a4e70d-aa5e-490b-8922-a24e4146208c","fieldName":"oLabelDeleteMsg","fieldParent":"b69ae5aa-5626-432e-8187-69a77a69e985","fieldPos":503,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"3c122158-f52b-4a39-8831-878fc6b9be9e","fieldName":"oHBoxDelete","fieldParent":"b69ae5aa-5626-432e-8187-69a77a69e985","fieldPos":504,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"c7f1d85c-097d-4c6a-ba71-07bb31081d30","fieldName":"oButtonDeleteAlertComplete","fieldParent":"3c122158-f52b-4a39-8831-878fc6b9be9e","fieldPos":505,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"greenbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"var rowdata = oTableComponent.getModel().getData()[g_create_deelete_position];\ng_change_detact = true;\nif (oIconTabBar.getSelectedKey() === g_create_tab) {\n    RemoveFromModel()\n} else if (oIconTabBar.getSelectedKey() === g_change_tab || oIconTabBar.getSelectedKey() === g_display_tab) {\n    deleteRow()\n}\n\nasync function deleteRow() {\n    var id = rowdata.hasOwnProperty('id') ? rowdata.id : null;\n    var options = {\n        data: {\n            id: id\n        }\n    };\n    if (id !== null) {\n        delete_component_holder.getModel().getData().push({\n            id: id,\n            deleteFlag: true\n        });\n        RemoveFromModel();\n        oDialogDeleteAlert.close();\n    } else {\n        RemoveFromModel();\n    }\n}\n\nfunction RemoveFromModel() {\n    if (rowdata.hasOwnProperty(\"itemNo\")) {\n        ModelData.Delete(oTableComponent, \"itemNo\", rowdata.itemNo, \"EQ\");\n    } else {\n        ModelData.Delete(oTableComponent, \"dummyID\", rowdata.dummyID, \"EQ\");\n    }\n\n    g_create_deelete_position = 0;\n    oTableComponent.setTitle(lebTotal.getText() + \":\" + oTableComponent.getModel().getData().length);\n    oDialogDeleteAlert.close();\n}","translation":[]}]},{"fieldNo":"102d4c82-35c3-4e38-9389-69998d776ec2","fieldName":"oDialogWarningFilterChange","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":506,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialog","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"2b4f4261-ea93-4ea4-e941-6254018ba0dd","fieldName":"oBarWarningCustomHeader","fieldParent":"102d4c82-35c3-4e38-9389-69998d776ec2","fieldPos":507,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"f5dd764e-1e26-4d3d-f8a6-56ad2a8a95bd","fieldName":"WarningRight","fieldParent":"2b4f4261-ea93-4ea4-e941-6254018ba0dd","fieldPos":508,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"a95e0a2e-dde0-41dc-fa43-e3ad0103782d","fieldName":"btnCloseWarning","fieldParent":"f5dd764e-1e26-4d3d-f8a6-56ad2a8a95bd","fieldPos":509,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"doNothing();","translation":[]}]},{"fieldNo":"358987d0-e873-4765-dfaf-8b79257397b0","fieldName":"WarningMiddle","fieldParent":"2b4f4261-ea93-4ea4-e941-6254018ba0dd","fieldPos":510,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"6835b848-ee5a-4f61-8404-1a7c3ab79f9c","fieldName":"oLabelWarningHeader","fieldParent":"358987d0-e873-4765-dfaf-8b79257397b0","fieldPos":511,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"80a6577e-d804-4cc7-998e-da754dcfedba","fieldName":"oVBox9","fieldParent":"102d4c82-35c3-4e38-9389-69998d776ec2","fieldPos":512,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"a1cb2e64-1b1b-4c5e-83ef-25e075ed9542","fieldName":"oLabel1","fieldParent":"80a6577e-d804-4cc7-998e-da754dcfedba","fieldPos":513,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiLargeMarginTop","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"28b1cbf7-90f3-4707-95ee-d9d1c414c0ec","fieldName":"oLabel2","fieldParent":"80a6577e-d804-4cc7-998e-da754dcfedba","fieldPos":514,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"5da4c647-8c4d-490d-b14e-279e033614a1","fieldName":"oHBox","fieldParent":"80a6577e-d804-4cc7-998e-da754dcfedba","fieldPos":515,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTopBottom","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"8cf48373-7170-4c2b-b7fa-8d3878395f41","fieldName":"oButtonYes","fieldParent":"5da4c647-8c4d-490d-b14e-279e033614a1","fieldPos":516,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"120px","script":"","translation":[]},{"attribute":"type","grouping":"Properties","value":"Emphasized","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"updateNewData();","translation":[]}]},{"fieldNo":"eba354ed-0129-4450-ab8c-6f43827356c8","fieldName":"dialog_save","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":517,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialog","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c949e92c-6e7c-46e2-f2df-2698a283d251","fieldName":"oBarSaveCustomHeader","fieldParent":"eba354ed-0129-4450-ab8c-6f43827356c8","fieldPos":518,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"6df046e9-5290-4e80-edbb-f6ee37f82e8a","fieldName":"SaveRight","fieldParent":"c949e92c-6e7c-46e2-f2df-2698a283d251","fieldPos":519,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"40f1a12d-db6c-4ce6-ce2b-a934c438e9fa","fieldName":"btnCloseSave","fieldParent":"6df046e9-5290-4e80-edbb-f6ee37f82e8a","fieldPos":520,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"dialog_save.close();","translation":[]}]},{"fieldNo":"ee8f32bf-d6e2-4eb6-84e0-28053e7da358","fieldName":"SaveMiddle","fieldParent":"c949e92c-6e7c-46e2-f2df-2698a283d251","fieldPos":521,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"2a71e81b-6fc0-4a33-eeda-f8e686f8a47e","fieldName":"oLabelSaveHeader","fieldParent":"ee8f32bf-d6e2-4eb6-84e0-28053e7da358","fieldPos":522,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"62ec9cbc-0a2a-43e8-ae9e-fb88542b4038","fieldName":"oVBox_Save1","fieldParent":"eba354ed-0129-4450-ab8c-6f43827356c8","fieldPos":523,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"renderType","grouping":"Properties","value":"Div","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"d87c1c2d-bfea-43a1-eeaa-ef0bafae383a","fieldName":"oLabel_Save","fieldParent":"62ec9cbc-0a2a-43e8-ae9e-fb88542b4038","fieldPos":524,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"textAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiLargeMarginTop","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"04d1be36-f58a-4cc6-ae91-f6b6cf2f7d39","fieldName":"oHBox_Save","fieldParent":"62ec9cbc-0a2a-43e8-ae9e-fb88542b4038","fieldPos":525,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTopBottom","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"e12186eb-2c39-4912-df80-39762f558707","fieldName":"oButtonSaveFinal","fieldParent":"04d1be36-f58a-4cc6-ae91-f6b6cf2f7d39","fieldPos":526,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"SaveData();","translation":[]}]},{"fieldNo":"ed043b16-1950-4fea-ef61-3ae3f4a309c0","fieldName":"dialog_back","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":527,"fieldType":"sap.m.Dialog","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialog","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"dfa57899-b44f-4fca-a1d4-2aaf10f03521","fieldName":"oBarBackCustomHeader","fieldParent":"ed043b16-1950-4fea-ef61-3ae3f4a309c0","fieldPos":528,"fieldType":"sap.m.Bar","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"0755c514-57c8-4024-be81-af4922f27caf","fieldName":"BackRight","fieldParent":"dfa57899-b44f-4fca-a1d4-2aaf10f03521","fieldPos":529,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"e8f6412d-b839-4539-c07c-377687a2c544","fieldName":"btnCloseBack","fieldParent":"0755c514-57c8-4024-be81-af4922f27caf","fieldPos":530,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"g_change_detact = true;\ndialog_back.close();","translation":[]}]},{"fieldNo":"02e98894-0b01-429f-dcdc-02ac88736170","fieldName":"BackMiddle","fieldParent":"dfa57899-b44f-4fca-a1d4-2aaf10f03521","fieldPos":531,"fieldType":"neptune.BarContent","script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"efeb3749-37fd-4722-c304-3cdedfbb0f21","fieldName":"oLabelBackHeader","fieldParent":"02e98894-0b01-429f-dcdc-02ac88736170","fieldPos":532,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"cda0a9f7-b99d-4204-b340-f12aacc5bab5","fieldName":"oVBox_Back","fieldParent":"ed043b16-1950-4fea-ef61-3ae3f4a309c0","fieldPos":533,"fieldType":"sap.m.VBox","script":"","request":[],"response":[],"attributes":[{"attribute":"renderType","grouping":"Properties","value":"Div","script":"","translation":[]},{"attribute":"height","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"d2ac7b53-a32b-4adf-83bc-fa3a0b6fced1","fieldName":"oLabel_Back","fieldParent":"cda0a9f7-b99d-4204-b340-f12aacc5bab5","fieldPos":534,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"textAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiLargeMarginTop","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"1dc8a154-b12a-454f-bec2-63075db55d75","fieldName":"oLabel","fieldParent":"cda0a9f7-b99d-4204-b340-f12aacc5bab5","fieldPos":535,"fieldType":"sap.m.Label","script":"","request":[],"response":[],"attributes":[{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"e770f5e5-2184-4f04-b09b-06762e886c82","fieldName":"oHBox_Back","fieldParent":"cda0a9f7-b99d-4204-b340-f12aacc5bab5","fieldPos":536,"fieldType":"sap.m.HBox","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTopBottom","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"a686aa9c-158a-46e4-9dec-9a09845e405c","fieldName":"oButtonConfirm","fieldParent":"e770f5e5-2184-4f04-b09b-06762e886c82","fieldPos":537,"fieldType":"sap.m.Button","script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"g_change_detact = false;\nif (g_button_detact === \"reset\") {\n    clearFilter();\n    g_button_detact = \"\";\n}\n\nif (g_button_detact === \"cancel\") {\n    cancelBtnActions()\n    g_button_detact = \"\";\n}\n\nif (g_button_detact === \"tab_change\") {\n    if (oIconTabBarPTBOM.getSelectedKey() === \"GLOBAL\") {\n        oIconTabBarPTBOM.setSelectedKey(\"SITE\");\n        oButtonFooterSave.setVisible(true);\n        oButtonFooterSubmitApproval.setVisible(true);\n        oButtonFooterSaveSite.setVisible(false);\n        oButtonFooterSubmitApprovalSite.setVisible(false);\n    } else if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n        oIconTabBarPTBOM.setSelectedKey(\"GLOBAL\");\n        oButtonFooterSave.setVisible(false);\n        oButtonFooterSubmitApproval.setVisible(false);\n        oButtonFooterSaveSite.setVisible(true);\n        oButtonFooterSubmitApprovalSite.setVisible(true);\n    }\n    clearSiteFilter();\n    oVBoxProductNumber.setVisible(true);\n    oVBoxVariant.setVisible(true);\n    oVBoxShiptoCountry.setVisible(true);\n    oButtonPTBOMCreate.setVisible(true);\n    clearFilter();\n    oVBoxSiteProductNumber.setVisible(true);\n    oVBoxSiteVariant.setVisible(true);\n    oVBoxSiteShiptoCountry.setVisible(true);\n    btnSiteChange.setVisible(true);\n    btnSiteView.setVisible(true);\n    btnSiteReset.setVisible(true);\n    btnSiteExpand.setVisible(true);\n    btnSiteExtension.setVisible(true);\n    oBarFooter.setVisible(false);\n    oBarFooter.setVisible(false);\n}\noIconpdf.setVisible(false);\noIconexcel.setVisible(false);\ndialog_back.close()","translation":[]}]},{"fieldNo":"371fa7a1-169f-475d-a892-90e37c4213d8","fieldName":"oDialogLogoutMessage","fieldParent":"6689b1cb-9f03-4432-df26-baeff58ab395","fieldPos":538,"fieldType":"sap.m.Dialog","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialog","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"830e5213-27d5-468c-af8d-8dc290d691bd","fieldName":"oBarLogoutCustomHeader","fieldParent":"371fa7a1-169f-475d-a892-90e37c4213d8","fieldPos":539,"fieldType":"sap.m.Bar","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setCustomHeader","script":"","translation":[]}]},{"fieldNo":"2f9b5da7-d8c7-4491-fff9-36b87733d3f2","fieldName":"LogoutRight","fieldParent":"830e5213-27d5-468c-af8d-8dc290d691bd","fieldPos":540,"fieldType":"neptune.BarContent","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"3a784bed-9506-4fd3-f39b-dd68c53ea9a3","fieldName":"btnCloseLogout","fieldParent":"2f9b5da7-d8c7-4491-fff9-36b87733d3f2","fieldPos":541,"fieldType":"sap.m.Button","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"close","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://decline","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oDialogLogoutMessage.close();","translation":[]}]},{"fieldNo":"2d5d44a2-b077-4b6c-dff0-cd1d4906e5ee","fieldName":"LogoutMiddle","fieldParent":"830e5213-27d5-468c-af8d-8dc290d691bd","fieldPos":542,"fieldType":"neptune.BarContent","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentMiddle","script":"","translation":[]}]},{"fieldNo":"01059101-d6e6-4fba-b8b4-dd0523e14825","fieldName":"oLabelLogoutHeader","fieldParent":"2d5d44a2-b077-4b6c-dff0-cd1d4906e5ee","fieldPos":543,"fieldType":"sap.m.Label","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"header_text_new inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"c2c40acf-6a42-4f28-bc09-704eb4999b24","fieldName":"oPanelLogoutMessage","fieldParent":"371fa7a1-169f-475d-a892-90e37c4213d8","fieldPos":544,"fieldType":"sap.m.Panel","disabled":true,"script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0189b35f-fc2c-4903-d785-def0027a6665","fieldName":"oVBoxLog","fieldParent":"c2c40acf-6a42-4f28-bc09-704eb4999b24","fieldPos":545,"fieldType":"sap.m.VBox","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"88317069-7d49-44ff-ee95-393807f2a75e","fieldName":"oText","fieldParent":"0189b35f-fc2c-4903-d785-def0027a6665","fieldPos":546,"fieldType":"sap.m.Label","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Bold","script":"","translation":[]}]},{"fieldNo":"a511ac2a-816b-46ae-bdfb-4ee5204dd975","fieldName":"oHBox4","fieldParent":"c2c40acf-6a42-4f28-bc09-704eb4999b24","fieldPos":547,"fieldType":"sap.m.HBox","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"85b6db93-b70a-42fb-8f66-37fe88e63a92","fieldName":"logoutYes","fieldParent":"a511ac2a-816b-46ae-bdfb-4ee5204dd975","fieldPos":548,"fieldType":"sap.m.Button","disabled":true,"script":"","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"greenbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"AppCache.Logout();","translation":[]}]},{"fieldNo":"fca58a61-b64e-4dd6-a898-e419f179a398","fieldName":"JS","fieldParent":99999,"fieldPos":549,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"5537d6fd-2a46-4a51-dbbc-832548f96bdc","fieldName":"pdfFileUploadDelete","fieldParent":"fca58a61-b64e-4dd6-a898-e419f179a398","fieldPos":550,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"b06ca130-245a-4b27-9ed7-b2179697fa0a","fieldName":"FunctionPDFAttach","fieldParent":"5537d6fd-2a46-4a51-dbbc-832548f96bdc","fieldPos":551,"fieldType":"neptune.Script","script":"/**\n * Name: PDF Attach \n * Description:  Handle all PDF related work in table and api call\n * Created By : Swati\n * Created At: 11/16/2020\n * CR:   \n */\n\n/* Used while retrieving the file, to open the pdf*/\nfunction b64toBlob(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n\n    const blob = new Blob(byteArrays, {\n        type: contentType\n    });\n    return blob;\n}\n\n\n/*function to convery buffer to base64 to opne in new tab*/\nfunction arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\n/*upload pdf tp s3 Bucket-End*/","request":[],"response":[],"attributes":[]},{"fieldNo":"1c5ef777-a14f-4056-c292-a0a5b8f65574","fieldName":"Download","fieldParent":"fca58a61-b64e-4dd6-a898-e419f179a398","fieldPos":552,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"a1099502-3d46-491a-8780-93de8f222620","fieldName":"PDFDownloadCreatePage","fieldParent":"1c5ef777-a14f-4056-c292-a0a5b8f65574","fieldPos":553,"fieldType":"neptune.Script","script":"/**\n * Name: PDFDownloadCreatePage\n * Description: genarate the PDF from the UI (Create,Change,Display) and show it as blob URL.\n * Created By :  Suman Dey  \n * Created At: 09/25/2020\n */\n\n\nfunction genaratePDFData(headerTable, itemTable, siteTable) {\n    var doc = new jsPDF('l', 'pt', [1300, 650])\n    doc.setFontSize(14);\n    var height = doc.internal.pageSize.height; \n    var width = doc.internal.pageSize.width; \n    let headerData = headerTable.getModel().getData();\n    let headerItem = itemTable.getModel().getData();\n    var fileNamePDF = exportPTBOMname.getText() + headerData[0].bomID + \".pdf\";\n    var oTableHeaderPDF = getPDFData(headerTable);\n    var columnsArrHeader = oTableHeaderPDF.columnsArrHeader;\n    var finalDataHeader = oTableHeaderPDF.finalDataItem;\n    var oTableComponentPDF = getPDFData(itemTable);\n    var columnsArrItem = oTableComponentPDF.columnsArrHeader;\n    var finalDataItem = oTableComponentPDF.finalDataItem;\n    doc.setFontSize(18);\n    var text = oLabelPDFTitle.getText();\n    var xOffset = (doc.internal.pageSize.width / 2) - (doc.getStringUnitWidth(text) * doc.internal.getFontSize() / 2);\n    doc.text(text, xOffset, 28, { \n        align: \"center\"\n    });\n\n    doc.setFontSize(14);\n    doc.text(ptBoMHeaderL.getText(), 40, 48, { \n        align: \"center\"\n    });\n    doc.autoTable({\n        head: [\n            columnsArrHeader\n        ],\n        body: finalDataHeader,\n        headStyles: {\n            fillColor: [10, 140, 170],\n            fontSize: 8,\n            columnWidth: 'fixed'\n\n        },\n        bodyStyles: {\n            fontSize: 7\n        },\n\n        styles: {\n            overflow: 'linebreak',\n            columnWidth: 'fixed'\n        },\n\n        margin: {\n            top: 68\n        },\n        theme: 'grid',\n        styles: {\n            halign: 'left'\n        }\n    });\n    if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\" &&\n        ptSiteIconTabBar.getSelectedKey() === \"site\") {\n        if (siteTable.getModel() && siteTable.getModel().getData().length > 0) {\n            var oTableAddSitePDF = getPDFData(siteTable);\n            var siteColArr = oTableAddSitePDF.columnsArrHeader;\n            var finalDataSite = oTableAddSitePDF.finalDataItem;\n\n            doc.autoTable({\n                head: [\n                    siteColArr\n                ],\n                body: finalDataSite,\n                headStyles: {\n                    fillColor: [10, 140, 170],\n                    fontSize: 8,\n                    columnWidth: 'fixed'\n\n                },\n                bodyStyles: {\n                    fontSize: 7\n                },\n\n                styles: {\n                    overflow: 'linebreak',\n                    columnWidth: 'fixed'\n                },\n\n                margin: {\n                    top: 68\n                },\n                theme: 'grid',\n                styles: {\n                    halign: 'left'\n                }\n            });\n        }\n    }\n    doc.text(`${lblCompContrlNum.getText()} (${headerItem.length})`, 40, doc.lastAutoTable.finalY + 20, { \n        align: \"center\"\n    });\n\n    var links = [];\n    doc.autoTable({\n        head: [\n            columnsArrItem\n        ],\n        body: finalDataItem,\n        headStyles: {\n            fillColor: [10, 140, 170],\n            fontSize: 8,\n            columnWidth: 'fixed'\n\n        },\n        bodyStyles: {\n            fontSize: 7\n        },\n        columnStyles: {\n            0: {\n                cellWidth: 50\n            },\n            1: {\n                cellWidth: 100\n            },\n            2: {\n                cellWidth: 100\n            },\n            3: {\n                cellWidth: 100\n            },\n            4: {\n                cellWidth: 120\n            },\n            5: {\n                cellWidth: 100\n            },\n            6: {\n                cellWidth: 100\n            },\n            7: {\n                cellWidth: 100\n            },\n            8: {\n                cellWidth: 100\n            },\n            9: {\n                cellWidth: 100\n            },\n            10: {\n                cellWidth: 150\n            },\n            11: {\n                cellWidth: 100\n            },\n        },\n        startY: doc.lastAutoTable.finalY + 40,\n        styles: {\n            columnWidth: 'fixed'\n        },\n        theme: 'grid',\n        styles: {\n            halign: 'left'\n        },\n        didParseCell: function(data) {\n            if (data.section === \"body\") {\n                if (validPDFURL(String(data.cell.raw))) {\n                    data.cell.text[0] = \"\";\n                }\n            }\n        },\n        didDrawCell: function(data) {\n            if (data.section === \"body\") {\n                if (validPDFURL(String(data.cell.raw))) {\n                    var first_split = data.cell.raw.split(\"?\")[0];\n                    var split = first_split.split('/');\n                    links.push({\n                        x: data.cell.x,\n                        y: data.cell.y,\n                        link: data.cell.raw,\n                        text: decodeURIComponent(split[split.length - 1])\n                    })\n                    data.cell.text[0] = \"\";\n                }\n            }\n        },\n        didDrawPage: function() {\n            for (var i = 0; i < links.length; i++) {\n                var text = links[i].text.split('.');\n                var out = text[0].substring(0, 10) + \".\" + text[1];\n                doc.setFontSize(7);\n                doc.textWithLink(out, links[i].x + 6, links[i].y + 10, {\n                    url: links[i].link\n                });\n            }\n            links = [];\n        }\n    });\n\n    var pageCount = doc.internal.getNumberOfPages(); //Total Page Number\n    for (i = 0; i < pageCount; i++) {\n        doc.setPage(i);\n        let pageCurrent = doc.internal.getCurrentPageInfo().pageNumber; //Current Page\n        doc.setFontSize(8);\n        doc.text('page: ' + pageCurrent + '/' + pageCount, 10, 20);\n    }\n\n    window.open(doc.output('bloburl', {\n        filename: fileNamePDF\n    }), '_blank');\n    doc.save(fileNamePDF);\n}\n\n/**\n * Name: getPDFData\n * Description: genarate dynamic pdf data depending on table data\n * Created By :  Suman Dey  \n * Created At:12/14/2020\n * @param {Object} tableName send the object of the table.\n * @return {Object} its return json object with column name array and column item array\n * {\n        columnsArrHeader,\n        finalDataItem\n    }\n */\nfunction getPDFData(tableName, data) {\n    var columnsArrHeader = [];\n    var bindingValue = []\n    let x = 0;\n    if (tableName.getColumns()[x].getLabel().getText().toLowerCase().trim() === \"action\") {\n        x = 1;\n    }\n    for (x; x < tableName.getColumns().length; x++) {\n        var column = tableName.getColumns()[x];\n        var label = column.getLabel();\n        if (label && column.getVisible()) {\n            columnsArrHeader.push(label.getText());\n            bindingValue.push(column.mProperties.filterProperty);\n        }\n    }\n    var tableData;\n    if (data === undefined) {\n        tableData = tableName.getModel().getData();\n    } else {\n        tableData = data;\n    }\n\n\n    var finalDataItem = [];\n    for (let x = 0; x < tableData.length; x++) {\n        var childArr = [];\n        var data = tableData[x];\n        bindingValue.forEach((key, index) => {\n            if (data[key] === null || data[key] === undefined) {\n                data[key] = \"\";\n            }\n            if (Object.prototype.toString.call(data[key]) === \"[object Date]\") {\n                if (isNaN(new Date(data[key]).getTime())) {\n                    data[key] = \"\";\n                }\n            }\n            if (data[key].toString().length < 10 ||\n                key.toLowerCase() === \"gtin\" ||\n                data[key] === \"\" ||\n                isNaN(new Date(Number(data[key])))) {\n                if (key === \"refLink\") {\n                    if (data.hasOwnProperty(\"preSignedLink\")) {\n                        childArr[index] = data[\"preSignedLink\"].toString();\n                    } else {\n                        childArr[index] = (data[key] === undefined || data[key] === null) ? \"\" : data[key];\n                    }\n                } else {\n                    childArr[index] = (data[key] === undefined || data[key] === null) ? \"\" : data[key];\n                }\n            } else {\n                childArr[index] = convertDate(data[key]);\n            }\n\n        });\n        finalDataItem[x] = childArr;\n    }\n    var finalObj = {\n        columnsArrHeader,\n        finalDataItem\n    }\n    return finalObj;\n}\n\n/**\n * Name: genaratePDFDataDisplay\n * Description:function to download PDF for the display list data.\n * Created By :  Suman Dey  \n * Created At:12/14/2020\n */\nfunction genaratePDFDataDisplay(table) {\n    var doc = new jsPDF('l', 'pt', [1300, 650])\n    doc.setFontSize(14);\n    var height = doc.internal.pageSize.height; \n    var width = doc.internal.pageSize.width; \n    var pdfData;\n    /*If no column filters  then it will download all data from model.*/\n    if (table.getBinding().aFilters.length === 0 &&\n        table.getBinding().aSorters.length === 0) {\n        pdfData = getPDFData(table, model_display_data_holder.getModel().getData());\n    } else {\n        /*If column filters exits then it will download the filtered data */\n        var tableData = model_display_data_holder.getModel().getData();\n        var index = table.getBinding().aIndices;\n        var data = [];\n        for (var i = 0; i < index.length; i++) {\n            data.push(tableData[index[i]]);\n        }\n        pdfData = getPDFData(table, data);\n    }\n\n    var columnsArrHeader = pdfData.columnsArrHeader;\n    var columnsDataItem = pdfData.finalDataItem;\n    var fileNamePDF = exportDisplayFileName.getText() + \".pdf\";\n    doc.setFontSize(18);\n    var text = oLabelPDFTitle.getText();\n    var xOffset = (doc.internal.pageSize.width / 2) - (doc.getStringUnitWidth(text) * doc.internal.getFontSize() / 2);\n    doc.text(text, xOffset, 28, { \n        align: \"center\"\n    });\n    doc.setFontSize(14);\n    doc.text(ptBoMHeaderL.getText(), 40, 48, { \n        align: \"center\"\n    });\n    var links = [];\n    doc.autoTable({\n        head: [\n            columnsArrHeader\n        ],\n        body: columnsDataItem,\n        headStyles: {\n            fillColor: [10, 140, 170],\n            fontSize: 8,\n            columnWidth: 'fixed'\n\n        },\n        bodyStyles: {\n            fontSize: 7\n        },\n\n        styles: {\n            overflow: 'linebreak',\n            columnWidth: 'fixed'\n        },\n\n        margin: {\n            top: 68\n        },\n        theme: 'grid',\n        styles: {\n            halign: 'left'\n        },\n        didParseCell: function(data) {\n            if (data.section === \"body\") {\n                if (validPDFURL(String(data.cell.raw))) {\n                    data.cell.text[0] = \"\";\n                }\n            }\n        },\n        didDrawCell: function(data) {\n            if (data.section === \"body\") {\n                if (validPDFURL(String(data.cell.raw))) {\n                    var first_split = data.cell.raw.split(\"?\")[0];\n                    var split = first_split.split('/');\n                    links.push({\n                        x: data.cell.x,\n                        y: data.cell.y,\n                        link: data.cell.raw,\n                        text: decodeURIComponent(split[split.length - 1])\n                    })\n                    data.cell.text[0] = \"\";\n                }\n            }\n        },\n        didDrawPage: function() {\n            for (var i = 0; i < links.length; i++) {\n                var text = links[i].text.split('.');\n                var out = text[0].substring(0, 10) + \".\" + text[1];\n                doc.setFontSize(7);\n                doc.textWithLink(out, links[i].x + 6, links[i].y + 10, {\n                    url: links[i].link\n                });\n            }\n            links = [];\n        }\n    });\n    var pageCount = doc.internal.getNumberOfPages(); //Total Page Number\n    for (i = 0; i < pageCount; i++) {\n        doc.setPage(i);\n        let pageCurrent = doc.internal.getCurrentPageInfo().pageNumber; //Current Page\n        doc.setFontSize(8);\n        doc.text('page: ' + pageCurrent + '/' + pageCount, 10, 20);\n    }\n    window.open(doc.output('bloburl', {\n        filename: fileNamePDF\n    }), '_blank');\n    doc.save(fileNamePDF);\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"a442f655-167e-41ed-f1eb-1f87660bc0b4","fieldName":"ExcelDataCreatePage","fieldParent":"1c5ef777-a14f-4056-c292-a0a5b8f65574","fieldPos":554,"fieldType":"neptune.Script","script":"/**\n * Name: ExcelDataCreatePage\n * Description: function to genarate excel in Create/change/display modes\n * Created By :  Suman Dey  \n * Created At: 09/25/2020\n */\n\nfunction genarateExcelData(headerTable, itemTable, siteTable) {\n    var headerData = headerTable.getModel().getData();\n    var itemData = itemTable.getModel().getData();\n    var siteExtensionDetails = [];\n    if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\" &&\n        ptSiteIconTabBar.getSelectedKey() === \"site\") {\n\n        if (siteTable.getModel()) {\n            siteExtensionDetails = siteTable.getModel().getData();\n        }\n        var headerDataFinalSite = createExcelData(siteTable);\n        var headerSheetSite = createHTMLTable(headerDataFinalSite);\n    }\n    var fileName = exportPTBOMname.getText() + headerData[0].bomID + \".xlsx\";\n    var headerDataFinal = createExcelData(headerTable);\n    var itemDataFinal = createExcelData(itemTable);\n    var headerSheet = createHTMLTable(headerDataFinal);\n    var itemSheet = createHTMLTable(itemDataFinal);\n    var book = TableToExcel.tableToBook(headerSheet, {\n        sheet: {\n            name: tabHeaderPB.getText()\n        }\n    });\n    TableToExcel.tableToSheet(book, itemSheet, {\n        sheet: {\n            name: `${lblCompContrlNum.getText()} (${itemData.length})`\n        }\n    });\n    if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\" &&\n        ptSiteIconTabBar.getSelectedKey() === \"site\") {\n        if (itemTable.getModel() && itemTable.getModel().getData().length > 0) {\n            TableToExcel.tableToSheet(book, headerSheetSite, {\n                sheet: {\n                    name: oLabelSitePTSiteExtension.getText()\n                }\n            });\n        }\n    }\n    TableToExcel.save(book, fileName);\n}\n\n/**\n * Name: downloadExcelDisplay\n * Description: function to Start the download of excel in display mode from ptbom global and ptbom site \n * Created By :  Suman Dey  \n * Created At: 04/01/2021\n */\nfunction downloadExcelDisplay(table) {\n    var fileName = exportDisplayFileName.getText() + \".xlsx\";\n    var tableJsonData = [];\n    /*If no column filters  then it will download all data from model.*/\n    if (table.getBinding().aFilters.length === 0 &&\n        table.getBinding().aSorters.length === 0) {\n        tableJsonData = createExcelData(table, model_display_data_holder.getModel().getData());\n    } else {\n        /*If column filters exits then it will download the filtered data */\n        var tableData = model_display_data_holder.getModel().getData();\n        var index = table.getBinding().aIndices;\n        var data = [];\n        for (var i = 0; i < index.length; i++) {\n            data.push(tableData[index[i]]);\n        }\n        tableJsonData = createExcelData(table, data);\n    }\n\n    buildTableFromJSON(1, tableJsonData, fileName);\n\n}\n\n/**\n * Name: buildTableFromJSON\n * Description: Start building the excel using exceljs library\n * Created By :  Suman Dey  \n * Created At: 04/01/2021\n * Warning: It can handle export up to 50000 data do not go beyond this limit\n * @param {Number} rowNumber this is the starting point of excel default to 0 \n * @param {JSON} json data for downloading the excel\n * @param {String} fileName name of the file.\n */\nasync function buildTableFromJSON(rowNumber, json, fileName) {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Sheet');\n    var header = Object.keys(json[0]);\n    var headerRow = worksheet.getRow(rowNumber);\n    header.forEach((name, index) => {\n        headerRow.getCell(index + 1).value = name;\n        headerRow.getCell(index + 1).font = {\n            size: 11,\n            bold: true\n        }\n\n    });\n    rowNumber = rowNumber + 1;\n    for (let i = 0; i < json.length; i++) {\n        const value = json[i];\n        var row = worksheet.getRow(rowNumber);\n        header.forEach((name, index) => {\n            row.getCell(index + 1).value = value[name];\n            row.getCell(index + 1).font = {\n                size: 11\n            }\n        });\n        rowNumber = rowNumber + 1;\n    }\n\n    var buffer = await workbook.xlsx.writeBuffer();\n    var blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    });\n    var link = window.document.createElement(\"a\");\n    link.setAttribute(\"href\", window.URL.createObjectURL(blob));\n    link.setAttribute(\"download\", fileName + \".xlsx\");\n    link.click();\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"d38be373-47e5-49de-97d2-5dd6214031c5","fieldName":"ExcelDownload","fieldParent":"1c5ef777-a14f-4056-c292-a0a5b8f65574","fieldPos":555,"fieldType":"neptune.Script","script":"/**\n * Name: createHTMLTable\n * Description: Function to create HTML table using json\n * Created By :  Suman Dey  \n * Created At: 09/25/2020\n * CR:   \n * @param {json} myList send the table data as json \n */\n\nfunction createHTMLTable(myList) {\n    var html = document.createElement('html');\n    var head = document.createElement('head');\n    html.appendChild(head);\n    var body = document.createElement('body');\n    html.appendChild(body);\n    var div = document.createElement('div');\n    div.id = \"table_container\";\n    body.appendChild(div);\n    document.body.appendChild(html);\n\n    var columns = [];\n    var headerTr$ = $('<tr/>');\n    var col_count = [];\n\n    for (var i = 0; i < myList.length; i++) {\n        var rowHash = myList[i];\n        for (var key in rowHash) {\n            if ($.inArray(key, columns) == -1) {\n                columns.push(key);\n                headerTr$.append($(\n                    '<th class=\"innerTableData\" data-fill-color=\"FF5b9bd5\" data-f-color=\"FFFFFFFF\" data-f-bold=\"true\" data-b-a-s=\"thin\" data-b-a-c=\"FF000000\" data-a-h=\"center\"/>'\n                ).html(key));\n                col_count.push(20);\n            }\n        }\n    }\n\n    var table = $('<table id=\"excelDataTable\" border=\"1\" data-cols-width=\"' + col_count.toString() + '\"/>');\n    $(\"#table_container\").append(table);\n    $(\"#excelDataTable\").append(headerTr$);\n\n    //this for loop will create the row data for the html table from the given json data.\n    for (var i = 0; i < myList.length; i++) {\n        var row$ = $('<tr/>');\n        for (var colIndex = 0; colIndex < columns.length; colIndex++) {\n            var cellValue = myList[i][columns[colIndex]];\n\n            if (cellValue == null) {\n                cellValue = \"\";\n            }\n\n            if (validPDFURL(String(cellValue))) {\n                var first_split = cellValue.split(\"?\")[0];\n                var split = first_split.split('/');\n\n                var a = `<a href=\"${cellValue}\">${decodeURIComponent(split[split.length - 1])}</a>`\n                row$.append($(`<td data-f-color=\"#1F497D\" data-b-a-s=\"thin\" data-fill-color=\"FFddebf7\" data-hyperlink=\"${cellValue}\" data-b-a-c=\"FF000000\" data-a-wrap=\"true\"/>`).html(a));\n            } else {\n                row$.append($('<td data-fill-color=\"FFddebf7\" data-b-a-s=\"thin\" data-b-a-c=\"FF000000\" data-a-wrap=\"true\"/>').html(cellValue));\n            }\n\n\n\n        }\n        $(\"#excelDataTable\").append(row$);\n    }\n\n    const tableFinal = document.getElementById('excelDataTable')\n    document.body.removeChild(html);\n\n    return tableFinal;\n\n}\n\n/**\n * Name: createExcelData\n * Description: Function to dynamicaly create excel data using table\n * Created By :  Suman Dey  \n * Created At: 09/25/2020\n * CR:   \n * @param {Object} tableName send the table object\n * @return {JSON} its return the json data which can be converted to excel.\n */\nfunction createExcelData(tableName, data) {\n    var finalData = [];\n    if (tableName.getModel() === undefined) {\n        return finalData;\n    }\n    var columnsArrHeader = {};\n    for (let x = 0; x < tableName.getColumns().length; x++) {\n        var column = tableName.getColumns()[x];\n        var label = column.getLabel();\n        if (label && column.getVisible()) {\n            var isDublicate = checkDublicate(columnsArrHeader, label.getText());\n            if (isDublicate) {\n                columnsArrHeader[column.mProperties.filterProperty] = ` ${label.getText()} `;\n            } else {\n                columnsArrHeader[column.mProperties.filterProperty] = label.getText();\n            }\n\n        }\n    }\n    var tableData;\n    if (data === undefined) {\n        tableData = tableName.getModel().getData();\n    } else {\n        tableData = data;\n    }\n\n\n    var finalData = [];\n    var keys = Object.keys(columnsArrHeader);\n    for (let x = 0; x < tableData.length; x++) {\n        var data = tableData[x];\n        var obj = {};\n        keys.forEach(key => {\n            if (data[key] === null || data[key] === undefined) {\n                data[key] = \"\";\n            }\n            if (Object.prototype.toString.call(data[key]) === \"[object Date]\") {\n                if (isNaN(new Date(data[key]).getTime())) {\n                    data[key] = \"\";\n                }\n            }\n            if (data[key].toString().length < 10 ||\n                key.toLowerCase() === \"gtin\" ||\n                data[key] === \"\" ||\n                isNaN(new Date(Number(data[key])))) {\n                if (key === \"refLink\") {\n                    if (data.hasOwnProperty(\"preSignedLink\")) {\n                        obj[columnsArrHeader[key]] = data[\"preSignedLink\"].toString();\n                    } else {\n                        obj[columnsArrHeader[key]] = data[key].toString();\n                    }\n                } else {\n                    obj[columnsArrHeader[key]] = data[key].toString();\n                }\n            } else {\n                obj[columnsArrHeader[key]] = convertDate(data[key]);\n            }\n\n        });\n        finalData.push(obj);\n    }\n    return finalData;\n}\n\nfunction createExcelToExport(tableName, searchResponse) {\n    var finalData = [];\n    if (tableName.getModel() === undefined) {\n        return finalData;\n    }\n    var columnsArrHeader = {};\n    for (let x = 0; x < tableName.getColumns().length; x++) {\n        var column = tableName.getColumns()[x];\n        var label = column.getLabel();\n        if (label && column.getVisible()) {\n            var isDublicate = checkDublicate(columnsArrHeader, label.getText());\n            if (isDublicate) {\n                columnsArrHeader[column.mProperties.filterProperty] = ` ${label.getText()} `;\n            } else {\n                columnsArrHeader[column.mProperties.filterProperty] = label.getText();\n            }\n\n        }\n    }\n\n    var tableData = searchResponse; //tableName.getModel().getData();\n    var finalData = [];\n    var keys = Object.keys(columnsArrHeader);\n    for (let x = 0; x < tableData.length; x++) {\n        var data = tableData[x];\n        var obj = {};\n        keys.forEach(key => {\n            if (data[key] === null || data[key] === undefined) {\n                data[key] = \"\";\n            }\n            if (Object.prototype.toString.call(data[key]) === \"[object Date]\") {\n                if (isNaN(new Date(data[key]).getTime())) {\n                    data[key] = \"\";\n                }\n            }\n            if (data[key].toString().length < 10 ||\n                key.toLowerCase() === \"gtin\" ||\n                data[key] === \"\" ||\n                isNaN(new Date(Number(data[key])))) {\n                if (key === \"refLink\") {\n                    if (data.hasOwnProperty(\"preSignedLink\")) {\n                        obj[columnsArrHeader[key]] = data[\"preSignedLink\"].toString();\n                    } else {\n                        obj[columnsArrHeader[key]] = data[key].toString();\n                    }\n                } else {\n                    obj[columnsArrHeader[key]] = data[key].toString();\n                }\n            } else {\n                obj[columnsArrHeader[key]] = convertDate(data[key]);\n            }\n\n        });\n        finalData.push(obj);\n    }\n    return finalData;\n}\n\nfunction checkDublicate(obj, text) {\n    var keys = Object.keys(obj);\n    var isDublicate = keys.filter(key => {\n        return obj[key] === text;\n    });\n    if (isDublicate.length === 0) {\n        return false;\n    } else {\n        return true;\n    }\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"7f06ba8a-37db-41bd-9180-c807360dfdb6","fieldName":"config","fieldParent":"fca58a61-b64e-4dd6-a898-e419f179a398","fieldPos":556,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"e8efb0b9-95af-46c6-dddd-5c64bb1d68cf","fieldName":"FieldsEditableScript","fieldParent":"7f06ba8a-37db-41bd-9180-c807360dfdb6","fieldPos":557,"fieldType":"neptune.Script","script":"function editableAllFeilds() {\n    oInputBOMqty.setEditable(true);\n    oComboBoxptSITE.setEditable(true);\n    oDatePickereffStartDate.setEditable(true);\n    oDatePickerEffeStartDate.setEditable(true);\n    oCheckBoxonHold.setEditable(true);\n   }\n\nfunction noneditableAllFeilds() {\n    oInputBOMqty.setEditable(false);\n    oComboBoxptSITE.setEditable(false);\n    oDatePickereffStartDate.setEditable(false);\n    oDatePickerEffeStartDate.setEditable(false);\n    oComboBoxplmSource.setEditable(false);\n    oCheckBoxonHold.setEditable(false);\n    oDatePickerCReatedONHeader.setEditable(false);\n    oDatePickerchangedOnHeader.setEditable(false);\n    oDatePickerapprovedOnHeader.setEditable(false);\n    oDatePickerRejectedOnHeader.setEditable(false);\n}\n","request":[],"response":[],"attributes":[]},{"fieldNo":"ecc66ac5-fce0-4d4b-d39c-17bd25259261","fieldName":"Init","fieldParent":"7f06ba8a-37db-41bd-9180-c807360dfdb6","fieldPos":558,"fieldType":"neptune.Script","script":"/**\n * Name: init\n * Description: on init load\n * Created By :  Suman Dey  \n * Created At: 09/24/2020\n * CR:   \n */\n\nvar g_products; // To stode the products data f4 help\nvar g_uomData;\nvar g_plmSourceData;\n\nsap.ui.getCore().attachInit(function(data) {\n    setTimeout(function() {\n        if (window.localStorage.languageKey === undefined || window.localStorage.languageKey === \"\") {\n            window.localStorage.languageKey = \"EN\";\n        }\n        let language = window.localStorage.languageKey;\n        var whereParam = '{\"languageKey\": \"' + language + '\"}';\n\n\n        /**\n         * Name: RSC_PT_BOM_API\n         * Description: RSC Product Transformation BOM APIs\n         * \n         * Path: /rsc_translations\n         * Method: POST\n         * \n         */\n        var options = {\n            data: {\n                languageKey: window.localStorage.languageKey\n            }\n        };\n\n        apioRestAPIRSCtranslations(options);\n\n\n        oButtonPTBOMCreate.setVisible(true);\n        oButtonPTBOMChange.setVisible(g_C);\n        oButtonPTBOMView.setVisible(g_R);\n        var options = {\n            data: {\n                \"username\": g_username, // Required \n                \"objName\": \"PTBOM\" // Required \n            }\n        };\n\n        apipostGetUserRoles(options);\n\n\n    }, 200);\n});","request":[],"response":[],"attributes":[]},{"fieldNo":"f6524729-0abb-44fd-c83f-fdb7b35c47f5","fieldName":"Global","fieldParent":"7f06ba8a-37db-41bd-9180-c807360dfdb6","fieldPos":559,"fieldType":"neptune.Script","script":"/**\n * Name: Global\n * Description: to initialize global funtion and variables.\n * Created By :  Suman Dey  \n * Created At: 09/24/2020\n * CR:   \n */\n\n/** This variables are used for Dialog show and take action*/\nvar g_create_deelete_position = 0; //get the component table delete row position\nvar g_change_detact = false; //To check if user made any changes on the UI or not\nvar g_button_detact = \"\"; // to check if user click on reset or cancel button.\n\nvar g_currentPageNoDisplay = 1; //used in display paggination to set the initial page as 1.\n\n\nvar pt_bom_global;\n/**Global variable for defalt key select**/\nvar g_create_tab = \"create\";\nvar g_change_tab = \"change\";\nvar g_display_tab = \"display\";\nvar g_PTType_select = \"MTO\";\nvar g_site_tab = \"site\";\n\n//To get the loged in user info if AppCatch is \n//not found it automaticaly set the data as mock.\nvar g_username = AppCache.userInfo.username \n// PTBOM Status for the statuses from the config table\nvar g_approveStatusData;\nvar g_effectiveStatusData;\nvar g_createStatusData;\nvar g_submitForApprovalStatusData;\n\n//Used for security roles for hiding buttons.\nvar g_W = false,\n    g_R = false,\n    g_C = false;\n\n\ntry {\n    g_username = AppCache.userInfo.username;\n} catch (err) {\n    console.log(err);\n}\n\n\n//This function call at init and it loads all the dropdown values \nasync function getGlobalData() {\n    oApp.setBusy(false);\n    sap.ui.core.BusyIndicator.show(0);\n    apigetAllTableDataAtOnce();\n\n    /*Making PT Type non typable in the filter*/\n    oComboBoxPTType.addEventDelegate({\n        onAfterRendering: function() {\n            oComboBoxPTType.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n}\n\nfunction showMessage(strMsg) {\n    sap.m.MessageToast.show(strMsg, {\n        duration: 1500, // default\n        width: \"22em\", // default\n        my: \"center center\", // default\n        at: \"center center\", // default\n        animationTimingFunction: \"ease-in\", // default\n        animationDuration: 300 // default\n    });\n}\n\n\n// function to use a common dialog to show error/validation msgs\nfunction getDialog(msg) {\n    oLabelCommonMess.setText(msg);\n    diaCommon.open();\n}\n","request":[],"response":[],"attributes":[]},{"fieldNo":"925d345d-438e-4742-8930-f3d94cf864cb","fieldName":"ConfigFunction","fieldParent":"7f06ba8a-37db-41bd-9180-c807360dfdb6","fieldPos":560,"fieldType":"neptune.Script","script":"/**\n * Name: ConfigFunction\n * Description: To load all common function which used by other script\n * Created By :  Suman Dey  \n * Created At: 09/24/2020\n * CR:   \n */\n\n//For Showing toast message\nfunction showMessageToast(strMsg) {\n    sap.m.MessageToast.show(strMsg, {\n        duration: 5000, // default\n        width: \"22em\", // default\n        my: \"center center\", // default\n        at: \"center center\", // default\n        animationTimingFunction: \"ease-in\", // default\n        animationDuration: 300 // default\n    });\n}\n\n//For clearing the fields for reset button.\n// Used in create after saving all record\nfunction clearFilter() {\n\n    oButtonFooterSaveSite.setVisible(false);\n    oButtonFooterSubmitApprovalSite.setVisible(false);\n\n    oButtonPTBOMCreate.setVisible(g_W);\n    oButtonPTBOMChange.setVisible(g_C);\n    oButtonPTBOMView.setVisible(g_R);\n\n    oIconTabBar.setVisible(false);\n    oBarFooter.setVisible(false);\n    oButtonFooterCancel.setVisible(true);\n    oMessagePageEmpty.setVisible(false);\n    oPanelCommon.setExpanded(false);\n    btnRefreshComp.setVisible(true);\n\n\n    oButtonPTBOMCreate.setEnabled(true);\n    oLabelProductNumber.setRequired(true);\n    oButtonPTBOMChange.setEnabled(true);\n    btnRefreshComp.setVisible(true);\n    oVBoxVariant.setVisible(true);\n    oVBoxBOMComponent.setVisible(false);\n    oButtonPTBOMView.setEnabled(true);\n    oButtonPTBOMDisplay.setVisible(false);\n    oVBoxBOMStatus.setVisible(false);\n    oVBox_PT_Site.setVisible(false);\n    oLabelDestination.setRequired(true);\n    oVBox_Component.setVisible(false);\n    oVBox_Rev.setVisible(false);\n    oIconpdf.setVisible(false);\n    chkBOMComponent.setSelected(false);\n    oIconexcel.setVisible(false);\n    header_version_label.setVisible(false);\n    for (var i = 0; i < oGrid.mAggregations.items.length - 1; i++) {\n        var view = oGrid.mAggregations.items[i].mAggregations.items[1];\n        view.setSelectedKey(null);\n        view.setValue(\"\")\n        view.setValueState(\"None\");\n    }\n    oComboBoxPTType.setSelectedKey(g_PTType_select);\n    oButtonFooterSave.setEnabled(true);\n    sap.ui.core.BusyIndicator.hide();\n}\n\n\nfunction clearSiteFilter() {\n    btnSiteExtension.setEnabled(true);\n    btnSiteChange.setEnabled(true);\n    btnSiteView.setVisible(true);\n    btnSiteView.setEnabled(true);\n    btnSiteDisplay.setVisible(false);\n    comboBoxSiteProduct.setSelectedKey();\n    lblSiteProductNumber.setRequired(true);\n    oVBoxSiteVariant.setVisible(true);\n    oComboBoxSiteCountry.setSelectedKey();\n    oLabelSiteDestination.setRequired(true);\n    oVBoxSiteComponent.setVisible(false);\n    oInputSiteComponent.setValue();\n    oVBoxSiteRev.setVisible(false);\n    inpSitetRev.setValue();\n    oVBoxSitePTSiteStatus.setVisible(false);\n    cmboSitePTSiteStatus.setSelectedKey();\n    oVBoxSitePTSite.setVisible(false);\n    oComboBoxSitePTSite.setSelectedKey();\n    oVBoxSiteBOMComponent.setVisible(false);\n    chkSiteBOMComponent.setSelected(false);\n    oIconSitepdf.setVisible(false);\n    oIconSiteexcel.setVisible(false);\n    oButtonFooterSave.setEnabled(false);\n\n    oButtonFooterSave.setVisible(false);\n    oButtonFooterSubmitApproval.setVisible(false);\n\n    oPanelSiteHeaderCommon.setExpanded(false);\n    ptSiteIconTabBar.setVisible(false);\n    ptSiteIconTabBar.setExpanded(false);\n    oBarFooter.setVisible(false);\n    headerVersionLabel.setVisible(false);\n    for (var i = 0; i < oGridSite.mAggregations.items.length - 1; i++) {\n        var view = oGridSite.mAggregations.items[i].mAggregations.items[1];\n        view.setSelectedKey(null);\n        view.setValue(\"\")\n        view.setValueState(\"None\");\n    }\n    siteDisplaySection.setVisible(false);\n    site_extension_section.setVisible(false);\n    siteChangeSection.setVisible(false);\n    oMessagePageEmpty.setVisible(false);\n\n}\n\n\n/*show warning dialog if user change filter value in change event of combobox */\nfunction showWarning() {\n    if (oIconTabBar.getVisible() && oIconTabBar.getSelectedKey() === g_create_tab) {\n        oDialogWarningFilterChange.open();\n    }\n}\n\n/*Update the UI data after user change the filter data*/\nfunction updateNewData() {\n    getVersionDetails();\n    oDialogWarningFilterChange.close();\n\n}\n\n/*remove the warning dialog*/\nfunction doNothing() {\n    oDialogWarningFilterChange.close();\n}\n\n/*Checking validation on filter if required field is entered or not\n *@param {Boolean} flag pass the flag value to check defalt value is false.\n */\nfunction validateRequiredField(flag) {\n    if (flag === undefined) {\n        flag = false;\n    }\n    for (var i = 0; i < oGrid.mAggregations.items.length - 1; i++) {\n        if (oGrid.mAggregations.items[i].mAggregations.items[0].getRequired()) {\n            if (\n                oGrid.mAggregations.items[i].mAggregations.items[1].getValue() === \"\") {\n                flag = true;\n                oGrid.mAggregations.items[i].mAggregations.items[1].setValueState(\"Error\");\n            } else {\n                oGrid.mAggregations.items[i].mAggregations.items[1].setValueState(\"None\");\n            }\n        }\n    }\n\n    return flag;\n}\n\n/*Checking validation on Empty fields for display\n *@param {Boolean} flag : \n */\nfunction validateEmptyFieldForDisplay(flag) {\n    if (flag === undefined) {\n        flag = false;\n    }\n    for (var i = 0; i < oGrid.mAggregations.items.length - 1; i++) {\n\n        if (\n            oGrid.mAggregations.items[i].mAggregations.items[1].getValue() !== \"\") {\n            flag = true;\n            return flag;\n        }\n\n    }\n\n    return flag;\n}\n\n/*Called upon clicking the confirm in the cancel button dialog for both Change - Display*/\nfunction cancelBtnActions() {\n    header_version_label.setVisible(false);\n    oIconTabBar.setExpanded(true);\n    oPanelCommon.setExpanded(false);\n    oBarFooter.setVisible(false);\n    oTableComponent.removeAllColumns();\n}\n\n/*function to convert milisecond to date String returns date as Oct 20, 2020 (Example)\n *@param {int} milisecond hold the date value as milisecond. ex: new Date().getTime()\n */\n\nfunction convertDate(milisecond) {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n    var today;\n    if (isNaN(parseInt(milisecond))) {\n        today = new Date(milisecond);\n    } else {\n        today = new Date(parseInt(milisecond));\n    }\n\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = `${monthNames[today.getMonth()]} ${dd}, ${yyyy}`;\n    return today;\n}\n\n/**Function to check the column have text or PDF URL in Component Table  \n * @param {String} str send the pdf URL to validate\n */\nfunction validPDFURL(str) {\n    var first_split = str.split(\"?\")[0];\n    var split = first_split.split('/');\n    var extention = split[split.length - 1].split('.');\n    if (split[split.length - 1].includes(\"pdf\")) {\n        return true;\n    } else {\n        return false;\n    }\n\n}\n\n/**Function to handel click event on tables pdf link \n * @param {Object} oEvent send the oEvent of the click event\n */\nfunction pdfLinkClickEventHandeler(oEvent) {\n    sap.ui.core.BusyIndicator.show(0);\n    var index = parseInt(oEvent.getSource().getBindingContext().sPath.split(\"/\")[1]);\n    var lineItem = oEvent.oSource.getBindingContext().getObject();\n    var getSelectedFileObj = {};\n    var arrLen = lineItem.refLink.split(\"/\").length\n\n    getSelectedFileObj.fileName = lineItem.refLink.split(\"/\")[arrLen - 2] + \"/\" + lineItem.refLink.split(\"/\")[\n        arrLen - 1]\n    getSelectedFileObj.action = \"RETRIEVE\";\n    getSelectedFileObj.checkSource = lineItem.checkSource;\n\n    var options = {\n        data: getSelectedFileObj\n    };\n\n    apipostAttachmentOnS3(options);\n}\n\n/*below function will handle the refresh components functionality by passing the search criteria*/\nfunction refreshComp() {\n    var options = {\n        data: {\n            \"matlNum\": oComboBoxProduct.getValue(),\n            \"shiptoCountry\": oComboBoxCountry.getSelectedKey(),\n            \"variant_code\": cmboVariant.getValue(),\n            \"ptType\": oComboBoxPTType.getSelectedKey(),\n            \"rscSite\": \"Global\",\n            \"createdBy\": g_username,\n            \"components\": oTableComponent.getModel().getData(),\n            \"ptbomHeaderDetails\": oTableHeader.getModel().getData()[0]\n        }\n    };\n\n\n    apipostRefreshComp(options);\n\n}\n\nfunction dateTime(date) {\n    var timenew = new Date(Number(date));\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var theyear = timenew.getFullYear();\n    var themonth = timenew.getMonth();\n    var thetoday = timenew.getDate();\n    var monthName = months[themonth];\n    var commendetdDate = monthName + \" \" + thetoday + \", \" + theyear;\n    return commendetdDate;\n}\n\nasync function getMatDataGlobal(oEvent) {\n    sap.ui.core.BusyIndicator.show(0);\n    if (oEvent.getSource().getValue() !== \"\") {\n        oEvent.getSource().setValueState(\"None\");\n        var options = {\n            data: [oEvent.getSource().getValue()]\n        };\n\n        var material = await apigetMatNumberData(options);\n        if (material.length > 0) {\n            sap.ui.core.BusyIndicator.hide(0);\n            cmboVariant.setValue(material[0].matlModeCd);\n            oMessagePageEmpty.setVisible(false);\n        } else {\n            sap.ui.core.BusyIndicator.hide(0);\n            getDialog(oLabelInvalidProductCode.getText());\n            oComboBoxProduct.setValue();\n            oMessagePageEmpty.setVisible(true);\n        }\n\n    } else if (oEvent.getSource().getValue() === \"\") {\n        if (oIconTabBar.getSelectedKey() === g_display_tab) {\n            sap.ui.core.BusyIndicator.hide(0);\n            oEvent.getSource().setValueState(\"None\");\n        } else {\n            sap.ui.core.BusyIndicator.hide(0);\n            oEvent.getSource().setValueState(\"Error\");\n        }\n\n    }\n}\n\nasync function getMatDataSite(oEvent) {\n    sap.ui.core.BusyIndicator.show(0);\n    if (oEvent.getSource().getValue() !== \"\") {\n        oEvent.getSource().setValueState(\"None\");\n        var options = {\n            data: [oEvent.getSource().getValue()]\n        };\n\n        var material = await apigetMatNumberData(options);\n        if (material.length > 0) {\n            sap.ui.core.BusyIndicator.hide(0);\n            cmboSiteVariant.setValue(material[0].matlModeCd);\n        } else {\n            sap.ui.core.BusyIndicator.hide(0);\n            getDialog(oLabelInvalidProductCode.getText());\n            comboBoxSiteProduct.setValue();\n        }\n\n    } else if (oEvent.getSource().getValue() === \"\") {\n        if (ptSiteIconTabBar.getSelectedKey() === \"site_display\") {\n            sap.ui.core.BusyIndicator.hide(0);\n            oEvent.getSource().setValueState(\"None\");\n        } else {\n            sap.ui.core.BusyIndicator.hide(0);\n            oEvent.getSource().setValueState(\"Error\");\n        }\n\n    }\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"1757e042-2dad-46ba-ab76-c838d88ee2ed","fieldName":"ajaxError","fieldParent":"7f06ba8a-37db-41bd-9180-c807360dfdb6","fieldPos":561,"fieldType":"neptune.Script","script":"/**\r\n * Name: ajaxError\r\n * Description: Function to handle response errors with meaningful messaages\r\n * Created By :  Suman Dey  \r\n * Created At: 09/14/2020\r\n * CR:   \r\n */\r\n \r\nfunction handleErrors(xhr, status) {\r\n    sap.ui.core.BusyIndicator.hide();\r\n    var statusCode = xhr.status;\r\n    if (statusCode === 401) {\r\n    getDialog(oLabel401Msg.getText());\r\n        setTimeout(function() {\r\n            location.reload();\r\n        }, 3000);\r\n    } else if (statusCode === 500) {\r\n        getDialog(oLabel500Msg.getText());\r\n    } else if (statusCode === 502) {\r\n        getDialog(oLabel502Msg.getText());\r\n    } else if (statusCode === 503) {\r\n        getDialog(oLabel503Msg.getText());\r\n    } else if (statusCode === 504) {\r\n        getDialog(oLabel504Msg.getText());\r\n    } else if (statusCode > 401 && statusCode < 512) {\r\n        getDialog(oLabelGenericMsg.getText());\r\n    }\r\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"53a46706-5f37-4836-d004-b2644ec31b14","fieldName":"labelTranslations","fieldParent":"7f06ba8a-37db-41bd-9180-c807360dfdb6","fieldPos":562,"fieldType":"neptune.Script","script":"/**\r\n * Name: Label Translations\r\n * Description:  function update all labels(translations) for input fields and column names from config table\r\n * Created By : Rajasekhara Gorakha\r\n * Created At: 12/02/2020\r\n * @param {JSON} modelData fetches the json data from rsc_translations table api    \r\n */\r\nfunction updateLabelTranslations(modelData) {\r\n    modelData.forEach(data => {\r\n        switch (data.technicalName) {\r\n            case 'labelTransMEssage':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' labelTransMEssage');\r\n                    return;\r\n                } else {\r\n                    oLabelMissingTranslations.setText(data.translation);\r\n                }\r\n                oLabelPendingComp\r\n\r\n                break;\r\n            case 'yesLeb':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' yesLeb');\r\n                    return;\r\n                } else {\r\n                    oButtonPendingCompYes.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'noLeb':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' noLeb');\r\n                    return;\r\n                } else {\r\n                    oButtonPendingComp.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'refreshComponentsBtn':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' refreshComponentsBtn');\r\n                    return;\r\n                } else {\r\n                    btnRefreshComp.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'refNo':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' refNo');\r\n                    return;\r\n                } else {\r\n                    lblAltRefNum.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'bomNotCreatedStatus':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' bomNotCreatedStatus');\r\n                    return;\r\n                } else {\r\n                    lblNotCreatedStatus.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'dateValidation':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' dateValidation');\r\n                    return;\r\n                } else {\r\n                    lblDateValidationMsg.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'noNewSite':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' noNewSite');\r\n                    return;\r\n                } else {\r\n                    lblNoNewSites.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'duplicateSites':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' duplicateSites');\r\n                    return;\r\n                } else {\r\n                    lblduplicateSites.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'noSiteData':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' noSiteData');\r\n                    return;\r\n                } else {\r\n                    lblNoSites.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'savedPTSiteDetails':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' savedPTSiteDetails');\r\n                    return;\r\n                } else {\r\n                    lblsiteDetailsSaved.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'matlNum':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' matlNum');\r\n                    return;\r\n                } else {\r\n                    oColumnProductCode.setLabel(data.translation);\r\n                    oLabelProductNumber.setText(data.translation);\r\n                    lblSiteProductNumber.setText(data.translation);\r\n                    oColumnSiteProductCode.setLabel(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'datePrior':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' datePrior');\r\n                    return;\r\n                } else {\r\n                    oLabeldatePrior.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'invalidDate':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' invalidDate');\r\n                    return;\r\n                } else {\r\n                    oLabelinvalidDate.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'afterToday':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' afterToday');\r\n                    return;\r\n                } else {\r\n                    oLabelafterToday.setText(data.translation);\r\n\r\n                }\r\n                break;\r\n            case \"siteExtension\":\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' siteExtension');\r\n                    return;\r\n                } else {\r\n                    oIconTabFilterSite.setText(data.translation);\r\n                    oLabelSitePTSiteExtension.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case \"exportDisplayFileName\":\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' exportDisplayFileName');\r\n                    return;\r\n                } else {\r\n                    exportDisplayFileName.setText(data.translation);\r\n                }\r\n                break;\r\n            case \"tabHeaderPB\":\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' tabHeaderPB');\r\n                    return;\r\n                } else {\r\n                    tabHeaderPB.setText(data.translation);\r\n                    oIconTabFilterGlobal.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case \"exportPTBOMname\":\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' exportPTBOMname');\r\n                    return;\r\n                } else {\r\n                    exportPTBOMname.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case \"deleteSite\":\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' deleteSite');\r\n                    return;\r\n                } else {\r\n                    oLabeldeleteSite.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case \"addSite\":\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' addSite');\r\n                    return;\r\n                } else {\r\n                    oButtonAddNewPTSite.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case \"msgPTBOMSubmit\":\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' msgPTBOMSubmit');\r\n                    return;\r\n                } else {\r\n                    oLabelSubmitForApproval.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case \"siteDataUpdated\":\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' siteDataUpdated');\r\n                    return;\r\n                } else {\r\n                    oLabelSiteUpdated.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case \"siteNotInApproved\":\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' siteNotInApproved');\r\n                    return;\r\n                } else {\r\n                    oLabelSiteNotApproved.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case \"siteNotFound\":\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' siteNotFound');\r\n                    return;\r\n                } else {\r\n                    oLabelsiteNotFound.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'matlShrtDesc':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' matlShrtDesc');\r\n                    return;\r\n                } else {\r\n                    oColumnDescription.setLabel(data.translation);\r\n                    oLabelProDescription.setText(data.translation);\r\n                    oColumnSiteDescription.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'shiptoCountry':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' shiptoCountry');\r\n                    return;\r\n                } else {\r\n                    oColumnShiptoCountry.setLabel(data.translation);\r\n                    oLabelDestination.setText(data.translation);\r\n                    oLabelSiteDestination.setText(data.translation);\r\n                    oColumnSiteShiptoCountry.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'ptType':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptType');\r\n                    return;\r\n                } else {\r\n                    oLabelPTType.setText(data.translation);\r\n                    oLabelSitePTType.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'gtin':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' gtin');\r\n                    return;\r\n                } else {\r\n                    oColumnGtin.setLabel(data.translation);\r\n                    lblGTIN.setText(data.translation);\r\n                    lblGtin.setText(data.translation);\r\n                    oColumnSiteGtin.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'globalLabelStatus':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' globalLabelStatus');\r\n                    return;\r\n                } else {\r\n                    lblStatusGlobal.setText(data.translation);\r\n                    oColumnBOMStatus.setLabel(data.translation);\r\n\r\n                }\r\n                break;\r\n            case 'labelStatus':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' labelStatus');\r\n                    return;\r\n                } else {\r\n                    lblStatus.setText(data.translation);\r\n\r\n                }\r\n                break;\r\n\r\n\r\n            case 'instruction':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' instruction');\r\n                    return;\r\n                } else {\r\n                    lblInstruction.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'bomQty':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' bomQty');\r\n                    return;\r\n                } else {\r\n                    oColumnBOMqty.setLabel(data.translation);\r\n                    lblBOMqty.setText(data.translation);\r\n                    oColumnSiteBOMqty.setLabel(data.translation);\r\n                }\r\n                break;\r\n            case 'lblBomComponent':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' lblBomComponent');\r\n                    return;\r\n                } else {\r\n                    lblBOMComponent.setText(data.translation);\r\n                    lblSiteBOMComponent.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'displayLeb':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' displayLeb');\r\n                    return;\r\n                } else {\r\n                    oButtonPTBOMView.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'labTotalRec':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' labTotalRec');\r\n                    return;\r\n                } else {\r\n                    lebTotal.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'minimizeLeb':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' minimizeLeb');\r\n                    return;\r\n                } else {\r\n                    oButtonFilterExpand.setText(data.translation);\r\n                    btnSitePTBomExpand.setText(data.translation);\r\n                    btnSiteExpand.setText(data.translation);\r\n                    oButtonPTBomExpand.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'uom':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' uom');\r\n                    return;\r\n                } else {\r\n                    oColumnUOM.setLabel(data.translation);\r\n                    lblBaseUoM.setText(data.translation);\r\n                    oColumnSiteUOM.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'customer':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' customer');\r\n                    return;\r\n                } else {\r\n                    lblCustomer.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'version':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' version');\r\n                    return;\r\n                } else {\r\n                    lblVersion.setText(data.translation);\r\n                    oColumnversion.setLabel(data.translation);\r\n                    oColumnSiteVersion.setLabel(data.translation);\r\n                    oColumnSiteversion.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'versionDescription':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' versionDescription');\r\n                    return;\r\n                } else {\r\n                    lblVersionDesc.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'bomID':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' bomID');\r\n                    return;\r\n                } else {\r\n                    oColumnSiteBomId.setLabel(data.translation);\r\n                    oColumnBOMid.setLabel(data.translation);\r\n                    lblBomID.setText(data.translation);\r\n                    oColumnSiteBOMid.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'ptSite':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptSite');\r\n                    return;\r\n                } else {\r\n                    lblPTSite.setText(data.translation);\r\n                    lblSitePTSite.setText(data.translation);\r\n                    oColumnSiteptSIte.setLabel(data.translation);\r\n                    oColumnSitePTSite.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'bomLevel':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' bomLevel');\r\n                    return;\r\n                } else {\r\n                    lblBOMLevel.setText(data.translation); //\r\n                }\r\n\r\n                break;\r\n            case 'validToBatch':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' validToBatch');\r\n                    return;\r\n                } else {\r\n                    lblEffEndDate.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'validFromBatch':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' validFromBatch');\r\n                    return;\r\n                } else {\r\n                    lblEffStartDate.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'validToBatchComponent':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' validToBatch');\r\n                    return;\r\n                } else {\r\n                    lblCompEffEndDate.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'validFromBatchComponent':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' validFromBatch');\r\n                    return;\r\n                } else {\r\n                    lblComEffStart.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'contentFile':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' contentFile');\r\n                    return;\r\n                } else {\r\n                    oLabelPDFURL.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'component':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' component');\r\n                    return;\r\n                } else {\r\n                    lblCompContrlNum.setText(data.translation);\r\n                    lblCCNumber.setText(data.translation);\r\n                    lblCCSiteNumber.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'PTSiteExtensionBtn':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' PTSiteExtensionBtn');\r\n                    return;\r\n                } else {\r\n                    btnSiteExtension.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'componentType':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' componentType');\r\n                    return;\r\n                } else {\r\n                    lblCompType.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'lblCompType':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' lblCompType');\r\n                    return;\r\n                } else {\r\n                    lblbu.setText(data.translation);\r\n                    lblBU.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'revision':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' revision');\r\n                    return;\r\n                } else {\r\n                    lblRev.setText(data.translation);\r\n                    lblRevision.setText(data.translation);\r\n                    lblSiteRev.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'variant':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' variant');\r\n                    return;\r\n                } else {\r\n                    oColumnVariant.setLabel(data.translation)\r\n                    lblVariant.setText(data.translation);\r\n                    lblSiteVariant.setText(data.translation);\r\n                    oColumnSiteVariant.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'qty':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' qty');\r\n                    return;\r\n                } else {\r\n                    lblQty.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'bomStatus':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' bomStatus');\r\n                    return;\r\n                } else {\r\n                    lblbomStatus.setText(data.translation);\r\n                    lblBOMStatus.setText(data.translation);\r\n                    oColumnSiteBOMStatus.setLabel(data.translation);\r\n                }\r\n                break;\r\n            case 'ptSiteBomStatus':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptSiteBomStatus');\r\n                    return;\r\n                } else {\r\n                    oColumnSiteStatus.setLabel(data.translation);\r\n                    oColumnSiteBOMStatusGlobal.setLabel(data.translation);\r\n                    lblptSiteBomStatus.setText(data.translation + \":\");\r\n                    lblSitePTSiteStatus.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'plmSource':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' plmSource');\r\n                    return;\r\n                } else {\r\n                    lblplmSource.setText(data.translation);\r\n                    oColumnSiteplmSource.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'plmCCN':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' plmCCN');\r\n                    return;\r\n                } else {\r\n                    lblplmChangeCon.setText(data.translation);\r\n                    oColumnplmSiteChangeControlNum.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'onHold':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' onHold');\r\n                    return;\r\n                } else {\r\n                    oColumnSiteHold.setLabel(data.translation);\r\n                    oColumnonHold.setLabel(data.translation);\r\n                    lblonhold.setText(data.translation);\r\n                    oColumnSiteonHold.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'oLabel401Msg':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' oLabel401Msg');\r\n                    return;\r\n                } else {\r\n                    oLabel401Msg.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'badGateWay':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' badGateWay');\r\n                    return;\r\n                } else {\r\n                    oLabel502Msg.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'serviceUnavailable':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' serviceUnavailable');\r\n                    return;\r\n                } else {\r\n                    oLabel503Msg.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'oLabelGenericMsg':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' oLabelGenericMsg');\r\n                    return;\r\n                } else {\r\n                    oLabelGenericMsg.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'pdfReport':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' pdfReport');\r\n                    return;\r\n                } else {\r\n                    oLabelPDFTitle.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'internalServerError':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' internalServerError');\r\n                    return;\r\n                } else {\r\n                    oLabel500Msg.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'bu':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' bu');\r\n                    return;\r\n                } else {\r\n                    lblbu.setText(data.translation);\r\n                    oColumnBU.setLabel(data.translation);\r\n                    lblbu.setText(data.translation);\r\n                    oColumnSiteBU.setLabel(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'ptSiteEffectiveEndDate':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptSiteEffectiveEndDate');\r\n                    return;\r\n                } else {\r\n                    oColumnSiteEndDate.setLabel(data.translation);\r\n                    oColumnSiteEndDateHeader.setLabel(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'ptSiteEffectiveStartDate':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptSiteEffectiveStartDate');\r\n                    return;\r\n                } else {\r\n                    oColumnSiteStartDate.setLabel(data.translation);\r\n                    oColumnSiteStartDateHeader.setLabel(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'ptBomValidationDial':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptBomValidationDial');\r\n                    return;\r\n                } else {\r\n                    diaLabelMissing.setTitle(data.translation);\r\n                }\r\n                break;\r\n\r\n\r\n            case 'franchise':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' franchise');\r\n                    return;\r\n                } else {\r\n                    oColumnfranchise.setLabel(data.translation);\r\n                    lblfranchise.setText(data.translation);\r\n                    lblFranchise.setText(data.translation);\r\n                    oColumnSitefranchise.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'rscChangeNo':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' rscChangeNo');\r\n                    return;\r\n                } else {\r\n                    oColumnRSCChangeOrderNum.setLabel(data.translation);\r\n                    lblrscChangeOrder.setText(data.translation);\r\n                    oColumnSiteRSCChangeOrderNum.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'createdOn':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' createdOn');\r\n                    return;\r\n                } else {\r\n                    oColumnCreatedOn.setLabel(data.translation);\r\n                    lblcreatedOn.setText(data.translation);\r\n                    oColumnSiteCreatedOn.setLabel(data.translation);\r\n                }\r\n                break;\r\n            case 'createdBy':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' createdBy');\r\n                    return;\r\n                } else {\r\n                    oColumnCreatedBy.setLabel(data.translation);\r\n                    lblcreatedBy.setText(data.translation);\r\n                    oColumnSiteCreatedBy.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'approvedOn':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' approvedOn');\r\n                    return;\r\n                } else {\r\n                    oColumnapprovedOn.setLabel(data.translation);\r\n                    lblapprovedOn.setText(data.translation);\r\n                    oColumnSiteapprovedOn.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'approvedBy':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' approvedBy');\r\n                    return;\r\n                } else {\r\n                    oColumnapprovedBy.setLabel(data.translation);\r\n                    lblapprovedBy.setText(data.translation);\r\n                    oColumnSiteapprovedBy.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'changedBy':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' changedBy');\r\n                    return;\r\n                } else {\r\n                    oColumnChangedBy.setLabel(data.translation);\r\n                    lblchangedBy.setText(data.translation);\r\n                    oColumnSiteChangedBy.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'changedOn':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' changedOn');\r\n                    return;\r\n                } else {\r\n                    oColumnChangedOn.setLabel(data.translation);\r\n                    lblchangedOn.setText(data.translation);\r\n                    oColumnSiteChangedOn.setLabel(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'action':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' action');\r\n                    return;\r\n                } else {\r\n                    oColumnSiteActions.setLabel(data.translation);\r\n                    lblaction.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'serialNum':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' serialNum');\r\n                    return;\r\n                } else {\r\n                    lblserialNO.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'componentQty':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' componentQty');\r\n                    return;\r\n                } else {\r\n                    lblcopmQty.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'labelStatus':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' labelStatus');\r\n                    return;\r\n                } else {\r\n                    lblstatusOnly.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'componentSource':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' componentSource');\r\n                    return;\r\n                } else {\r\n                    lblcompSource.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'createButton':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' createButton');\r\n                    return;\r\n                } else {\r\n                    oButtonPTBOMCreate.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'changeButton':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' changeButton');\r\n                    return;\r\n                } else {\r\n                    oButtonPTBOMChange.setText(data.translation);\r\n                    btnSiteChange.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'displayButton':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' displayButton');\r\n                    return;\r\n                } else {\r\n                    oButtonPTBOMDisplay.setText(data.translation);\r\n                    btnSiteView.setText(data.translation);\r\n                    btnSiteDisplay.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'resetButton':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' resetButton');\r\n                    return;\r\n                } else {\r\n                    oButtonPTBOMReset.setText(data.translation);\r\n                    btnSiteReset.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'saveButton':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' saveButton');\r\n                    return;\r\n                } else {\r\n                    oButtonFooterSave.setText(data.translation);\r\n                    oButtonFooterSaveSite.setText(data.translation);\r\n                    oButtonSaveFinal.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'cancelButton':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' cancelButton');\r\n                    return;\r\n                } else {\r\n                    oButtonFooterCancel.setText(data.translation);\r\n                    oLabelbtnCancel.setText(data.translation);\r\n                    rejectNo.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'submitForApproval':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' submitForApproval');\r\n                    return;\r\n                } else {\r\n                    oButtonFooterSubmitApproval.setText(data.translation);\r\n                    oButtonFooterSubmitApprovalSite.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n\r\n            case 'components':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' components');\r\n                    return;\r\n                } else {\r\n                    oLabel42.setText(data.translation);\r\n                    oLabelSite42.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n\r\n            case 'welcomeText':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' welcomeText');\r\n                    return;\r\n                } else {\r\n                    labWelcome.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'combinationNotExists':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' combinationNotExists');\r\n                    return;\r\n                } else {\r\n                    oLabelNothingApprovedDisplayBlank.setText(data.translation);\r\n                    oLabelNothingFoundBlankChange.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'startDateEndDateValidation':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' startDateEndDateValidation');\r\n                    return;\r\n                } else {\r\n                    oLabelTillDateLessThenStartDate.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'ptBom':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptBom');\r\n                    return;\r\n                } else {\r\n                    ptBoMHeaderL.setText(data.translation);\r\n                    ptBoMSiteHeaderL.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'ptBomCombinationAlreadyExists':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptBomCombinationAlreadyExists');\r\n                    return;\r\n                } else {\r\n                    oLabelPTBOMCreateExists.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'ptBomSuccessfullyUpdated':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptBomSuccessfullyUpdated');\r\n                    return;\r\n                } else {\r\n                    oLabelPTBOMUpdate.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'ptBOMSuccessfullyCreated':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptBOMSuccessfullyCreated');\r\n                    return;\r\n                } else {\r\n                    oLabelPTBOMCreate.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'msgMandatoryField':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' msgMandatoryField');\r\n                    return;\r\n                } else {\r\n                    oLabelMadetoryFields.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'yesButton':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' yesButton');\r\n                    return;\r\n                } else {\r\n                    oButtonYes.setText(data.translation);\r\n                    oButtonSumbitForApp.setText(data.translation);\r\n                    oButtonYes.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'areYouSureYouWantSave':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' areYouSureYouWantSave');\r\n                    return;\r\n                } else {\r\n                    oLabel_Save.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'saveProductTransformationBOM':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' saveProductTransformationBOM');\r\n                    return;\r\n                } else {\r\n                    oLabelSaveHeader.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'submitProductTransformationBom':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' submitProductTransformationBom');\r\n                    return;\r\n                } else {\r\n                    oLabelSumbitHeader.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'areYouSureYouWantSubmitForApproval':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' areYouSureYouWantSubmitForApproval');\r\n                    return;\r\n                } else {\r\n                    oLabel_SumbitForApp.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'msgExistingBOM':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' msgExistingBOM');\r\n                    return;\r\n                } else {\r\n                    lblcreateExistBOMMessage.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'msgNewRevision':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' msgNewRevision');\r\n                    return;\r\n                } else {\r\n                    lblcreateNewRevisionMessage.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'msgNoComponents':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' msgNoComponents');\r\n                    return;\r\n                } else {\r\n                    lblcreateNoComponentsMessage.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'componentNotApprovedEffec':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' componentNotApprovedEffec');\r\n                    return;\r\n                } else {\r\n                    oLabelComponentNotExists.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'fillMandatoryFields':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' fillMandatoryFields');\r\n                    return;\r\n                } else {\r\n                    oLabelMadetoryFields.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'addComponentsToSave':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' addComponentsToSave');\r\n                    return;\r\n                } else {\r\n                    oLabelNoComponentText.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'diaDeleteAlertTitle':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' diaDeleteAlertTitle');\r\n                    return;\r\n                } else {\r\n                    oDialogDeleteAlert.setTitle(data.translation);\r\n                }\r\n                break;\r\n                      case 'deleteAlertMessage':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' deleteAlertMessage');\r\n                    return;\r\n                } else {\r\n                    oLabelDeleteMsg.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'deleteButton':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' deleteButton');\r\n                    return;\r\n                } else {\r\n                    oButtonDeleteAlertComplete.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'ptBOMSystemMessage':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptBOMSystemMessage');\r\n                    return;\r\n                } else {\r\n                    oDialogWarningFilterChange.setTitle(data.translation);\r\n                    oLabelWarningHeader.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'wantToContinueMessage':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' wantToContinueMessage');\r\n                    return;\r\n                } else {\r\n                    oLabel1.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'YouWillLoseCurrentProgressMessage':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' YouWillLoseCurrentProgressMessage');\r\n                    return;\r\n                } else {\r\n                    oLabel2.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'backDialog':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' backDialog');\r\n                    return;\r\n                } else {\r\n                    dialog_back.setTitle(data.translation);\r\n                    oLabelBackHeader.setText(data.translation);\r\n                }\r\n                break;\r\n                        case 'areYouSureYouWanttogoBack':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' areYouSureYouWanttogoBack');\r\n                    return;\r\n                } else {\r\n                    oLabel_Back.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'changesWillBeLostMessage':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' changesWillBeLostMessage');\r\n                    return;\r\n                } else {\r\n                    oLabel.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'confirmButton':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' confirmButton');\r\n                    return;\r\n                } else {\r\n                    oButtonConfirm.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'fileUploadedSuccessfully':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' fileUploadedSuccessfully');\r\n                    return;\r\n                } else {\r\n                    oLabelFileUploadedSuccess.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'combinationExists':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' combinationExists');\r\n                    return;\r\n                } else {\r\n                    oLabelCombinationExists.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'closeLeb':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' closeLeb');\r\n                    return;\r\n                } else {\r\n                    close.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'cannotFindProductCode':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' cannotFindProductCode');\r\n                    return;\r\n                } else {\r\n                    oLabelInvalidProductCode.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n            case 'systemValidation':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' systemValidation');\r\n                    return;\r\n                } else {\r\n                    diaCommon.setTitle(data.translation);\r\n                    oLabeldiaCommon.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n            case 'ptSITEcanNotBeSame':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptSITEcanNotBeSame');\r\n                    return;\r\n                } else {\r\n                    oLabelPTSiteCantbeSame.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n\r\n            case 'ptSite':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptSite');\r\n                    return;\r\n                } else {\r\n                    oLabelPTSite.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'compNotEffectiveStatus':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' compNotEffectiveStatus');\r\n                    return;\r\n                } else {\r\n                    lblCompNotEffective.setText(data.translation);\r\n                    oLabelPendingComp.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'ptSiteCompNotEffective':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptSiteCompNotEffective');\r\n                    return;\r\n                } else {\r\n                    oLabelPendingCompSite.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'ptbomCompDelValidation':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptbomCompDelValidation');\r\n                    return;\r\n                } else {\r\n                    oTextPendingComponents.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'ptbomNoCompValidation':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' ptbomNoCompValidation');\r\n                    return;\r\n                } else {\r\n                    lblNoComponentsAfterDelete.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'lockedByUser':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' lockedByUser');\r\n                    return;\r\n                } else {\r\n                    lblLockedByUser.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            case 'lockEntryMsg':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' lockEntryMsg');\r\n                    return;\r\n                } else {\r\n                    lblLockEntryDetails.setText(data.translation);\r\n                }\r\n                break;\r\n            case 'recordLocked':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' recordLocked');\r\n                    return;\r\n                } else {\r\n                    lblLockEntryTitle.setText(data.translation);\r\n                }\r\n\r\n                break;\r\n\r\n\r\n            case 'errorRetrievingDoc':\r\n                if (!data.translation) {\r\n                    diaLabelMissing.open();\r\n                    oMessageStrip.setText(oLabelMissingTranslations.getText() + ' errorRetrievingDoc');\r\n                    return;\r\n                } else {\r\n                    lblErrorRetrievingDoc.setText(data.translation);\r\n                }\r\n                break;\r\n\r\n            default:\r\n        }\r\n    });\r\n\r\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"98601fe9-7e57-4fa2-a9a3-78d62a7a122c","fieldName":"Create","fieldParent":"fca58a61-b64e-4dd6-a898-e419f179a398","fieldPos":563,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"626efc09-2b61-4014-8abf-004499db792d","fieldName":"CreateFunction","fieldParent":"98601fe9-7e57-4fa2-a9a3-78d62a7a122c","fieldPos":564,"fieldType":"neptune.Script","script":"/**\n * Name: CreateFunction\n * Description: get the data from databse \n * Created By :  Suman Dey  \n * Created At: 09/25/2020\n * CR:   \n */\n\n// For Create button Press\nfunction ptbomGlobalCreate() {\n    sap.ui.core.BusyIndicator.show(0);\n\n    //check the lock first \n      setTimeout(function() {\n        getVersionDetails();\n    }, 100);\n}\n\n\n//check validation in filter and check the version from database\nasync function getVersionDetails() {\n    sap.ui.core.BusyIndicator.show();\n    var flag = validateRequiredField(false);\n    if (flag) {\n        sap.ui.core.BusyIndicator.hide();\n        getDialog(oLabelMadetoryFields.getText());\n    } else {\n\n        var options = {\n            data: {\n                \"matlNum\": oComboBoxProduct.getValue(),\n                \"shiptoCountry\": oComboBoxCountry.getSelectedKey(),\n                \"variant_code\": cmboVariant.getValue(), \n                \"ptType\": oComboBoxPTType.getSelectedKey(),\n                \"rscSite\": \"Global\",\n                \"createdBy\": g_username\n            }\n        };\n\n        apipost_getInitialCreateData(options);\n\n    }\n\n}\n\n//build data to create UI table using data from database\n// Parameters: screen- has value \"initial\" to show that it is the create mode\n//   materialType: the materialType data\n// data: the response data \nfunction getComponentTableData(data, materialType, screen) {\n    for (var i = 0; i < data.components.length; i++) {\n        data.components[i].editable = false;\n        // Added for componentType,compControlNum, dates noneditable initially\n        data.components[i].editableSourceChecked = false;\n        data.components[i].editDateFields = true;\n        data.components[i].itemNo = (i + 1) * 1;\n        data.components[i].qty = \"1\";\n\n    }\n    var pt_type = oComboBoxPTType.getModel().getData();\n    var pt_site = oComboBoxPTSite.getModel().getData();\n    var materialType = modelMaterialType.getModel().getData();\n    buildHeaderData(data.entity, pt_type, pt_site, g_createStatusData[0].status, false, screen);\n    buildItemData(data.components, materialType, true, g_createStatusData[0].status, screen);\n    oIconTabBar.setExpanded(false);\n    oPanelCommon.setExpanded(true);\n    oBarFooter.setVisible(true);\n    oButtonFooterSave.setVisible(true);\n\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"9579989c-97e2-47f9-925a-4383fb426344","fieldName":"Common","fieldParent":"fca58a61-b64e-4dd6-a898-e419f179a398","fieldPos":565,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"7c01759e-4d8d-4f43-a39b-d88be1ebebf2","fieldName":"CommonViewFunction","fieldParent":"9579989c-97e2-47f9-925a-4383fb426344","fieldPos":566,"fieldType":"neptune.Script","script":"/**\n * Name: CommonViewFunction\n * Description: Used to build PT BOM Header and item table for all (Create,Change,Display) \n * Created By :  Suman Dey  \n * Created At: 09/25/2020\n * CR:   \n */\n\n//Will trigger when anyone hit the pencil icon in change and display page.\n/* Parameters Description:\n    data: data from DB\n    status: BOM Status(eg: CREATED, EFFECTIVE, APPROVED)\n*/\nasync function openTheRowData(data, status) {\n    // Making the pdf and excel icon visible \n    oIconpdf.setVisible(true);\n    oIconexcel.setVisible(true);\n    // assigning the data to tableData variable\n    var tableData = data;\n    sap.ui.core.BusyIndicator.show(0);\n    oIconTabBar.setExpanded(false);\n    oPanelCommon.setVisible(true);\n    oPanelCommon.setExpanded(true);\n    // Making save, submit for approval buttons visible\n    oBarFooter.setVisible(true);\n    oButtonFooterSave.setVisible(true);\n    oButtonFooterSubmitApproval.setVisible(true);\n\n    if (oIconTabBar.getSelectedKey() === g_site_tab) {\n        oColumnChangedBy.setVisible(false);\n        oColumnChangedOn.setVisible(false);\n    } else {\n        oColumnChangedBy.setVisible(true);\n        oColumnChangedOn.setVisible(true);\n    }\n    oColumnapprovedBy.setVisible(true);\n    oColumnapprovedOn.setVisible(true);\n    if (status === g_createStatusData[0].status) {\n        data.headerBOMqty = true;\n        oCheckBoxonHold.setEditable(true);\n    } else if (status === g_approveStatusData[0].status) {\n        oInputBOMqty.setEditable(false);\n        oCheckBoxonHold.setEditable(true);\n        oDatePickerCReatedONHeader.setEditable(false);\n        oDatePickerchangedOnHeader.setEditable(false);\n        oDatePickerapprovedOnHeader.setEditable(false);\n        oButtonFooterSubmitApproval.setVisible(false);\n    } else if (status === g_submitForApprovalStatusData[0].status) {\n        oButtonFooterSave.setVisible(false);\n        oButtonFooterSubmitApproval.setVisible(false);\n        oInputBOMqty.setEditable(false);\n        oCheckBoxonHold.setEditable(false);\n        oDatePickerCReatedONHeader.setEditable(false);\n        oDatePickerchangedOnHeader.setEditable(false);\n        oDatePickerapprovedOnHeader.setEditable(false);\n    }\n\n\n\n    // if in display: changing text of the cancel button\n    if (oIconTabBar.getSelectedKey() === g_site_tab) {\n        oButtonFooterSave.setVisible(false);\n        oButtonFooterSubmitApproval.setVisible(false);\n        oBarContentAddSite.setVisible(true);\n        oVBoxAddSite.setVisible(true);\n    }\n\n    // getting values from comboboxes\n    var pt_type = oComboBoxPTType.getModel().getData();\n    var pt_site = oComboBoxPTSite.getModel().getData();\n    var materialType = modelMaterialType.getModel().getData();\n\n    // API Call to fetch the changed header and Item data from the ptbom header & Item tables\n    var options = {\n        data: {\n            bomID: tableData.bomID,\n            verPTBom: tableData.verPTBom\n        }\n    };\n    // Result stores the response from the api\n    var result = await apipost_getChangedData(options);\n    //filtering the response based on the rscsite as global\n    headerResponse = result.rsc_ptbom_header.filter(function(data) {\n        return data.rscSite === pt_bom_global;\n    });\n\n    for (var i = 0; i < result.rsc_ptbom_item.length; i++) {\n        result.rsc_ptbom_item[i].editable = false;\n        // Added keys to make componentType,compControlNum, dates non-editable initially\n        result.rsc_ptbom_item[i].editableSourceChecked = false;\n        if (oIconTabBar.getSelectedKey() === g_site_tab) {\n            result.rsc_ptbom_item[i].editDateFields = false;\n        } else {\n            if (headerResponse[0].ptBomStatus !== g_createStatusData[0].status) {\n                result.rsc_ptbom_item[i].editDateFields = false;\n            } else {\n                result.rsc_ptbom_item[i].editDateFields = true;\n            }\n        }\n    }\n    //Checking if the components array having the data or it is undefined\n    if (result.rsc_ptbom_item && result.rsc_ptbom_item !== undefined) {\n        //Sorting the Items  based on the Item number for components table\n        result.rsc_ptbom_item.sort(custom_sort);\n    }\n\n    // if the display tab is selected: \n    if (oIconTabBar.getSelectedKey() === g_display_tab) {\n        oButtonFooterCancel.setVisible(true); /* added by raj for Footer back button visibility*/\n\n        if (status !== \"display\") {\n            // check if status is not \"display\": set the editable flag sent to the items table to true\n            if (headerResponse[0].ptBomStatus === g_approveStatusData[0].status) {\n                headerResponse[0].holdFlag = true;\n            } else {\n                headerResponse[0].holdFlag = false;\n            }\n            buildHeaderData(headerResponse[0], pt_type, pt_site, status, true);\n            buildItemData(result.rsc_ptbom_item, materialType, true, status);\n            sap.ui.core.BusyIndicator.hide(0);\n        } else if (status === \"display\") {\n            oButtonFooterSave.setVisible(false);\n            oButtonFooterSubmitApproval.setVisible(false);\n            btnRefreshComp.setVisible(false);\n            // check if status is \"display\": set the editable flag sent to the items table to false\n\n            oInputBOMqty.setEditable(false);\n            buildHeaderData(headerResponse[0], pt_type, pt_site, status, true);\n            buildItemData(result.rsc_ptbom_item, materialType, false, status);\n            headerResponse[0].holdFlag = false;\n            sap.ui.core.BusyIndicator.hide(0);\n        }\n\n        // if change tab is selected\n    } else if (oIconTabBar.getSelectedKey() === g_change_tab) {\n        oButtonFooterCancel.setVisible(true);\n\n        if (status !== \"display\") {\n            oButtonFooterSave.setVisible(true);\n            oButtonFooterSubmitApproval.setEnabled(false);\n            btnRefreshComp.setVisible(true);\n            // check if status is not \"display\": set the editable flag sent to the items table to true\n            if (headerResponse[0].ptBomStatus === g_approveStatusData[0].status) {\n                btnRefreshComp.setVisible(false);\n                oButtonFooterSave.setVisible(true);\n                headerResponse[0].holdFlag = true;\n                headerResponse[0].headerBOMqty = false;\n\n            } else {\n                headerResponse[0].holdFlag = false;\n            }\n            buildHeaderData(headerResponse[0], pt_type, pt_site, status, true);\n            buildItemData(result.rsc_ptbom_item, materialType, true, status);\n        } else if (status === \"display\") {\n            oButtonFooterSave.setVisible(false);\n            oButtonFooterSubmitApproval.setVisible(false);\n            btnRefreshComp.setVisible(false);\n            // check if status is not \"display\": set the editable flag sent to the items table to false\n            if (headerResponse[0].ptBomStatus === g_approveStatusData[0].status) {\n                headerResponse[0].holdFlag = true;\n            } else {\n                headerResponse[0].holdFlag = false;\n            }\n            buildHeaderData(headerResponse[0], pt_type, pt_site, status, true);\n            buildItemData(result.rsc_ptbom_item, materialType, false, status);\n        }\n        sap.ui.core.BusyIndicator.hide(0);\n\n    } else if (oIconTabBar.getSelectedKey() === g_site_tab) {\n        //Binding the data to the Header and Item table\n        oButtonFooterCancel.setVisible(true);\n\n        headerResponse[0].holdFlag = false;\n        buildHeaderData(headerResponse[0], pt_type, pt_site, status, true);\n        buildItemData(result.rsc_ptbom_item, materialType, false, g_site_tab);\n\n        siteData = result.rsc_ptbom_header.filter(function(data) {\n            return data.rscSite != pt_bom_global;\n        });\n        //Checking if this has the response or not\n        if (siteData) {\n            //If the length = 2 making the Add new site button as enabled false\n            if (siteData.length === 2) {\n                oButtonAddNewSite.setEnabled(false);\n            } else {\n\n                oButtonAddNewSite.setEnabled(true);\n            }\n            //making the Submit for approval and save button as visible true\n            oButtonFooterSubmitApproval.setVisible(true);\n            oButtonFooterSave.setVisible(true);\n            //If it has the response we are running a loop to converting the validStartDate & validEndDate\n            // to the date object and making the fields as non editable with a flag\n            siteData.forEach(data => {\n                data.validStartDate = new Date(parseInt(data.validStartDate));\n                data.validEndDate = new Date(parseInt(data.validEndDate));\n                data.valueState = \"None\";\n                data.valueStateText = \"\";\n                data.todayDate = new Date();\n                if (data.ptSiteBomStatus === g_approveStatusData[0].status) {\n                    data.editable = true;\n                } else if (data.ptSiteBomStatus === g_createStatusData[0].status) {\n                    data.editable = true;\n                } else {\n                    data.editable = false;\n                }\n                data.dummyID = Math.floor(Math.random() * 1000000 + 1);\n            });\n            var buttonEditable = siteData.find(function(data) {\n                if (data.ptSiteBomStatus === g_createStatusData[0].status) {\n                    return true;\n                }\n            });\n            if (buttonEditable) {\n                oButtonFooterSubmitApproval.setEnabled(true);\n            } else {\n                var saveEditable = siteData.filter(function(data) {\n                    if (data.ptSiteBomStatus === g_approveStatusData[0].status) {\n                        return true;\n                    }\n                });\n                if (saveEditable) {\n                    oButtonFooterSave.setEnabled(true);\n                } else {\n                    oButtonFooterSave.setEnabled(false);\n                    oButtonFooterSubmitApproval.setEnabled(false);\n                }\n            }\n\n            //setting the response to the table \n            oTableAddSite.getModel().setData(siteData);\n            oTableAddSite.setTitle(lebTotal.getText() + \":\" + oTableAddSite.getModel().getData().length);\n            //after the table got binded making a settimeout function to bind the PT Site dropdown values with the below code\n            setTimeout(function() {\n                //making the loop throupgh out the table rows of the cell 3\n                oTableAddSite.getRows().forEach(row => {\n                    var comboBox = row.getCells()[3];\n                    comboBox.destroyItems();\n                    modeloComboBoxPTSite.getData().forEach(data => {\n                        //For the Pt-Site extension we dont need global to be part of the dropdown values \n                        //so making a condition which are not equal to global we are binding to it.\n                        if (data.location !== pt_bom_global) {\n                            var loc = new sap.ui.core.Item({\n                                text: data.location,\n                                key: data.location,\n                            });\n                            //adding items to the comboBox\n                            comboBox.addItem(loc);\n                        }\n                    });\n                });\n            }, 300);\n        } else {\n            oButtonFooterSave.setEnabled(false);\n            oButtonFooterSubmitApproval.setEnabled(false);\n        }\n        oBarContentAddSite.setVisible(true);\n        oVBoxAddSite.setVisible(true);\n        oPanelPTBomItems.setVisible(true);\n        oPanelPTHeader.setVisible(true);\n        oBar.setVisible(true);\n        sap.ui.core.BusyIndicator.hide(0);\n    }\n\n    /**\n     * Name: custom_sort\n     * Description: Used to sort the  PT BOM Items table for all (Create,Change,Display) \n     * Created By :  Jaya Prakash Gundlapalli\n     * Created At: 12/16/2020\n     * CR:   \n     */\n    function custom_sort(a, b) {\n        return a.itemNo - b.itemNo;\n    }\n\n    if (true) {\n        setTimeout(function() {\n            $('.BodyContainer :input').change(function(e) {\n                g_change_detact = true;\n            });\n        }, 200);\n\n    }\n}\n\n/* \n   Parameter description\n   dataObj: Header table data from the response\n   pt_type: data of the PTTYPE from oComboBoxPTType\n   pt_site: data of PTSITE from oComboBoxPTSite\n   status: BOM status\n   visible: flag(true/false) for visiblility of change by, change on\n*/\nfunction buildHeaderData(dataObj, pt_type, pt_site, status, visible, screen) {\n\n    // Date format changes\n    var lineItemDate = \"\";\n    var current = new Date();\n    currentHours = current.getHours();\n    currentMinutes = current.getMinutes();\n    currentSeconds = current.getSeconds();\n    var nextDayDate = new Date(parseInt(dataObj.validStartDate) + 86399999);\n    // If create screen: defaulting dates to Dec 31, 9999\n    if (screen === \"initial\") {\n        dataObj.createdAt = dateTime(Number(dataObj.createdAt));\n        dataObj.holdFlag = false;\n        editable = false;\n        dataObj.editable = editable;\n    }\n    // if change/display screen then date values as per the ptbom header saved data\n    else {\n\n        dataObj.createdAt = dateTime(Number(dataObj.createdAt));\n        dataObj.validStartDate = dateTime(Number(dataObj.validStartDate));\n        dataObj.validEndDate = dateTime(Number(dataObj.validEndDate));\n        dataObj.updatedAt = dateTime(Number(dataObj.updatedAt));\n        dataObj.approvedOn = (dataObj.approvedOn === null || dataObj.approvedOn === \"\") ? \"\" : dateTime(Number(dataObj.approvedOn));\n        if (oIconTabBar.getSelectedKey() === g_site_tab) {\n            dataObj.holdFlag = false;\n        } else if (dataObj.ptBomStatus === g_approveStatusData[0].status) {\n            dataObj.holdFlag = true;\n            dataObj.headerBOMqty = false;\n        } else if (status === \"display\" || status === g_submitForApprovalStatusData[0].status) {\n            oButtonFooterSave.setVisible(false);\n            btnRefreshComp.setVisible(false);\n            dataObj.holdFlag = false;\n            dataObj.headerBOMqty = false;\n        } else if (status === g_createStatusData[0].status) {\n            dataObj.holdFlag = false;\n        }\n        editable = false;\n        dataObj.editable = editable;\n    }\n    var itempt_type = [];\n    itempt_site = [];\n    var data = [];\n    var plmModel = modeloModelObjectPLMSource.oData;\n    var item_plmSource = [];\n    data.push(dataObj);\n    for (var i = 0; i < pt_type.length; i++) {\n        itempt_type.push({\n            key: pt_type[i].ptType,\n            text: pt_type[i].description\n        })\n    }\n    // Pushing the locations: belgium and switzerland into comboBox\n    for (var i = 0; i < pt_site.length; i++) {\n        itempt_site.push({\n            key: pt_site[i].location,\n            text: pt_site[i].location\n        })\n    }\n\n    // Pushing the plmSource values: (eg plmAdaptive)\n    for (var i = 0; i < plmModel.length; i++) {\n        item_plmSource.push({\n            key: plmModel[i].ccnSourceType,\n            text: plmModel[i].ccnSourceType\n        })\n    }\n\n    // Pushing the UOM values from config table into the UOM col\n    modeloTableHeader.setData(data)\n\n    if (oIconTabBar.getSelectedKey() === g_site_tab) {\n        oInputBOMqty.setEditable(false);\n    } else {\n        oInputBOMqty.setEditable(false);\n    }\n}\n/*\n    Parameter Description\n    data: PTBom Items data / Component Repository data from the response\n    materialType: Product Codes data\n    editable: Flag(true/false)-> for action buttons col\n    status : the PTBOM status\n    screen: initial(if create mode)\n*/\nfunction buildItemData(data, materialType, editable, status, screen) {\n    var lineItemDate = \"\";\n    // Formatting the dates for start and end dates\n    let setMinStartDate = new Date();\n    setMinStartDate.setDate(setMinStartDate.getDate());\n    var current = new Date();\n    currentHours = current.getHours();\n    currentMinutes = current.getMinutes();\n    currentSeconds = current.getSeconds();\n    // For setting the minimum dates validarion(prior or current dates limitation)\n    var nextDayDate = new Date(parseInt(data.validStartDate) + 86399999);\n    for (var i = 0; i < data.length; i++) {\n        // if create mode and components are not present then these formats\n        if (screen === \"initial\" && data.length === 0) {\n            data[i].validStartDate = dateTime(Number(data[i].validStartDate));\n            data[i].validEndDate = new Date(9999, 11, 31, currentHours, currentMinutes, currentSeconds);\n            data[i].uom = data[i].hasOwnProperty(\"uom\") ? data[i].uom : \"EA\";\n            data[i].qty = String(data[i].qty);\n        } else {\n            // if change/display mode using this date Formatting\n            data[i].validStartDate = dateTime(Number(data[i].validStartDate));\n            data[i].validEndDate = dateTime(Number(data[i].validEndDate));\n            data[i].uom = data[i].hasOwnProperty(\"uom\") ? data[i].uom : \"EA\";\n            data[i].qty = String(data[i].qty);\n        }\n        var statusValue = \"\";\n        if (data[i].labelStatus) {\n            data[i].componentStatus = data[i].labelStatus\n        }\n\n        data[i].editDateFields = false;\n    }\n\n    var uomData = [];\n    // Pushing the UOM into comboBox\n    for (var i = 0; i < g_uomData.length; i++) {\n        uomData.push({\n            key: g_uomData[i].UOM,\n            text: g_uomData[i].UOM\n        });\n    }\n    oTableComponent.removeAllColumns();\n    oTableComponent.setVisible(false);\n    var oModelInput = new sap.ui.model.json.JSONModel();\n    oModelInput.setData(model_component_filter_data.getModel().getData());\n    var checkSource = false;\n    // Setting the component source field to selected/no selected: if from component Repository(checkSource:true) else false\n    data.forEach(function(item) {\n        if (item.labelStatus === g_approveStatusData[0].status || item.labelStatus === g_effectiveStatusData[0].status || item.componentStatus === g_effectiveStatusData[0].status || item.componentStatus ===\n            g_approveStatusData[0].status) {\n            item.checkSource = true;\n            item.visible = false;\n        }\n    })\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"6rem\",\n        label: new sap.m.Label({\n            text: lblserialNO.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n            text: \"{itemNo}\",\n        }),\n\n        hAlign: \"Center\",\n        filterProperty: \"itemNo\"\n\n    }));\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"10rem\",\n        label: new sap.m.Label({\n            text: lblCompType.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n            text: \"{componentType}\",\n        }),\n        hAlign: \"Center\",\n        filterProperty: \"componentType\",\n        sortProperty: \"componentType\",\n    }));\n\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"10rem\",\n        label: new sap.m.Label({\n            text: lblCompContrlNum.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Input({\n                editable: false,\n                value: \"{component}\",\n                showSuggestion: true,\n                valueState: \"{componentValueState}\",\n                valueStateText: \"{componentValueStateMsg}\"\n            })\n            .addStyleClass(\"input_class_new\"),\n\n        hAlign: \"Center\",\n        filterProperty: \"component\",\n        sortProperty: \"component\",\n    }));\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"7rem\",\n        label: new sap.m.Label({\n            text: lblRevision.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Input({\n            editable: false,\n            value: \"{revision}\",\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"revision\",\n        sortProperty: \"revision\",\n    }));\n\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"13rem\",\n        label: new sap.m.Label({\n            text: oLabelPDFURL.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.HBox({\n                alignItems: \"Center\",\n            })\n            .addItem(new sap.m.Link({\n                    text: \"{refLink}\",\n                    visible: true,\n                    press: function(oEvent) {\n\n                        pdfLinkClickEventHandeler(oEvent); //to retrieve files from S3\n\n                    }\n                }).addStyleClass(\"sapUiTinyMarginBeginEnd\")\n                .bindProperty(\"text\", {\n                    parts: [\"refLink\"],\n                    formatter: function(refLink) {\n                        if (typeof refLink === \"object\") {\n                            if (refLink !== null && refLink !== undefined) {\n                                // returning the file name from the refLink object\n                                return refLink.name;\n                            } else {\n                                return \"\";\n                            }\n                        } else {\n                            if (refLink !== null && refLink !== undefined) {\n                                var split = refLink.split('/');\n                                return split[split.length - 1];\n                            } else {\n                                return \"\";\n                            }\n                        }\n                    }\n                })),\n        hAlign: \"Center\",\n        filterProperty: \"refLink\"\n    }));\n\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"8rem\",\n        label: new sap.m.Label({\n            text: lblcopmQty.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Input({\n            editable: status !== g_createStatusData[0].status ? false : true,\n            value: \"{qty}\",\n            maxLength: 3,\n            liveChange: function(oEvent) {\n                var updatedVal = this.getValue();\n                this.setValue(updatedVal.replace(/[^0-9]+/g, ''));\n            },\n            valueState: \"{qtyValueState}\"\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"qty\",\n        sortProperty: \"qty\",\n    }));\n\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"5rem\",\n        label: new sap.m.Label({\n            text: lblBaseUoM.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.ComboBox({\n                selectedKey: \"{uom}\",\n                editable: status !== g_createStatusData[0].status ? false : true,\n                items: uomData,\n            })\n            // User should not be able to type anything\n            .addEventDelegate({\n                onAfterRendering: function(oEvent) {\n                    setTimeout(function() {\n                        $(\".stopTyping\").find(\"input\").attr(\"readonly\", true);\n                    }, 10);\n\n                }\n            })\n            .addStyleClass(\"input_class_new stopTyping\"),\n        hAlign: \"Center\",\n        filterProperty: \"uom\"\n    }));\n\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"6rem\",\n        label: new sap.m.Label({\n            text: lblStatus.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Input({\n            editable: false,\n            value: \"{componentStatus}\",\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"componentStatus\"\n\n    }));\n\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"140px\",\n        label: new sap.m.Label({\n            text: lblEffStartDate.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.DatePicker({\n            editable: \"{editDateFields}\",\n\n            value: \"{validStartDate}\",\n            valueState: \"{validToBatchValueState}\",\n            valueStateText: \"{validToBatchValueStateMsg}\",\n            valueFormat: \"MMM dd, YYYY\",\n            displayFormat: \"MMM dd, YYYY\",\n            change: function(oEvent) {\n                if (this.isValidValue()) {\n                    var selectedDate = this.getDateValue().getDate();\n                    if (lineItemDate === \"\") {\n                        lineItemDate = this.getDateValue()\n                    }\n                    var dbEffectiveDate = lineItemDate.getDate();\n                    var todaysDate = new Date().getDate();\n                    if ((selectedDate <= dbEffectiveDate && selectedDate < todaysDate)) {\n\n                        getDialog(lblDateValidationMsg.getText());\n                        this.setDateValue(lineItemDate);\n                        oEvent.getSource().getModel().refresh()\n                    } else if (selectedDate > dbEffectiveDate && selectedDate <= todaysDate) {\n                        this.setDateValue(this.getDateValue());\n                        oEvent.getSource().getModel().refresh()\n                    } else if (selectedDate >= todaysDate) {\n                        this.setDateValue(this.getDateValue());\n                        oEvent.getSource().getModel().refresh()\n                    }\n                    lineItemDate = \"\";\n                    checkEdited()\n                } else {\n                    getDialog(\"Date entered is invalid, resetting the date to last selected date.\");\n                    this.setValue(printDateString(this.getDateValue()))\n                    this.setDateValue(this.getDateValue());\n                    oEvent.getSource().getModel().refresh()\n                }\n\n            },\n            navigate: function(oEvent) {\n                lineItemDate = this.getDateValue();\n            },\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"validStartDate\",\n        sortProperty: \"validStartDate\",\n    }));\n\n\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"140px\",\n        label: new sap.m.Label({\n            text: lblEffEndDate.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.DatePicker({\n            editable: \"{editDateFields}\",\n            value: \"{validEndDate}\",\n            valueState: \"{validToBatchValueState}\",\n            valueStateText: \"{validToBatchValueStateMsg}\",\n            valueFormat: \"MMM dd, YYYY\",\n            displayFormat: \"MMM dd, YYYY\",\n            change: function(oEvent) {\n                var startDateVal = new Date(oEvent.oSource.getBindingContext().getObject().validStartDate)\n                if (this.isValidValue()) {\n                    if (this.getDateValue() < startDateVal) {\n                        getDialog(lblDateValidationMsg.getText());\n                        this.setDateValue(new Date(9999, 11, 31, currentHours, currentMinutes, currentSeconds));\n                        oEvent.getSource().getModel().refresh()\n                        checkEdited()\n                    }\n                } else {\n                    getDialog(\"Date entered is invalid, resetting the date to last selected date.\")\n                    this.setValue(printDateString(this.getDateValue()))\n                    this.setDateValue(this.getDateValue());\n                    oEvent.getSource().getModel().refresh()\n                }\n\n                if (this.isValidValue()) {\n                    if (this.getDateValue() < startDateVal) {\n\n                        getDialog(lblDateValidationMsg.getText());\n                        this.setDateValue(new Date(9999, 11, 31, currentHours, currentMinutes, currentSeconds));\n                        oEvent.getSource().getModel().refresh()\n                        checkEdited()\n                    }\n\n                } else {\n                    getDialog(\"Date entered is invalid, resetting the date to last selected date.\")\n                    this.setValue(printDateString(this.getDateValue()))\n                    this.setDateValue(this.getDateValue());\n                    oEvent.getSource().getModel().refresh()\n                }\n            },\n            navigate: function(oEvent) {\n                lineItemDate = this.getDateValue();\n            },\n\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"validEndDate\",\n        sortProperty: \"validEndDate\",\n    }));\n\n    oTableComponent.addColumn(new sap.ui.table.Column({\n        width: \"10rem\",\n        label: new sap.m.Label({\n            text: lblAltRefNum.getText(),\n            wrapping: true\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n            text: \"{altRefNumber}\",\n        }).addStyleClass(\"input_class_new\"),\n        hAlign: \"Center\",\n        filterProperty: \"altRefNumber\"\n    }));\n    if (oIconTabBar.getSelectedKey() === g_site_tab) {\n\n        oTableComponent.addColumn(new sap.ui.table.Column({\n            width: \"10rem\",\n            label: new sap.m.Label({\n                text: lblInstruction.getText(),\n                wrapping: true,\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.TextArea({\n                editable: false,\n                value: \"{ptBomItemInstruction}\",\n                maxLength: 500,\n                rows: 1,\n            }).addStyleClass(\"input_class_new\"),\n            hAlign: \"Center\",\n            filterProperty: \"ptBomItemInstruction\"\n\n        }));\n    } else {\n        oTableComponent.addColumn(new sap.ui.table.Column({\n            width: \"10rem\",\n            label: new sap.m.Label({\n                text: lblInstruction.getText(),\n                wrapping: true,\n            }).addStyleClass(\"headeraTextStyle\"),\n            template: new sap.m.TextArea({\n                editable: status === g_submitForApprovalStatusData[0].status ? false : status === g_effectiveStatusData[0].status ? false : status === g_approveStatusData[0].status ? false : status ===\n                    \"display\" ? false : true,\n                value: \"{ptBomItemInstruction}\",\n                maxLength: 500,\n                rows: 1,\n            }).addStyleClass(\"input_class_new\"),\n            hAlign: \"Center\",\n            filterProperty: \"ptBomItemInstruction\"\n        }));\n    }\n\n    var oModel = new sap.ui.model.json.JSONModel();\n    oModel.setData(data);\n    oTableComponent.setModel(oModel);\n\n    oTableComponent.bindRows(\"/\");\n\n    oTableComponent.setTitle(lebTotal.getText() + \":\" + oTableComponent.getModel().getData().length);\n\n    oTableComponent.setVisible(true);\n    oTableComponent.getModel().refresh();\n}\n\n//Check if user made any changes in the change function\nfunction checkEdited() {\n    if (oIconTabBar.getSelectedKey() === g_display_tab || oIconTabBar.getSelectedKey() === g_change_tab) {\n        g_change_detact = true;\n\n    }\n}\n\n\n/*function to render the date in required format*/\n\nfunction printDateString(myDate) {\n    var month = [];\n    month[0] = \"Jan\";\n    month[1] = \"Feb\";\n    month[2] = \"Mar\";\n    month[3] = \"Apr\";\n    month[4] = \"May\";\n    month[5] = \"Jun\";\n    month[6] = \"Jul\";\n    month[7] = \"Aug\";\n    month[8] = \"Sep\";\n    month[9] = \"Oct\";\n    month[10] = \"Nov\";\n    month[11] = \"Dec\";\n    var dd = String(myDate.getDate()).padStart(2, '0');\n    return month[myDate.getMonth()] + \" \" + dd + \", \" + myDate.getFullYear();\n\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"16d4c20b-570e-494f-a4ff-b058ea4ded46","fieldName":"SaveUpdateTheBOM","fieldParent":"9579989c-97e2-47f9-925a-4383fb426344","fieldPos":567,"fieldType":"neptune.Script","script":"/**\n * Name: SaveTheBOM\n * Description: Used for saving the bom data in database \n * Created By :  Suman Dey  \n * Created At: 09/25/2020\n * CR:   \n */\n\n//For saving the PT BOM header and componets data.\nasync function SaveData() {\n    if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n        sap.ui.core.BusyIndicator.show(0);\n        var ptSiteHeaders = oTableAddSite.getModel().getData();\n        var ptBomHeader = oTableHeader.getModel().getData()[0];\n        var updateArr = [];\n        //If the record has the status as approved it will pushes the data to an array and it will updates the On-Hold data\n        ptSiteHeaders.forEach(data => {\n            if (data.ptSiteBomStatus.includes(g_approveStatusData[0].status)) {\n                updateArr.push(data);\n            }\n        });\n        //If the upate array length > 1 the updating the On-Hold data into the PT-BOM header data\n        if (updateArr.length > 0) {\n            updateSiteExtension(\"insertPTSITE\", updateArr, ptBomHeader);\n            //If ptSiteHeaders length is 2 then we are validating the rsc site\n        } else if (ptSiteHeaders.length === 2) {\n            if (ptSiteHeaders[0].rscSite === ptSiteHeaders[1].rscSite) {\n                getDialog(oLabelPTSiteCantbeSame.getText());\n                sap.ui.core.BusyIndicator.hide();\n                return;\n            } else {\n                //it will updates the data into the Ptom header\n                updateSiteExtension(\"insertPTSITE\", ptSiteHeaders, ptBomHeader);\n            }\n        } else {\n            //it will updates the data into the Ptom header\n            updateSiteExtension(\"insertPTSITE\", ptSiteHeaders, ptBomHeader);\n        }\n    } else {\n        var header = oTableHeader.getModel().getData()[0];\n        var flag = false; //if missing data then setValueState error else None\n        if (header.qty === \"\") {\n            header.qtyValueState = \"Error\";\n            flag = true;\n        } else {\n            header.qtyValueState = \"None\";\n        }\n        //Date validations \n        if (header.validStartDate === \"\") {\n            flag = true;\n            header.validFromValueState = \"Error\";\n        } else {\n            header.validFromValueState = \"None\";\n        }\n        //Date validations \n        if (header.validEndDate === \"\") {\n            flag = true;\n            header.validTillValueState = \"Error\";\n        } else {\n            header.validTillValueState = \"None\";\n        }\n\n        //Date validations \n        if (new Date(header.validEndDate).getTime() < new Date(header.validStartDate).getTime()) {\n            flag = true;\n            header.validFromValueState = \"Error\";\n            header.validTillValueState = \"Error\";\n            data.validFromValueStateMsg = oLabelTillDateLessThenStartDate.getText();\n            data.validTillValueStateMsg = oLabelTillDateLessThenStartDate.getText();\n        }\n\n        var ptBomItemTab = oTableComponent.getModel().getData()\n        for (var i = 0; i < ptBomItemTab.length; i++) {\n\n            if (ptBomItemTab[i].qty === \"\") {\n                flag = true;\n                ptBomItemTab[i].qtyValueState = \"Error\";\n            } else {\n                ptBomItemTab[i].qtyValueState = \"None\";\n            }\n\n        }\n        \n        oTableComponent.getModel().refresh();\n\n        if (flag) {\n            getDialog(oLabelMadetoryFields.getText())\n            dialog_save.close();\n        } else if (oTableComponent.getModel().getData().length === 0) {\n            getDialog(oLabelNoComponentText.getText());\n            dialog_save.close();\n        } else {\n            // save the data \n            saveAllData();\n            dialog_save.close();\n        }\n    }\n}\n\n//For saving the PT BOM header and componets data.\nfunction saveAllData() {\n\n    sap.ui.core.BusyIndicator.show()\n    var item = [];\n    for (var i = 0; i < oTableComponent.getModel().getData().length; i++) {\n        var data = oTableComponent.getModel().getData()[i];\n        var ob = {};\n        ob.componentType = data.componentType\n        ob.component = data.component;\n        ob.matlShrtDesc = data.matlShrtDesc;\n        ob.qty = data.qty === undefined ? \"1\" : data.qty;\n        ob.uom = data.uom;\n        ob.uf1 = data.uf1;\n        ob.uf3 = data.uf3;\n        ob.uf2 = data.uf2;\n        ob.altId = data.altId;\n        ob.ifuTem = data.ifuTem;\n        ob.labelPrinter = data.labelPrinter;\n        ob.ifuPrinter = data.ifuPrinter;\n        ob.labelTemplate = data.labelTemplate;\n        ob.ptBomItemInstruction = data.ptBomItemInstruction;\n        ob.referenceDoc = \"\";\n        ob.revision = data.revision;\n        ob.checkSource = data.checkSource;\n        ob.refLink = data.refLink;\n\n        ob.altRefNumber = data.altRefNumber;\n\n\n        ob.validStartDate = new Date(data.validStartDate).getTime();\n        ob.validEndDate = new Date(data.validEndDate).getTime();\n\n        ob.labelStatus = data.labelStatus;\n        ob.componentStatus = data.componentStatus;\n        if (data.hasOwnProperty('deleteFlag')) {\n            ob.deleteFlag = data.deleteFlag;\n        }\n        if (data.hasOwnProperty('id')) {\n            ob.id = data.id;\n        }\n        if (data.hasOwnProperty('bomID')) {\n            ob.bomID = data.bomID;\n        }\n        item.push(ob);\n    }\n    for (var i = 0; i < delete_component_holder.getModel().getData().length; i++) {\n        var data = delete_component_holder.getModel().getData()[i];\n        item.push({\n            id: data.id,\n            deleteFlag: data.deleteFlag\n        })\n    }\n    var ptBomData = oTableHeader.getModel().getData()[0];\n    var options = {\n        data: {\n            \"matlNum\": ptBomData.matlNum,\n            \"matDescription\": ptBomData.matDescription,\n            \"gtin\": ptBomData.gtin,\n            \"verPTBom\": ptBomData.verPTBom,\n            \"rscSite\": ptBomData.rscSite,\n            \"shiptoCountry\": ptBomData.shiptoCountry,\n            \"bomQty\": ptBomData.bomQty,\n            \"customer\": \"\", //ptBomData.customer,\n            \"rscChangeOrderNum\": ptBomData.rscChangeOrderNum,\n            \"ptBomHeaderInstruction\": ptBomData.ptBomHeaderInstruction,\n            \"businessUnit\": ptBomData.businessUnit,\n            \"versionDescription\": ptBomData.verDescription,\n            \"ptBomStatus\": ptBomData.ptBomStatus,\n            \"ptType\": ptBomData.ptType,\n            \"uom\": ptBomData.uom,\n            \"createdBy\": g_username,\n            \"variant\": ptBomData.variant, // added by raj for stroing the variant in header table\n            \"ptBomOnHold\": ptBomData.ptBomOnHold,\n            \"plmSource\": ptBomData.plmSource,\n            \"plmChangeControlNum\": ptBomData.plmChangeControlNum,\n            \"rejectReason\": ptBomData.rejectReason,\n            \"ptSiteBomStatus\": ptBomData.ptSiteBomStatus,\n            \"franchise\": ptBomData.franchise,\n            \"rejectReason\": ptBomData.rejectReason,\n            \"rejectedBy\": ptBomData.rejectedBy,\n            \"item\": item\n        }\n    };\n\n    if (ptBomData.hasOwnProperty('id')) {\n        options.data.id = ptBomData.id;\n    }\n    if (ptBomData.hasOwnProperty('bomID')) {\n        options.data.bomID = ptBomData.bomID;\n    }\n    JSON.stringify(options);\n    apipost_saveAndUpdateBom(options);\n}\n\n\nfunction checkSiteDateValidation(siteData) {\n    var startDateVal = new Date(oEvent.oSource.getBindingContext().getObject().validStartDate);\n\n    siteData.forEach(data => {\n        if (data.validStartDate) {\n\n        }\n    });\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"ea3c20e5-d7b5-4b02-a76f-e490a466990d","fieldName":"Search","fieldParent":"fca58a61-b64e-4dd6-a898-e419f179a398","fieldPos":568,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"653f5f25-c802-4e3e-ba32-748d5dc9eb4d","fieldName":"DisplayFunctions","fieldParent":"ea3c20e5-d7b5-4b02-a76f-e490a466990d","fieldPos":569,"fieldType":"neptune.Script","script":"/**\n * Name: DisplayFunctions\n * Description: All the functios used for display search used in this script\n * Created By :  Suman Dey  \n * Created At: 12/07/2020\n * CR:   \n */\n\n\nfunction initDisplayTable(data, oTable) {\n\n    data.forEach(value => {\n        value.approvedOn = dateTime(Number(value.approvedOn));\n        value.createdAt = dateTime(Number(value.createdAt));\n        value.updatedAt = dateTime(Number(value.updatedAt));\n        if (value.hasOwnProperty(value.componentType)) {\n            value.validEndDateItem = dateTime(Number(value.validEndDateItem));\n            value.validStartDateItem = dateTime(Number(value.validStartDateItem));\n        }\n    });\n\n    var itemColumnVisible;\n    if (oIconTabBarPTBOM.getSelectedKey() === \"GLOBAL\") {\n        itemColumnVisible = chkBOMComponent.getSelected();\n        var columnJson = [{\n                columnName: lblVersion.getText(),\n                width: \"100px\",\n                bindingValue: \"verPTBom\",\n            }, {\n                columnName: oLabelProductNumber.getText(),\n                width: \"100px\",\n                bindingValue: \"matlNum\"\n            }, {\n                columnName: lblVariant.getText(),\n                width: \"100px\",\n                bindingValue: \"variant\"\n            }, {\n                columnName: oLabelDestination.getText(),\n                width: \"100px\",\n                bindingValue: \"shiptoCountry\"\n            }, {\n                columnName: lblbomStatus.getText(),\n                width: \"100px\",\n                bindingValue: \"ptBomStatus\" //ptSiteBomStatus\n            }, {\n                columnName: lblBOMqty.getText(),\n                width: \"100px\",\n                bindingValue: \"bomQty\"\n            }, {\n                columnName: lblBaseUoM.getText(),\n                width: \"100px\",\n                bindingValue: \"uom\"\n            }, {\n                columnName: lblBOMLevel.getText(), //lblPTSite.getText(),\n                width: \"100px\",\n                bindingValue: \"rscSite\"\n            },\n\n            {\n                columnName: lblEffStartDate.getText(),\n                width: \"100px\",\n                bindingValue: \"validStartDate\",\n                //type: \"date\",\n            }, {\n                columnName: lblEffEndDate.getText(),\n                width: \"100px\",\n                bindingValue: \"validEndDate\",\n                //type: \"date\",\n            },\n\n            {\n                columnName: lblonhold.getText(),\n                width: \"100px\",\n                bindingValue: \"ptBomOnHold\"\n            }, {\n                columnName: lblrscChangeOrder.getText(),\n                width: \"380px\",\n                bindingValue: \"rscChangeOrderNum\"\n            }, {\n                columnName: lblBomID.getText(),\n                width: \"280px\",\n                bindingValue: \"bomID\"\n            }, {\n                columnName: lblbu.getText(),\n                width: \"100px\",\n                bindingValue: \"businessUnit\"\n            }, {\n                columnName: lblfranchise.getText(),\n                width: \"100px\",\n                bindingValue: \"franchise\"\n            }, {\n                columnName: oLabelProDescription.getText(),\n                width: \"280px\",\n                bindingValue: \"matDescription\"\n            }, {\n                columnName: lblGTIN.getText(),\n                width: \"280px\",\n                bindingValue: \"gtin\"\n            },\n            {\n                columnName: lblcreatedOn.getText(),\n                width: \"100px\",\n                bindingValue: \"createdAt\",\n                //type: \"date\"\n            }, {\n                columnName: lblcreatedBy.getText(),\n                width: \"100px\",\n                bindingValue: \"createdBy\"\n            }, {\n                columnName: lblapprovedOn.getText(),\n                width: \"100px\",\n                bindingValue: \"approvedOn\",\n                //type: \"date\"\n            }, {\n                columnName: lblapprovedBy.getText(),\n                width: \"100px\",\n                bindingValue: \"approvedBy\"\n            }, {\n                columnName: lblchangedOn.getText(),\n                width: \"100px\",\n                bindingValue: \"updatedAt\",\n                //type: \"date\"\n            }, {\n                columnName: lblchangedBy.getText(),\n                width: \"100px\",\n                bindingValue: \"updatedBy\"\n            },\n            {\n                columnName: lblserialNO.getText(),\n                width: \"100px\",\n                bindingValue: \"itemNo\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblCompType.getText(),\n                width: \"100px\",\n                bindingValue: \"componentType\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblCCNumber.getText(),\n                width: \"150px\",\n                bindingValue: \"component\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblRevision.getText(),\n                width: \"100px\",\n                bindingValue: \"revision\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: oLabelPDFURL.getText(),\n                width: \"200px\",\n                bindingValue: \"refLink\",\n                itemColumnVisible: itemColumnVisible,\n                type: \"link\"\n            }, {\n                columnName: lblcopmQty.getText(),\n                width: \"100px\",\n                bindingValue: \"qtyItem\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblBaseUoM.getText(),\n                width: \"100px\",\n                bindingValue: \"uomItem\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblStatus.getText(),\n                width: \"100px\",\n                bindingValue: \"componentStatus\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblComEffStart.getText(),\n                width: \"100px\",\n                bindingValue: \"validStartDateItem\",\n                itemColumnVisible: itemColumnVisible,\n                //type: \"date\"\n            }, {\n                columnName: lblCompEffEndDate.getText(),\n                width: \"100px\",\n                bindingValue: \"validEndDateItem\",\n                itemColumnVisible: itemColumnVisible,\n                //type: \"date\"\n            }, {\n                columnName: lblInstruction.getText(),\n                width: \"100px\",\n                bindingValue: \"ptBomItemInstruction\",\n                itemColumnVisible: itemColumnVisible\n            },\n\n        ];\n    } else if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n        itemColumnVisible = chkSiteBOMComponent.getSelected();\n        var columnJson = [{\n                columnName: lblVersion.getText(),\n                width: \"100px\",\n                bindingValue: \"verPTBom\",\n            }, {\n                columnName: oLabelProductNumber.getText(),\n                width: \"100px\",\n                bindingValue: \"matlNum\"\n            }, {\n                columnName: lblVariant.getText(),\n                width: \"100px\",\n                bindingValue: \"variant\"\n            }, {\n                columnName: oLabelDestination.getText(),\n                width: \"100px\",\n                bindingValue: \"shiptoCountry\"\n            }, {\n                columnName: lblSitePTSiteStatus.getText(),\n                width: \"100px\",\n                bindingValue: \"ptSiteBomStatus\"\n            }, {\n                columnName: lblBOMqty.getText(),\n                width: \"100px\",\n                bindingValue: \"bomQty\"\n            }, {\n                columnName: lblBaseUoM.getText(),\n                width: \"100px\",\n                bindingValue: \"uom\"\n            }, {\n                columnName: lblPTSite.getText(),\n                width: \"100px\",\n                bindingValue: \"rscSite\"\n            },\n\n            {\n                columnName: lblEffStartDate.getText(),\n                width: \"100px\",\n                bindingValue: \"validStartDate\",\n                //type: \"date\",\n            }, {\n                columnName: lblEffEndDate.getText(),\n                width: \"100px\",\n                bindingValue: \"validEndDate\",\n                //type: \"date\",\n            },\n\n            {\n                columnName: lblonhold.getText(),\n                width: \"100px\",\n                bindingValue: \"ptBomOnHold\"\n            }, {\n                columnName: lblrscChangeOrder.getText(),\n                width: \"380px\",\n                bindingValue: \"rscChangeOrderNum\"\n            }, {\n                columnName: lblBomID.getText(),\n                width: \"280px\",\n                bindingValue: \"bomID\"\n            }, {\n                columnName: lblbu.getText(),\n                width: \"100px\",\n                bindingValue: \"businessUnit\"\n            }, {\n                columnName: lblfranchise.getText(),\n                width: \"100px\",\n                bindingValue: \"franchise\"\n            }, {\n                columnName: oLabelProDescription.getText(),\n                width: \"280px\",\n                bindingValue: \"matDescription\"\n            }, {\n                columnName: lblGTIN.getText(),\n                width: \"280px\",\n                bindingValue: \"gtin\"\n            },\n            {\n                columnName: lblcreatedOn.getText(),\n                width: \"100px\",\n                bindingValue: \"createdAt\",\n                //type: \"date\"\n            }, {\n                columnName: lblcreatedBy.getText(),\n                width: \"100px\",\n                bindingValue: \"createdBy\"\n            }, {\n                columnName: lblapprovedOn.getText(),\n                width: \"100px\",\n                bindingValue: \"approvedOn\",\n                //type: \"date\"\n            }, {\n                columnName: lblapprovedBy.getText(),\n                width: \"100px\",\n                bindingValue: \"approvedBy\"\n            }, {\n                columnName: lblchangedOn.getText(),\n                width: \"100px\",\n                bindingValue: \"updatedAt\",\n                //type: \"date\"\n            }, {\n                columnName: lblchangedBy.getText(),\n                width: \"100px\",\n                bindingValue: \"updatedBy\"\n            },\n            {\n                columnName: lblserialNO.getText(),\n                width: \"100px\",\n                bindingValue: \"itemNo\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblCompType.getText(),\n                width: \"100px\",\n                bindingValue: \"componentType\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblCCNumber.getText(),\n                width: \"150px\",\n                bindingValue: \"component\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblRevision.getText(),\n                width: \"100px\",\n                bindingValue: \"revision\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: oLabelPDFURL.getText(),\n                width: \"200px\",\n                bindingValue: \"refLink\",\n                itemColumnVisible: itemColumnVisible,\n                type: \"link\"\n            }, {\n                columnName: lblcopmQty.getText(),\n                width: \"100px\",\n                bindingValue: \"qtyItem\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblBaseUoM.getText(),\n                width: \"100px\",\n                bindingValue: \"uomItem\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblStatus.getText(),\n                width: \"100px\",\n                bindingValue: \"componentStatus\",\n                itemColumnVisible: itemColumnVisible\n            }, {\n                columnName: lblComEffStart.getText(),\n                width: \"100px\",\n                bindingValue: \"validStartDateItem\",\n                itemColumnVisible: itemColumnVisible,\n                //type: \"date\"\n            }, {\n                columnName: lblCompEffEndDate.getText(),\n                width: \"100px\",\n                bindingValue: \"validEndDateItem\",\n                itemColumnVisible: itemColumnVisible,\n                //type: \"date\"\n            }, {\n                columnName: lblInstruction.getText(),\n                width: \"100px\",\n                bindingValue: \"ptBomItemInstruction\",\n                itemColumnVisible: itemColumnVisible\n            },\n\n        ];\n    }\n\n    oTable.removeAllColumns();\n    for (var i = 0; i < columnJson.length; i++) {\n        var obj = columnJson[i];\n\n        if (obj.hasOwnProperty(\"type\")) {\n            if (obj.type === \"link\") {\n                oTable.addColumn(new sap.ui.table.Column({\n                    autoResizable: true,\n                    width: obj.width,\n                    visible: obj.hasOwnProperty(\"itemColumnVisible\") ? itemColumnVisible : true,\n                    label: new sap.m.Label({\n                        text: obj.columnName,\n                        wrapping: true,\n                    }).addStyleClass(\"headeraTextStyle\"),\n                    template: new sap.m.Link({\n                            press: function(oEvent) {\n                                // var pdfSignedURL = oEvent.getSource().getBindingContext().getObject().preSignedLink;\n                                // window.open(pdfSignedURL, '_blank');\n                                pdfLinkClickEventHandeler(oEvent);\n                            }\n                        }).addStyleClass(\"sapUiTinyMarginBeginEnd\")\n                        .bindProperty(\"text\", {\n                            parts: [\"refLink\"],\n                            formatter: function(refLink) {\n                                if (typeof refLink === \"object\") {\n                                    if (refLink !== null && refLink !== undefined) {\n                                        // returning the file name from the refLink object\n                                        return refLink.name;\n                                    } else {\n                                        return \"\";\n                                    }\n                                } else {\n                                    if (refLink !== null && refLink !== undefined) {\n                                        var split = refLink.split('/');\n                                        return split[split.length - 1];\n                                    } else {\n                                        return \"\";\n                                    }\n                                }\n                            }\n                        }),\n                    hAlign: \"Center\",\n                    filterProperty: obj.bindingValue,\n                    sortProperty: obj.bindingValue,\n                }));\n            }\n        } else {\n            if (obj.bindingValue === \"verPTBom\") {\n                oTable.addColumn(new sap.ui.table.Column({\n                    autoResizable: true,\n                    width: obj.width,\n                    visible: obj.hasOwnProperty(\"itemColumnVisible\") ? itemColumnVisible : true,\n                    label: new sap.m.Label({\n                        text: obj.columnName,\n                        wrapping: true,\n                    }).addStyleClass(\"headeraTextStyle\"),\n                    template: new sap.m.Link({\n                        text: `{${obj.bindingValue}}`,\n                        press: function(oEvent) {\n                            var rowIndex = parseInt(oEvent.getSource().getBindingContext().sPath.split(\"/\")[1]);\n                            var data = oEvent.getSource().getModel().getData()[rowIndex];\n                            if (oIconTabBarPTBOM.getSelectedKey() === \"GLOBAL\") {\n                                oButtonFooterSave.setVisible(false);\n                                oButtonFooterSubmitApproval.setVisible(false);\n                                openTheRowData(data, \"display\");\n                            } else if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n                                sap.ui.core.BusyIndicator.show();\n                                var options = {\n                                    data: {\n                                        searchdata: {\n                                            bomID: data.bomID,\n                                            verPTBom: data.verPTBom,\n                                            rscSite: data.rscSite\n                                        },\n                                        setting: {\n                                            flag: \"inner_data\"\n                                        }\n                                    }\n                                };\n                                apigetSiteData(options);\n                            }\n\n                        }\n                    }),\n                    hAlign: \"Center\",\n                    filterProperty: obj.bindingValue,\n                    sortProperty: obj.bindingValue,\n                }));\n            } else {\n                oTable.addColumn(new sap.ui.table.Column({\n                    autoResizable: true,\n                    width: obj.width,\n                    visible: obj.hasOwnProperty(\"itemColumnVisible\") ? itemColumnVisible : true,\n                    label: new sap.m.Label({\n                        text: obj.columnName,\n                        wrapping: true,\n                    }).addStyleClass(\"headeraTextStyle\"),\n                    template: new sap.m.Text({\n                        wrapping: false,\n                        text: `{${obj.bindingValue}}`\n                    }),\n                    hAlign: \"Center\",\n                    filterProperty: obj.bindingValue,\n                    sortProperty: obj.bindingValue,\n                }));\n            }\n        }\n    }\n    var oModel = new sap.ui.model.json.JSONModel();\n    oModel.setData(data);\n    oTable.setModel(oModel);\n    oTable.bindRows(\"/\");\n    oTable.setTitle(lebTotal.getText() + \" (\" + model_display_data_holder.getModel().getData().length + \")\");\n    oTable.addEventDelegate({\n        onAfterRendering: function() {\n\n            var columnCount = oTable.getColumns();\n            for (var indx = 0; indx < columnCount.length; indx++) {\n\n                oTable._aExtensions[0].doAutoResizeColumn(indx);\n                columnCount[indx].setAutoResizable(false);\n            }\n\n            oIconTabBar.setBusy(false);\n            ptSiteIconTabBar.setBusy(false);\n            sap.ui.core.BusyIndicator.hide(0);\n\n        }\n    });\n}\n\n/*Build the paggination number under table using library to build that*/\nfunction setCreatePagginationView(oTable, pagginationId) {\n    var totalNumberOfItems = model_display_data_holder.getModel().getData().length;\n    $(`#${pagginationId}`).pagination({\n        useAnchors: false,\n        items: totalNumberOfItems,\n        itemsOnPage: \"500\",\n        currentPage: g_currentPageNoDisplay,\n        pages: Math.ceil(totalNumberOfItems / 500),\n        prevText: 'Prev',\n        nextText: 'Next',\n        cssStyle: 'light-theme',\n        onPageClick: function(pageNumber, event) {\n            g_currentPageNoDisplay = pageNumber;\n            setupDisplayPaggination(oTable);\n        }\n    });\n    setupDisplayPaggination(oTable)\n}\n\nfunction setupDisplayPaggination(oTable) {\n    var pagginationArr;\n    var data = model_display_data_holder.getModel().getData();\n    if (g_currentPageNoDisplay === 1) {\n        pagginationArr = data.slice(0, 500);\n    } else {\n        pagginationArr = data.slice((g_currentPageNoDisplay - 1) * 500, ((g_currentPageNoDisplay - 1) * 500) * 2);\n    }\n    initDisplayTable(pagginationArr, oTable);\n    // setCreatePagginationView();\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"d114f8a4-627b-4180-c721-052d7b0aba53","fieldName":"SearchFunction","fieldParent":"ea3c20e5-d7b5-4b02-a76f-e490a466990d","fieldPos":570,"fieldType":"neptune.Script","script":"/**\n * Name: SearchFunction\n * Description: Used in Change and Display for getting the data from header table \n * Created By :  Suman Dey  \n * Created At: 09/25/2020\n * CR:   \n */\n\n//Get the version depending on the filter data\nfunction initChangeData() {\n    var flag = validateRequiredField(false);\n    if (flag) {\n        sap.ui.core.BusyIndicator.hide();\n        getDialog(oLabelMadetoryFields.getText());\n    } else {\n        sap.ui.core.BusyIndicator.show(0);\n        var options = {\n            data: {\n                \"matlNum\": oComboBoxProduct.getValue(),\n                \"country\": oComboBoxCountry.getSelectedKey(),\n                \"variant_code\": cmboVariant.getValue(),\n                \"ptType\": \"\",\n                \"ptBomStatus\": cmboBOMStatus.getSelectedKey(),\n                \"rscSite\": oComboBoxPTSite.getSelectedKey(),\n                \"businessUnit\": oInputBU.getValue(),\n                \"franchise\": oInputFranchise.getValue(),\n                \"view\": oIconTabBar.getSelectedKey()\n            }\n        };\n        apipost_getSearchDataPTBOM(options);\n\n    }\n}\n\n//build the table data for all version used in change and search.\n/*\n    Parameter Description: \n    oTable: change/display table names\n    data: PTBom header data from the response\n    flag:\n*/\nfunction buildSearchVersionTable(oTable, data, flag) {\n    var itempt_type = [];\n    // Setting the PTType \n    for (var i = 0; i < oComboBoxPTType.getModel().getData().length; i++) {\n        itempt_type.push({\n            key: oComboBoxPTType.getModel().getData()[i].ptType,\n            text: oComboBoxPTType.getModel().getData()[i].description\n        })\n    }\n    // Formatting the dates for start, end\n    for (var i = 0; i < data.length; i++) {\n        // If the status: is submitted for approval then don't show edit icon in action\n        if (data[i].ptBomStatus === g_submitForApprovalStatusData[0].status) {\n            data[i].visible = false;\n        } else if (data[i].ptBomStatus === g_approveStatusData[0].status) {\n            data[i].viewvisible = false;\n        } else {\n            data[i].visible = true;\n        }\n    }\n    oTable.removeAllColumns();\n    var iconItem = [];\n    if (oIconTabBar.getSelectedKey() === g_display_tab) {\n        iconItem.push(new sap.ui.core.Icon({\n            src: \"sap-icon://fa-regular/eye\",\n            visible: \"{viewvisible}\",\n\n            press: function(oEvent) {\n                oButtonFooterSave.setVisible(false);\n                oButtonFooterSubmitApproval.setVisible(false);\n                var rowIndex = parseInt(oEvent.getSource().getBindingContext().sPath.split(\"/\")[1]);\n                var data = oEvent.getSource().getModel().getData()[rowIndex];\n                openTheRowData(data, \"display\");\n            }\n        }).addStyleClass(\"greenicon sapUiTinyMarginTop\"));\n    } else if (oIconTabBar.getSelectedKey() === g_site_tab) {\n        iconItem.push(new sap.ui.core.Icon({\n            src: \"sap-icon://edit\",\n            press: function(oEvent) {\n                var rowIndex = parseInt(oEvent.getSource().getBindingContext().sPath.split(\"/\")[1]);\n                var data = oEvent.getSource().getModel().getData()[rowIndex];\n                if (data.ptBomStatus === g_approveStatusData[0].status || data.ptBomStatus === g_effectiveStatusData[0].status) {\n                    oButtonFooterSave.setEnabled(true);\n                    oButtonFooterSave.setVisible(true);\n                }\n                openTheRowData(data, g_site_tab);\n            }\n        }).addStyleClass(\"greenicon sapUiTinyMarginTop\"));\n    } else {\n        iconItem.push(new sap.ui.core.Icon({\n            src: \"sap-icon://edit\",\n            visible: \"{visible}\",\n            press: function(oEvent) {\n                var rowIndex = parseInt(oEvent.getSource().getBindingContext().sPath.split(\"/\")[1]);\n                var data = oEvent.getSource().getModel().getData()[rowIndex];\n                if (data.ptBomStatus === g_approveStatusData[0].status || data.ptBomStatus === g_effectiveStatusData[0].status) {\n                    oButtonFooterSave.setEnabled(true);\n                    oButtonFooterSave.setVisible(true);\n                }\n                openTheRowData(data, data.ptBomStatus);\n            }\n        }).addStyleClass(\"greenicon sapUiTinyMarginTop\"));\n\n        iconItem.push(new sap.ui.core.Icon({\n            src: \"sap-icon://fa-regular/eye\",\n            visible: \"{viewvisible}\",\n            press: function(oEvent) {\n                var rowIndex = parseInt(oEvent.getSource().getBindingContext().sPath.split(\"/\")[1]);\n                var data = oEvent.getSource().getModel().getData()[rowIndex];\n                openTheRowData(data, \"display\");\n            }\n        }).addStyleClass(\"greenicon sapUiTinyMarginTop\"));\n    }\n\n    oTable.addColumn(new sap.ui.table.Column({\n        width: flag ? \"67px\" : \"90px\",\n        label: new sap.m.Label({\n            text: lblaction.getText()\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.HBox({\n            items: iconItem\n        }),\n    }));\n\n    oTable.addColumn(new sap.ui.table.Column({\n        width: \"6rem\",\n        label: new sap.m.Label({\n            text: lblVersion.getText(),\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.Text({\n            text: \"{verPTBom}\"\n        }),\n        hAlign: \"Center\",\n        filterProperty: \"verPTBom\",\n        sortProperty: \"verPTBom\",\n    }));\n\n    oTable.addColumn(new sap.ui.table.Column({\n        width: \"180px\",\n        label: new sap.m.Label({\n            \n            text: lblStatusGlobal.getText(),\n            \n\n            wrapping: true,\n        }).addStyleClass(\"headeraTextStyle\"),\n        template: new sap.m.HBox({\n                justifyContent: \"Center\",\n                width: \"100%\"\n            })\n            .addItem(new sap.m.Text({\n                    text: \"{ptBomStatus}\"\n                })\n                .addStyleClass('sapUiTinyMarginBegin')),\n        hAlign: \"Center\",\n        filterProperty: \"ptBomStatus\",\n        sortProperty: \"ptBomStatus\",\n    }));\n\n    var oModel = new sap.ui.model.json.JSONModel();\n    oModel.setData(data);\n    oTable.setModel(oModel);\n    oTable.bindRows(\"/\");\n    oTable.setTitle(\"Total (\" + oTable.getModel().getData().length + \")\");\n    oTable.setVisibleRowCount(oTable.getModel().getData().length + 2);\n    sap.ui.core.BusyIndicator.hide(0);\n\n}","request":[],"response":[],"attributes":[]},{"fieldNo":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldName":"Model","fieldParent":99999,"fieldPos":571,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"ff8c53ae-61c2-4002-ffdb-67cd5aacdc77","fieldName":"mdlPtSiteAdGroups","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":572,"fieldType":"neptune.model.object","bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"bf9e6df4-ac87-4cf9-ee6a-7f79fb78763a","fieldName":"oModelObjectFetchCountrys","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":573,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"5da038a4-5bbe-45f1-e571-6d39e8927c9e","fieldName":"model_display_data_holder","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":574,"fieldType":"sap.ui.table.Table","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[{"attribute":"setEnableCache","grouping":"Model","value":"true","script":"","translation":[]},{"attribute":"setCacheType","grouping":"Model","value":"IndexedDB","script":"","translation":[]},{"attribute":"setCacheGlobal","grouping":"Model","value":"true","script":"","translation":[]}]},{"fieldNo":"f4edf18e-aa47-477b-ac81-09cba87f607f","fieldName":"oModelObjectTemplateFields","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":575,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"8302ad1d-64db-4b7b-999f-3acab7b94432","fieldName":"oModelObjectGetPTBomTemplateFields","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":576,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"996cb99d-e6f6-46fc-f954-50a86424dcf5","fieldName":"oModelObjectPLMSource","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":577,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"911d7230-5d09-46b1-893f-c9be88241ecf","fieldName":"mdlUomValues","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":578,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"0daa1201-614d-4ae1-f6cc-9d283191dd9c","fieldName":"oModelObjectMatNumber","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":579,"fieldType":"neptune.model.object","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"d8c98e97-8c1c-42d9-f394-1be192f2108f","fieldName":"model_component_filter_data","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":580,"fieldType":"sap.ui.table.Table","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"cd1455c4-a990-436f-e5a5-fdd220e045ff","fieldName":"modelMaterialType","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":581,"fieldType":"sap.ui.table.Table","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"90305ef0-7c63-434c-e098-c25fbc8dc814","fieldName":"delete_component_holder","fieldParent":"0463e0a0-aa78-4882-8a82-75f2d07405b3","fieldPos":582,"fieldType":"sap.ui.table.Table","bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"20317384-c758-49fe-ce12-8e33c3a17851","fieldName":"API","fieldParent":99999,"fieldPos":583,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"40fc265e-4287-482b-f702-2da201e5826a","fieldName":"post_delete_pending_GlobalComponents","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":584,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"20df2f0a-62f9-4047-ffa5-9586b503973f","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"var materialType = modelMaterialType.getModel().getData();\n\nbuildItemData(xhr.responseJSON, materialType, true, g_approveStatusData[0].status);\n\ndiaPendingComp.close();\n\n//triggering for the Global Workflow to Change the status\nvar ptBOMHeader = oTableHeader.getModel().getData();\n// Use this script in your App or from external systems\nvar options = {\n    data: {\n        subMitData: ptBOMHeader,\n        approverIds: 2\n    }\n};\n\napiupdatePtBomGlobalStatus(options);","translation":[]}]},{"fieldNo":"c8db5d96-c82b-4ba5-d105-95d5f8affe96","fieldName":"postRefreshComp","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":585,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"5233bacb-7dbd-4bda-9c41-1bbeb7cd6983","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"var materialType = modelMaterialType.getModel().getData();\n    for (var i = 0; i < xhr.responseJSON.components.length; i++) {\n        xhr.responseJSON.components[i].editable = false;\n        // Added for componentType,compControlNum, dates noneditable initially\n        xhr.responseJSON.components[i].editableSourceChecked = false;\n        xhr.responseJSON.components[i].editDateFields = true;\n        xhr.responseJSON.components[i].itemNo = (i + 1) * 1;\n    }\nbuildItemData(xhr.responseJSON.components, materialType, false, g_createStatusData[0].status, \"initial\");\nsap.ui.core.BusyIndicator.hide();","translation":[]}]},{"fieldNo":"ff62d162-6faf-4727-e29e-cedce44ec0cd","fieldName":"post_getDisplayData","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":586,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"c0193b13-4fb8-4285-8d89-03f6e6c9e215","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"if (xhr.responseJSON.length > 0) {\n    g_currentPageNoDisplay = 1;\n    if (oIconTabBarPTBOM.getSelectedKey() === \"GLOBAL\") {\n        var flag = oIconTabBar.getSelectedKey() === g_change_tab ? false : true;\n        oMessagePageEmpty.setVisible(false);\n        modelmodel_display_data_holder.setData(xhr.responseJSON);\n        setCreatePagginationView(oTableDisplayPTBOM,\"paginationDisplayGlobal\");\n        oIconTabBar.setExpanded(true);\n        oIconTabBar.setVisible(true);\n        oBarFooter.setVisible(false);\n    } else if (oIconTabBarPTBOM.getSelectedKey() === \"SITE\") {\n        oMessagePageEmpty.setVisible(false);\n        modelmodel_display_data_holder.setData(xhr.responseJSON);\n        setCreatePagginationView(oTableDisplayPTBOMSite,\"paginationDisplaySite\");\n        oIconSiteexcel.setVisible(true);\n        if (chkSiteBOMComponent.getSelected() === true) {\n            oIconSitepdf.setVisible(false);\n        } else {\n            oIconSitepdf.setVisible(true);\n        }\n        ptSiteIconTabBar.setExpanded(true);\n        ptSiteIconTabBar.setVisible(true);\n        oBarFooter.setVisible(false);\n    }\n} else {\n    oIconTabBar.setBusy(false);\n    ptSiteIconTabBar.setBusy(false);\n    oMessagePageEmpty.setVisible(true);\n    if (ptSiteIconTabBar.getSelectedKey() === g_display_tab) {\n        oMessagePageEmpty.setText(oLabelNothingApprovedDisplayBlank.getText());\n    } else {\n        oMessagePageEmpty.setText(oLabelNothingFoundBlankChange.getText());\n    }\n    oIconTabBar.setExpanded(false);\n    ptSiteIconTabBar.setExpanded(false);\n    oPanelCommon.setExpanded(false);\n    oPanelSiteHeaderCommon.setExpanded(false);\n    sap.ui.core.BusyIndicator.hide(0);\n}\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"handleErrors(xhr, status)","translation":[]}]},{"fieldNo":"4f0fd96c-6aa4-4750-c7a0-c5f292890ae3","fieldName":"postGetUserRoles","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":587,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"df6ee65b-a597-490b-8f97-504970ee7d6b","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"var response = xhr.responseJSON;\nvar ptSiteAdGroup = [];\nresponse.forEach(data => {\n    if (data.objName === \"PTBOM\") {\n        g_R = xhr.responseJSON.filter(R => {\n            return R.typeofAccess === \"R\";\n        }).length !== 0;\n        g_W = xhr.responseJSON.filter(W => {\n            return W.typeofAccess === \"W\";\n        }).length !== 0;\n        g_C = xhr.responseJSON.filter(C => {\n            return C.typeofAccess === \"C\";\n        }).length !== 0;\n    } else if (data.objName === \"PT_SITE\") {\n        ptSiteAdGroup.push(data);\n    }\n})\nif (ptSiteAdGroup.length > 0) {\n    mdlPtSiteAdGroups.getModel().setData(ptSiteAdGroup);\n}\n\noButtonPTBOMCreate.setVisible(g_W);\noButtonPTBOMChange.setVisible(g_C);\noButtonPTBOMView.setVisible(g_R);\ngetGlobalData(); // Function which loads all dropdown values basicaly do a fetch oparation.\n\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"handleErrors(xhr, status)","translation":[]}]},{"fieldNo":"1720dbd2-face-4b83-9750-dd75314db0f1","fieldName":"oRestAPIRSCtranslations","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":588,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"38848a1c-af6a-420f-e3b2-9948ccefd185","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"\nvar modelData = xhr.responseJSON;//modeloModelObjectGetPTBomTemplateFields.oData; //child api\n/*For  Label fiedls from translations table */\nupdateLabelTranslations(modelData);","translation":[]}]},{"fieldNo":"b01bce37-688f-4e4c-e3d0-a8656b008022","fieldName":"Global","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":589,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"4e5efe1b-1c2a-4e68-d72b-ecb475cd2bbc","fieldName":"getMatNumberData","fieldParent":"b01bce37-688f-4e4c-e3d0-a8656b008022","fieldPos":590,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"26e3b7bd-ba0d-4003-9cd1-63e2cf9b8682","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"b292c61c-8b13-4293-b745-5719452586e8","fieldName":"getAllTableDataAtOnce","fieldParent":"b01bce37-688f-4e4c-e3d0-a8656b008022","fieldPos":591,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"2ef41b04-ced0-402c-a1a1-f76b11b6ba5c","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"\n//location responseJSON\nxhr.responseJSON.zui_lst_settings_language_location.sort((a, b) => a.location.localeCompare(b.location))\n\nvar locData = xhr.responseJSON.zui_lst_settings_language_location.filter(f=>{\n    return f.location !== \"Global\"\n});\n\n\nvar pt_bom_incomingLoc= xhr.responseJSON.zui_lst_settings_language_location.filter(f=>{\n    return f.incomingLocation === \"GL\"\n});\n\npt_bom_global = pt_bom_incomingLoc[0].location\n\nmodeloComboBoxPTSite.setData(pt_bom_global);\nmodeloComboBoxSitePTSite.setData(locData);\nmodelcomboBoxSitePTType.setData(xhr.responseJSON.zui_lst_settings_language_location)\nmodeloComboBoxPTType.setData(xhr.responseJSON.rsc_config_pttype);\ng_plmSourceData = xhr.responseJSON.rsc_config_ccn_source;\n\nvar globalStatus = xhr.responseJSON.rsc_config_ptbom_status.filter(f => {\n    return f.locationName === pt_bom_global\n})\nglobalStatus.sort((a, b) => a.status.localeCompare(b.status));\nmodelcmboBOMStatus.setData(globalStatus);\nmodelcmboSitePTSiteStatus.setData(globalStatus)\ng_approveStatusData = xhr.responseJSON.rsc_config_ptbom_status.filter(function(item) {\n    return item.locationName === pt_bom_global && Number(item.sequenceNo) === 3;\n});\n\ng_effectiveStatusData = xhr.responseJSON.rsc_config_ptbom_status.filter(function(item) {\n    return item.locationName === pt_bom_global && Number(item.sequenceNo) === 4;\n});\n\ng_createStatusData = xhr.responseJSON.rsc_config_ptbom_status.filter(function(item) {\n    return item.locationName === pt_bom_global && Number(item.sequenceNo) === 1;\n});\n\ng_submitForApprovalStatusData = xhr.responseJSON.rsc_config_ptbom_status.filter(function(item) {\n    return item.locationName === pt_bom_global && Number(item.sequenceNo) === 2;\n});\n// Fetching the UOM based on the language key\nlet languageKey;\ntry{\nlanguageKey = AppCache.userInfo.language ? AppCache.userInfo.language : \"EN\"\n}catch(err){\n    languageKey = \"EN\";\n}\nvar uomValues = xhr.responseJSON.lst_masterdata_uom.filter(f => {\n    return f.LanguageKey === languageKey\n});\n\nmdlUomValues.getModel().setData(uomValues);\n\ng_uomData = xhr.responseJSON.lst_masterdata_uom;\n\n//Material type responseJSON\nmodelmodelMaterialType.setData(xhr.responseJSON.lst_masterdata_materialtype);\nsetTimeout(function() {\n    sap.ui.core.BusyIndicator.hide();\n}, 2000);\noComboBoxCountry.destroyItems();\n// Adding for PTSite \noComboBoxSiteCountry.destroyItems();\nvar newCountry = new sap.ui.core.Item({\n    key: \"{countryName}\",\n    text: \"{countryName}\",\n});\nvar items = xhr.responseJSON.lst_config_country;\nmodeloModelObjectFetchCountrys.setData(items);\noComboBoxCountry.setModel(modeloModelObjectFetchCountrys);\noComboBoxCountry.getModel().getData().sort((a, b) => a.countryName.localeCompare(b.countryName))\n// Adding for PTSite \noComboBoxSiteCountry.setModel(modeloModelObjectFetchCountrys);\noComboBoxSiteCountry.getModel().getData().sort((a, b) => a.countryName.localeCompare(b.countryName))\nmodeloModelObjectFetchCountrys.setSizeLimit(items.length);\noComboBoxCountry.bindAggregation(\"items\", \"/\", newCountry);\n// Adding for PTSite \noComboBoxSiteCountry.bindAggregation(\"items\", \"/\", newCountry);\n","translation":[]}]},{"fieldNo":"685657ea-386f-41c9-ce2c-fc609c521b53","fieldName":"mdlMaterialMasterData","fieldParent":"b01bce37-688f-4e4c-e3d0-a8656b008022","fieldPos":592,"fieldType":"neptune.model.object","bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"c116d1fa-c4b9-4cce-daa0-8ea3986fc337","fieldName":"fileUploadRetrieveS3","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":593,"fieldType":"neptune.folder","script":"","request":[],"response":[],"attributes":[]},{"fieldNo":"aa4c4694-b6bc-4a0a-973a-a8c958c359cb","fieldName":"postAttachmentOnS3","fieldParent":"c116d1fa-c4b9-4cce-daa0-8ea3986fc337","fieldPos":594,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"d02d7f9b-01d3-4184-9712-bdaa7318f3a9","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"\nif (xhr.responseJSON.action === \"RETRIEVE\") {\n    if(xhr.responseJSON.messageType === \"ERROR\"){\n        getDialog(lblErrorRetrievingDoc.getText())\n        sap.ui.core.BusyIndicator.hide();\n    }else{\n          var base64String = arrayBufferToBase64(xhr.responseJSON.file.Body.data);\n    let linkSource = `data:${xhr.responseJSON.file.ContentType};base64,${base64String}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    linkSource = linkSource.split(',')[1]\n    var blob = b64toBlob(linkSource, \"application/pdf\");\n    var blobUrl = URL.createObjectURL(blob);\n    window.open(blobUrl, '_blank');\n    sap.ui.core.BusyIndicator.hide();  \n    }\n\n}\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide(0);\n// showMessageToast(\"File Delete not successful.\");\ngetDialog(\"File Delete not successful.\");\n","translation":[]}]},{"fieldNo":"94da6672-a5d7-4c64-dab2-dad18af2475b","fieldName":"post_getChangedData","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":595,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"e924c8ef-5505-4a15-d47d-55b71e18650c","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"//used Async await to get the responce as need to use some flag which is not posible pass to ajaxSuccess","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"handleErrors(xhr, status)","translation":[]}]},{"fieldNo":"44399b52-6c9f-40cf-d2df-cf360b9796fa","fieldName":"post_getSearchDataPTBOM","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":596,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"52e737ef-1175-4462-b30f-a0d6deff740c","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"if (xhr.responseJSON.length > 0) {\n\n    var pbObj = {\n        productNum: oComboBoxProduct.getValue(),\n        variant: cmboVariant.getValue(),\n        shipToCountry: oComboBoxCountry.getValue()\n    }\n    //pass the response to render it onto the UI if record not locked bt loggedin user\n    checkLock(pbObj, xhr.responseJSON);\n\n} else {\n    oMessagePageEmpty.setVisible(true);\n    if (oIconTabBar.getSelectedKey() === g_display_tab) {\n        oMessagePageEmpty.setText(oLabelNothingApprovedDisplayBlank.getText());\n    } else {\n        oMessagePageEmpty.setText(oLabelNothingFoundBlankChange.getText());\n    }\n    oIconTabBar.setExpanded(false);\n    oPanelCommon.setExpanded(false);\n}\nsap.ui.core.BusyIndicator.hide(0);","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"handleErrors(xhr, status)","translation":[]}]},{"fieldNo":"e9d5d59b-af62-40b5-e5f0-e0e177c215d3","fieldName":"post_getInitialCreateData","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":597,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"1d8b05e8-06db-4cbc-f590-93e9fad46f5f","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":" /* after getting responce from create data script checking the PT-BOM validations and incrementing the version */\n if (xhr.responseJSON.status !== undefined && !xhr.responseJSON.status) {\n     if (xhr.responseJSON.msgCode === 1) {\n         xhr.responseJSON.message = lblcreateExistBOMMessage.getText()\n     } else if (xhr.responseJSON.msgCode === 2) {\n         xhr.responseJSON.message = lblcreateNewRevisionMessage.getText()\n     } else if (xhr.responseJSON.msgCode === 3) {\n         xhr.responseJSON.message = lblcreateNoComponentsMessage.getText()\n     }\n    getDialog(xhr.responseJSON.message)\n     header_version_label.setVisible(false);\n     oPanelCommon.setVisible(false);\n     oPanelCommon.setExpanded(false);\n     oBarFooter.setVisible(false);\n     oIconpdf.setVisible(false);\n     oIconexcel.setVisible(false);\n } else {\n     oButtonPTBOMDisplay.setEnabled(false);\n     oButtonPTBOMView.setEnabled(false);\n     oButtonFooterCancel.setVisible(true);\n     oButtonFooterSave.setVisible(true);\n     oButtonFooterSave.setEnabled(true);\n     oButtonFooterSubmitApproval.setVisible(true);\n     oButtonFooterSubmitApproval.setEnabled(false);\n     oBarFooter.setVisible(true);\n     getComponentTableData(xhr.responseJSON, modelMaterialType.getModel().getData(), \"initial\");\n     header_version_label.setVisible(true);\n     oIconTabBar.setVisible(true);\n     oIconpdf.setVisible(true);\n     oPanelCommon.setVisible(true);\n     oPanelCommon.setExpanded(true);\n     oButtonPTBOMChange.setEnabled(false);\n     oIconexcel.setVisible(true);\n }\n sap.ui.core.BusyIndicator.hide();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"handleErrors(xhr, status)","translation":[]}]},{"fieldNo":"5c4c8ace-7b9c-419c-8436-e9eaeef97a2b","fieldName":"post_saveAndUpdateBom","fieldParent":"20317384-c758-49fe-ce12-8e33c3a17851","fieldPos":598,"fieldType":"neptune.restapi","restSource":"81fa0d3b-0753-4499-acbf-2f7714a664a5","restOperation":"d4a2fe07-5cad-4984-e4d8-84b85be29da0","script":"","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\nif (xhr.responseJSON.sucess !== undefined && !xhr.responseJSON.sucess) {\n    getDialog(oLabelPTBOMCreateExists.getText())\n} else {\n    if (xhr.responseJSON.rsc_ptbom_header.ptBomStatus === g_createStatusData[0].status ||\n        xhr.responseJSON.rsc_ptbom_header.ptBomStatus === g_approveStatusData[0].status) {\n        oButtonFooterSave.setEnabled(true);\n    } else {\n        oButtonFooterSave.setEnabled(false);\n    }\n    xhr.responseJSON.rsc_ptbom_header.headerBOMqty = false;\n    oButtonFooterSubmitApproval.setEnabled(true);\n    oIconpdf.setVisible(true);\n    oIconexcel.setVisible(true);\n    var pt_site = oComboBoxPTSite.getModel().getData();\n    var materialType = modelMaterialType.getModel().getData();\n    for (var i = 0; i < xhr.responseJSON.rsc_ptbom_item.length; i++) {\n        xhr.responseJSON.rsc_ptbom_item[i].editable = false;\n        xhr.responseJSON.rsc_ptbom_item[i].editValue = false;\n        xhr.responseJSON.rsc_ptbom_item[i].editValueAfter = true;\n        xhr.responseJSON.rsc_ptbom_item[i].editableSourceChecked = false;\n        xhr.responseJSON.rsc_ptbom_item[i].editDateFields = false;\n    }\n\n    g_change_detact = false;\n    if (oIconTabBar.getSelectedKey() === g_display_tab || oIconTabBar.getSelectedKey() === g_change_tab) {\n        getDialog(oLabelPTBOMUpdate.getText());\n        buildHeaderData(xhr.responseJSON.rsc_ptbom_header, \"pt_type\", pt_site, xhr.responseJSON.rsc_ptbom_header.ptBomStatus, true);\n    } else if (oIconTabBar.getSelectedKey() === g_create_tab) {\n        getDialog(oLabelPTBOMCreate.getText())\n        buildHeaderData(xhr.responseJSON.rsc_ptbom_header, \"pt_type\", pt_site, xhr.responseJSON.rsc_ptbom_header.ptBomStatus, false);\n    }\n    buildItemData(xhr.responseJSON.rsc_ptbom_item, materialType, true, g_approveStatusData[0].status);\n}","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr, status)","script":"handleErrors(xhr, status)","translation":[]}]}],"ui5_chart":false,"ui5_m":true,"ui5_f":false,"ui5_table":true,"ui5_tnt":false,"ui5_uxap":false,"libHighchart":false,"libHighmap":false}}